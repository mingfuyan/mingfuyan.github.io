<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Solo_Dance的博客</title>
  
  <subtitle>欢迎访问 Solo_Dance的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://solodance.top/"/>
  <updated>2020-01-29T03:10:30.172Z</updated>
  <id>https://solodance.top/</id>
  
  <author>
    <name>Mingfu Yan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SDNU_ACM_ICPC_2020_Winter_Practice_2nd【解题报告】</title>
    <link href="https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_2nd%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/"/>
    <id>https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_2nd%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/</id>
    <published>2020-01-29T02:54:43.243Z</published>
    <updated>2020-01-29T03:10:30.172Z</updated>
    
    <content type="html"><![CDATA[<p>部分参照 <a href="https://blog.csdn.net/The___Flash/article/details/103939876" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_2nd【解题报告】– The__Flash</a>。<br>欢迎评论提问， 纠错</p><p>文章篇幅较长， 请参考右侧<strong>文章目录</strong>食用。</p><p>专题链接： <a href="https://vjudge.net/contest/352473" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_2nd</a></p><a id="more"></a><h2 id="A-HDU-1559-【The-Flash】的矩阵"><a href="#A-HDU-1559-【The-Flash】的矩阵" class="headerlink" title="A HDU 1559 【The__Flash】的矩阵"></a>A HDU 1559 【The__Flash】的矩阵</h2><h3 id="1-题目大意"><a href="#1-题目大意" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个<code>m×n</code>的整数矩阵，在上面找一个<code>x×y</code>的子矩阵，使子矩阵中所有元素的和最大。</p><h3 id="2-分析"><a href="#2-分析" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>一开始我以为是最大子矩阵和,  做了几个题回来发现就是个二维前缀和.</p><h3 id="3-AC代码"><a href="#3-AC代码" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1003</span>][<span class="number">1003</span>];</span><br><span class="line"><span class="keyword">int</span> m, n, x, y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    read(t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        read(m), read(n), read(x), read(y);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line">                read(a[i][j]);</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span> &amp;&amp; j != <span class="number">0</span>)&#123;</span><br><span class="line">                    a[i][j] += a[i][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; j == <span class="number">0</span>)&#123;</span><br><span class="line">                    a[i][j] += a[i - <span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; j != <span class="number">0</span>)&#123;</span><br><span class="line">                    a[i][j] += a[i - <span class="number">1</span>][j] + a[i][j - <span class="number">1</span>] - a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>, temp;</span><br><span class="line">        x--, y--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - x; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - y; ++j)&#123;</span><br><span class="line">                temp = a[i + x][j + y];</span><br><span class="line">                <span class="keyword">if</span> (i)</span><br><span class="line">                    temp -= a[i - <span class="number">1</span>][j + y];</span><br><span class="line">                <span class="keyword">if</span> (j)</span><br><span class="line">                    temp -= a[i + x][j - <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (i &amp;&amp; j)</span><br><span class="line">                    temp += a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                ans = max(ans, temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-HDU-3790-【The-Flash】的疑惑"><a href="#B-HDU-3790-【The-Flash】的疑惑" class="headerlink" title="B HDU 3790 【The__Flash】的疑惑"></a>B HDU 3790 【The__Flash】的疑惑</h2><h3 id="1-题目大意-1"><a href="#1-题目大意-1" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你n个点，m条无向边，每条边都有长度d和花费p，给你起点s终点t，要求输出起点到终点的最短距离及其花费，如果最短距离有多条路线，则输出花费最少的。</p><h3 id="2-分析-1"><a href="#2-分析-1" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>就是个最短路, 需要维护两个东西, 最短距离和花费.</p><h3 id="3-AC代码-1"><a href="#3-AC代码-1" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, w, c, ne;</span><br><span class="line">&#125;ed[<span class="number">200005</span>];</span><br><span class="line"><span class="keyword">int</span> head[N], dis[N], dis1[N], vis[N], cnt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ms(head, <span class="number">-1</span>);</span><br><span class="line">    ms(dis, INF);</span><br><span class="line">    ms(dis1, INF);</span><br><span class="line">    ms(vis, <span class="number">0</span>);</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    ed[cnt] = &#123;v, w, c, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    dis1[u] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, u));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">         u = q.top().second;</span><br><span class="line">         q.pop();</span><br><span class="line">         <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">         vis[u] = <span class="number">1</span>;</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">             <span class="keyword">int</span> v = ed[i].v, w = ed[i].w, c = ed[i].c;</span><br><span class="line">             <span class="comment">// 维护dis 和 dis1</span></span><br><span class="line">             <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                 dis[v] = dis[u] + w;</span><br><span class="line">                 dis1[v] = dis1[u] + c;</span><br><span class="line">                 q.push(P(dis[v], v));</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span> (dis[v] == dis[u] + w)&#123;</span><br><span class="line">                 dis1[v] = min(dis1[v], dis1[u] + c);</span><br><span class="line">                 q.push(P(dis[v], v));</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, u, v, w, c, s, t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m))&#123;</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">0</span> &amp;&amp; n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            read(u), read(v), read(w), read(c);</span><br><span class="line">            add(u, v, w, c);</span><br><span class="line">            add(v, u, w, c);</span><br><span class="line">        &#125;</span><br><span class="line">        read(s), read(t);</span><br><span class="line">        dijk(s);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; dis[t] &lt;&lt; <span class="string">' '</span> &lt;&lt; dis1[t] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-CodeForces-670C-【The-Flash】的电影"><a href="#C-CodeForces-670C-【The-Flash】的电影" class="headerlink" title="C CodeForces 670C 【The__Flash】的电影"></a>C CodeForces 670C 【The__Flash】的电影</h2><h3 id="1-题目大意-2"><a href="#1-题目大意-2" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>有n个人， 每个人只会一种语言， 然后有m场电影， 电影的声音和字幕是两种不同的语言， 问 选择哪一场电影， 使得能听懂的人最多， 如果能听懂的一样多， 那么就使能看懂的人最多， 如果听懂的和看懂的都一样多，  输出其中任何一场电影都行。</p><h3 id="2-分析-2"><a href="#2-分析-2" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>比较直观的想法， 统计每个语言会的人数， 遍历m场电影， 选择能听懂的最大的， 如果能听懂的一样多， 选择能看懂的最大的。（由于数据太大进行离散化处理）</p><p>我当时没直接离散化，偷懒用的map， wa了两次，最后 还是用map， set卡过了<code>(*^▽^*)</code></p><p>下面贴离散化的做法</p><h3 id="3-AC代码-2"><a href="#3-AC代码-2" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">10007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[N], b[N], c[N], d[N * <span class="number">3</span>], num[N];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> lower_bound(d + <span class="number">1</span>, d + len + <span class="number">1</span>, x) - d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = read();</span><br><span class="line">    m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) b[i] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) c[i] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) d[++len] = a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) d[++len] = b[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) d[++len] = c[i];</span><br><span class="line">    sort(d + <span class="number">1</span>, d + len + <span class="number">1</span>);</span><br><span class="line">    len = unique(d + <span class="number">1</span>, d + len + <span class="number">1</span>) - (d + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) num[f(a[i])]++;</span><br><span class="line">    <span class="keyword">int</span> mx1 = <span class="number">-1</span>, mx2 = <span class="number">-1</span>, id;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)&#123;</span><br><span class="line">        b[i] = f(b[i]) ,c[i] = f(c[i]);</span><br><span class="line">        <span class="keyword">if</span> (mx1 &lt; num[b[i]] || mx1 == num[b[i]] &amp;&amp; mx2 &lt; num[c[i]])&#123;</span><br><span class="line">            mx1 = num[b[i]];</span><br><span class="line">            mx2 = num[c[i]];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; id &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继"><a href="#4-后继" class="headerlink" title="4. 后继"></a>4. 后继</h3><p>打算写一篇关于 unique 用法的博客， 写完了回来补上。</p><h2 id="D-UVA-10305-【The-Flash】的排序"><a href="#D-UVA-10305-【The-Flash】的排序" class="headerlink" title="D UVA 10305 【The__Flash】的排序"></a>D UVA 10305 【The__Flash】的排序</h2><h3 id="1-题目大意-3"><a href="#1-题目大意-3" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>拓扑排序裸题</p><h3 id="2-分析-3"><a href="#2-分析-3" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>拓扑排序裸题</p><h3 id="3-AC代码-3"><a href="#3-AC代码-3" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, a, b, in[<span class="number">102</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ve[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        ve[i].clear();</span><br><span class="line">        in[i] = <span class="number">0</span>;</span><br><span class="line">        ans.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m) &amp;&amp; (m || n))&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            read(a), read(b);</span><br><span class="line">            ve[a].push_back(b);</span><br><span class="line">            in[b]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (in[i] == <span class="number">0</span>) q.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">            <span class="keyword">int</span> u = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            ans.push_back(u);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ve[u].size(); ++i)&#123;</span><br><span class="line">                <span class="keyword">int</span> v = ve[u][i];</span><br><span class="line">                in[v]--;</span><br><span class="line">                <span class="keyword">if</span>(in[v] == <span class="number">0</span>) q.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans.size() - <span class="number">1</span>; ++i)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans.back() &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-HDU-4578-【The-Flash】的操作"><a href="#E-HDU-4578-【The-Flash】的操作" class="headerlink" title="E HDU 4578 【The__Flash】的操作"></a>E HDU 4578 【The__Flash】的操作</h2><h3 id="1-题目大意-4"><a href="#1-题目大意-4" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>裸线段树， 就是有些许麻烦。4个操作</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>x y c 将[x, y]区间的数加c</span><br><span class="line"><span class="symbol">2 </span>x y c 将[x, y]区间的数乘c</span><br><span class="line"><span class="symbol">3 </span>x y c 将[x, y]区间的数重置为c</span><br><span class="line"><span class="symbol">4 </span>x y p 输出[x, y]区间的数的 p次方和</span><br></pre></td></tr></table></figure><h3 id="2-分析-4"><a href="#2-分析-4" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>两种做法， 先说第一种也是通俗易懂的一种但是代码写起来很抓狂。。。<br>3个lazy数组， 3个存值数组</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">add</span><span class="selector-attr">[i]</span> 加标记</span><br><span class="line"><span class="selector-tag">mul</span><span class="selector-attr">[i]</span> 乘标记</span><br><span class="line"><span class="selector-tag">sett</span><span class="selector-attr">[i]</span> 重置标记</span><br><span class="line"><span class="selector-tag">sum</span><span class="selector-attr">[i]</span> 1次方和</span><br><span class="line"><span class="selector-tag">sum2</span><span class="selector-attr">[i]</span> 2次方和</span><br><span class="line"><span class="selector-tag">sum3</span><span class="selector-attr">[i]</span> 3次方和</span><br></pre></td></tr></table></figure><p>难弄的是add[i] 的 二、三次方和 怎么求。酱紫</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sum2[rt] = (a + add) ^ <span class="number">2</span> + (b + add) ^ <span class="number">2</span> + (c + add) ^ <span class="number">2</span></span><br><span class="line">= (a^<span class="number">2</span> + b^<span class="number">2</span> + c^<span class="number">2</span>) + <span class="number">2</span> * add * (a + b + c) + <span class="number">3</span> * val ^ <span class="number">2</span></span><br><span class="line">= sum2[rt] + <span class="number">2</span> * add[rt] * <span class="built_in">sum</span>[rt] + (r - l + <span class="number">1</span>) * add[rt] * add[rt]</span><br><span class="line"></span><br><span class="line">sum3[rt] = (a + add) ^ <span class="number">3</span> + (b + add) ^ <span class="number">3</span> + (c + add) ^ <span class="number">3</span></span><br><span class="line">= (a^<span class="number">3</span> + b^<span class="number">3</span> + c ^ <span class="number">3</span>) + <span class="number">3</span> * add * (a^<span class="number">2</span> + b^<span class="number">2</span> + c^<span class="number">2</span>) + <span class="number">3</span> * add * add * (a + b + c) + <span class="number">3</span> * add * add * add</span><br><span class="line"> = sum3[rt] + <span class="number">3</span> * add[rt] * sum2[rt] + <span class="number">3</span> * add[rt] * add[rt] + <span class="built_in">sum</span>[rt] + (r - l + <span class="number">1</span>) * add[rt] * add[rt] * add[rt]</span><br></pre></td></tr></table></figure><p>然后就是快乐了写代码时间了， 记得注意取余（因为取余我debug了2小时+ <code>o(╥﹏╥)o</code>）</p><p>第二种， 只用一个lazy数组， 太妙了， 它是以区间里的数是否相等作为lazy数组</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag[<span class="built_in">i</span>] <span class="built_in">i</span>表示的区间里的数是否相等</span><br><span class="line">val[<span class="built_in">i</span>] <span class="built_in">i</span>表示的区间里的数的值</span><br></pre></td></tr></table></figure><h3 id="3-AC代码-4"><a href="#3-AC代码-4" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><p>第一种方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">10007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mul[N &lt;&lt; <span class="number">2</span>], sett[N &lt;&lt; <span class="number">2</span>], add[N &lt;&lt; <span class="number">2</span>], sum[N &lt;&lt; <span class="number">2</span>], sum2[N &lt;&lt; <span class="number">2</span>], sum3[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    sum3[rt] = (sum3[rt &lt;&lt; <span class="number">1</span>] + sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">    sum2[rt] = (sum2[rt &lt;&lt; <span class="number">1</span>] + sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">    sum[rt] = (sum[rt &lt;&lt; <span class="number">1</span>] + sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    sett[rt] = add[rt] = <span class="number">0</span>;</span><br><span class="line">    mul[rt] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        sum[rt] = sum2[rt] = sum3[rt] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    build(l, m, rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    build(m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sett[rt]) &#123;</span><br><span class="line">        sett[rt &lt;&lt; <span class="number">1</span>] = sett[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = sett[rt];</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span>] = add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">0</span>;    <span class="comment">//注意这个也要下放</span></span><br><span class="line">        mul[rt &lt;&lt; <span class="number">1</span>] = mul[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = ((sett[rt] * sett[rt]) % mod) * sett[rt] % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span>] = ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * (sett[rt]) % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = ((len &gt;&gt; <span class="number">1</span>) % mod) * (sett[rt]) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span>] = ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * ((sett[rt] * sett[rt]) % mod) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = ((len &gt;&gt; <span class="number">1</span>) % mod) * ((sett[rt] * sett[rt]) % mod) % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span>] = ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * tmp % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = ((len &gt;&gt; <span class="number">1</span>) % mod) * tmp % mod;</span><br><span class="line">        sett[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mul[rt] != <span class="number">1</span>) &#123;    <span class="comment">//这个就是mul[rt] != 1 ， 当时我这里没注意所以TLE了</span></span><br><span class="line">        mul[rt &lt;&lt; <span class="number">1</span>] = (mul[rt &lt;&lt; <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        mul[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (mul[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        <span class="keyword">int</span> tmp = (((mul[rt] * mul[rt]) % mod * mul[rt]) % mod);</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span>] % mod) * ((mul[rt] * mul[rt]) % mod) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] % mod) * ((mul[rt] * mul[rt]) % mod) % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span>] % mod) * tmp % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] % mod) * tmp % mod;</span><br><span class="line">        mul[rt] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (add[rt]) &#123;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span>] + add[rt]) % mod;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + add[rt]) % mod;</span><br><span class="line">        <span class="keyword">int</span> tmp = (add[rt] * add[rt] % mod) * add[rt] % mod;        <span class="comment">//注意sum3 , sum2 , sum的先后顺序</span></span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span>] + tmp * (len - (len &gt;&gt; <span class="number">1</span>) % mod) % mod + <span class="number">3</span> * add[rt] * sum2[rt &lt;&lt; <span class="number">1</span>] % mod +</span><br><span class="line">                 <span class="number">3</span> * add[rt] * add[rt] % mod * sum[rt &lt;&lt; <span class="number">1</span>]) % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + tmp * ((len &gt;&gt; <span class="number">1</span>) % mod) % mod + <span class="number">3</span> * add[rt] * sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] % mod +</span><br><span class="line">                         <span class="number">3</span> * add[rt] * add[rt] % mod * sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span>] + ((add[rt] * add[rt] % mod) * ((len - (len &gt;&gt; <span class="number">1</span>)) % mod)) % mod +</span><br><span class="line">                         (<span class="number">2</span> * sum[rt &lt;&lt; <span class="number">1</span>] * add[rt] % mod)) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + (((add[rt] * add[rt] % mod) * ((len &gt;&gt; <span class="number">1</span>)) % mod)) % mod +</span><br><span class="line">                             (<span class="number">2</span> * sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * add[rt] % mod)) % mod;</span><br><span class="line"></span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span>] + ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * add[rt] % mod) % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + ((len &gt;&gt; <span class="number">1</span>) % mod) * add[rt] % mod) % mod;</span><br><span class="line">        add[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> c, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R) &#123;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">3</span>) &#123;</span><br><span class="line">            sett[rt] = c;</span><br><span class="line">            add[rt] = <span class="number">0</span>;</span><br><span class="line">            mul[rt] = <span class="number">1</span>;</span><br><span class="line">            sum[rt] = ((r - l + <span class="number">1</span>) % mod * c) % mod;</span><br><span class="line">            sum2[rt] = ((r - l + <span class="number">1</span>) % mod * ((c * c) % mod)) % mod;</span><br><span class="line">            sum3[rt] = ((r - l + <span class="number">1</span>) % mod * (((c * c) % mod) * c % mod)) % mod;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>) &#123;</span><br><span class="line">            mul[rt] = (mul[rt] * c) % mod;</span><br><span class="line">            add[rt] = (add[rt] * c) % mod;</span><br><span class="line">            sum[rt] = (sum[rt] * c) % mod;</span><br><span class="line">            sum2[rt] = sum2[rt] * (c * c % mod) % mod;</span><br><span class="line">            sum3[rt] = sum3[rt] * ((c * c % mod) * c % mod) % mod;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line">            add[rt] = (add[rt] + c) % mod;</span><br><span class="line">            <span class="keyword">int</span> tmp = (((c * c) % mod * c) % mod * (r - l + <span class="number">1</span>) % mod) % mod;</span><br><span class="line">            sum3[rt] = (sum3[rt] + tmp + <span class="number">3</span> * c * sum2[rt] % mod + <span class="number">3</span> * c * c % mod * sum[rt]) % mod;</span><br><span class="line">            sum2[rt] = (sum2[rt] + (c * c % mod * ((r - l + <span class="number">1</span>) % mod)) % mod + <span class="number">2</span> * sum[rt] * c % mod) % mod;</span><br><span class="line">            sum[rt] = (sum[rt] + (r - l + <span class="number">1</span>) % mod * c % mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt, r - l + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L) update(op, L, R, c, l, m, rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R) update(op, L, R, c, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> sum[rt];</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> sum2[rt];</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> sum3[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt, r - l + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L)</span><br><span class="line">        ans = (ans + query(L, R, p, l, m, rt &lt;&lt; <span class="number">1</span>)) % mod;</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R)</span><br><span class="line">        ans = (ans + query(L, R, p, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>)) % mod;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, op, x, y, c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!m &amp;&amp; !n) <span class="keyword">break</span>;</span><br><span class="line">        build(<span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">            op = read(), x = read(), y = read(), c = read();</span><br><span class="line">            <span class="keyword">if</span> (op &lt;= <span class="number">3</span>)</span><br><span class="line">                update(op, x, y, c, <span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, query(x, y, c, <span class="number">1</span>, n, <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">10007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> val[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ms(flag, <span class="literal">true</span>);</span><br><span class="line">    ms(val, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> c, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R &amp;&amp; flag[rt])&#123;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">            val[rt] = (val[rt] + c) % mod;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>)</span><br><span class="line">            val[rt] = (val[rt] * c) % mod;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>)</span><br><span class="line">            val[rt] = c;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag[rt])&#123; <span class="comment">// pushdown</span></span><br><span class="line">        flag[rt &lt;&lt; <span class="number">1</span>] = flag[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        flag[rt] = <span class="number">0</span>;</span><br><span class="line">        val[rt &lt;&lt; <span class="number">1</span>] = val[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = val[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L)</span><br><span class="line">        update(op, L, R, c, l, m, rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R)</span><br><span class="line">        update(op, L, R, c, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag[rt &lt;&lt; <span class="number">1</span>] &amp;&amp; flag[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span> (val[rt &lt;&lt; <span class="number">1</span>] == val[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])&#123;</span><br><span class="line">            flag[rt] = <span class="number">1</span>;</span><br><span class="line">            val[rt] = val[rt &lt;&lt; <span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> flag[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> flag[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R &amp;&amp; flag[rt])&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; ++i)&#123;</span><br><span class="line">            ans = (ans * val[rt]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = ans * (r - l + <span class="number">1</span>) % mod;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag[rt])&#123;</span><br><span class="line">        flag[rt &lt;&lt; <span class="number">1</span>] = flag[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        flag[rt] = <span class="number">0</span>;</span><br><span class="line">        val[rt &lt;&lt; <span class="number">1</span>] = val[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = val[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L)</span><br><span class="line">        ans += query(L, R, p, l, m, rt &lt;&lt; <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R)</span><br><span class="line">        ans += query(L, R, p, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m))&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> &amp;&amp; m == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> x, y, op, c;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            op = read(), x = read(), y = read(), c = read();</span><br><span class="line">            <span class="keyword">if</span> (op &lt;= <span class="number">3</span>)</span><br><span class="line">                update(op, x, y, c, <span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, query(x, y, c, <span class="number">1</span>, n, <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-1"><a href="#4-后继-1" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>线段树要开4倍空间, <a href="https://www.baidu.com/s?ie=UTF-8&wd=%E4%B8%BA%E4%BB%80%E4%B9%88%E7%BA%BF%E6%AE%B5%E6%A0%91%E8%A6%81%E5%BC%804%E5%80%8D%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">为什么</a></li><li>传lazy数组时， 不仅值要更新， lazy数组也要更新</li><li>update， build操作完， 别忘了pushup</li><li>uodate操作更新lazy数组时， 别忘了更新值。</li><li>左子树的区间长度<code>(len - (len &gt;&gt; 1))</code>&gt;= 右子树的区间长度 <code>(len &gt;&gt; 1)</code></li></ol><h2 id="F-CodeForces-797B-【The-Flash】的序列"><a href="#F-CodeForces-797B-【The-Flash】的序列" class="headerlink" title="F CodeForces 797B 【The__Flash】的序列"></a>F CodeForces 797B 【The__Flash】的序列</h2><h3 id="1-题目大意-5"><a href="#1-题目大意-5" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个序列， 找出一个子序列， 使得其和为奇数且最大。</p><h3 id="2-分析-5"><a href="#2-分析-5" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>先求出最大和， 也就是把大于0的数都加起来， 如果是奇数就输出， 如果是偶数就减去绝对值最小的奇数。</p><h3 id="3-AC代码-5"><a href="#3-AC代码-5" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">100000</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            sum += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &amp; <span class="number">1</span>)</span><br><span class="line">            flag = min(flag, <span class="built_in">abs</span>(a[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &amp; <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; sum - flag &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-CodeForces-1223B-【The-Flash】的水题"><a href="#G-CodeForces-1223B-【The-Flash】的水题" class="headerlink" title="G CodeForces 1223B 【The__Flash】的水题"></a>G CodeForces 1223B 【The__Flash】的水题</h2><h3 id="1-题目大意-6"><a href="#1-题目大意-6" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>字符串可以进行这样一个操作， 将相邻的字符（a ， b）变成（a， a）或者 （b， b）<br>可以进行任意次这种操作</p><h3 id="2-分析-6"><a href="#2-分析-6" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>进行任意次操作后， 字符串里的字符就全一样了， 所以只需要判断两个字符串中是否有相同的字符即可。<br>把第一个字符串所有字符塞到<code>set&lt;char&gt;</code>里， 然后遍历第二个字符串， 看看能不能从里面找出一样的。</p><h3 id="3-AC代码-6"><a href="#3-AC代码-6" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt;se;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    read(t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        se.clear();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length(); ++i) se.insert(a[i]);</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.length(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (se.find(b[i]) != se.end())&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H-CodeForces-960B-【The-Flash】的赠予"><a href="#H-CodeForces-960B-【The-Flash】的赠予" class="headerlink" title="H CodeForces 960B 【The__Flash】的赠予"></a>H CodeForces 960B 【The__Flash】的赠予</h2><h3 id="1-题目大意-7"><a href="#1-题目大意-7" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你两个序列a, b， 定义<code>E = (ai - bi) ^ 2 | i : 1 - n</code> , 每一次操作可以使序列中的某个数加1或者减1， 问对序列a进行k1次操作， b进行k2次操作后E的最小值。</p><h3 id="2-分析-7"><a href="#2-分析-7" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>每一次操作就是使 <code>|ai - bi|</code>的值减小1， 因为要求最小值， 所以对<code>|ai - bi|</code>的值越大的 操作 越值得。 例如： 对9 减1后， 实际减小的值为 <code>9 ^ 2 - 8 ^ 2 = 17</code>, 对8 减1后， 实际减小的值为 <code>8 ^ 2 - 7 ^ 2 = 15</code>, 可见对<code>|ai - bi|</code>的值越大的 操作 越值得。<br>然后就是把<code>|ai  - bi|</code>塞进优先队列里， 每次取top 对其减一， 执行k1 + k2次即可。</p><h3 id="3-AC代码-7"><a href="#3-AC代码-7" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1003</span>], b[<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k1, k2;</span><br><span class="line">    read(n), read(k1), read(k2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        read(a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        read(b[i]);</span><br><span class="line">        q.push(<span class="built_in">abs</span>(a[i] - b[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = k1 + k2;</span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        q.push(<span class="built_in">abs</span>(u - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        ans += <span class="number">1l</span>l * u * u; <span class="comment">// 注意会爆long long</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-2"><a href="#4-后继-2" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>会爆ll， 前面 <code>* 1ll</code>。</li></ol><h2 id="I-SCU-4444-【The-Flash】的旅行"><a href="#I-SCU-4444-【The-Flash】的旅行" class="headerlink" title="I SCU 4444 【The__Flash】的旅行"></a>I SCU 4444 【The__Flash】的旅行</h2><h3 id="1-题目大意-8"><a href="#1-题目大意-8" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>n个城市<code>（1 - n）</code>， 有<code>n * (n - 1) / 2</code>条路， 其中有m条路权值为a（具体哪m条已给出）， 剩下的权值为b， 无向图， 问城市1到城市n的最短路。</p><h3 id="2-分析-8"><a href="#2-分析-8" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>打比赛的时候想的有点多， 其中有一个情况没想出来，<code>o(╥﹏╥)o</code></p><p>肯定要分为 <code>a &lt;= b</code> 和  <code>a &gt; b</code></p><p>当<code>a &lt;= b</code>时， 如果dis[1][n] == a, 那就是a。 否则跑a的最短路dis[1][n], 答案就是<code>min(dis[1][n], b)</code>。<br>当<code>a &gt; b</code>时， 如果dis[1][n] == b , 那就是b。<br>否则， 判断m条a边是不是把 城市1 或 城市n 堵上， 换句话说， 判断城市1 或者城市n所连的所有边是不是都是权值为a的边， 如果 城市1 或者城市n全是， 那么答案就是a， 因为 如果被全堵上， 走两条边的话， 其中一条边肯定是a边， 那就不如直接走1-n了。 如果都没被堵上， 答案就是走一条a边和走2条b边的最小值 <code>min(a, 2 * b)</code>。</p><p>如果不会自定义优先队列优先级， 请戳 <a href="https://solodance.top/2020/01/27/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%AE%9A%E4%B9%89%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/">优先队列定义优先级的方法</a></p><h3 id="3-AC代码-8"><a href="#3-AC代码-8" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, w, ne;</span><br><span class="line">&#125;ed[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[N], vis[N], cnt;</span><br><span class="line">ll dis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, a, b;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        head[i] = <span class="number">-1</span>, vis[i] = <span class="number">0</span>, dis[i] = llINF;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    ed[cnt] = &#123;v, w, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt; , greater&lt;P&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, u));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        u = q.top().second;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                q.push(P(dis[v], v));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u, v, dis1n, in1, in2;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;a, &amp;b))&#123;</span><br><span class="line">        init();</span><br><span class="line">        dis1n = b;</span><br><span class="line">        in1 = in2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            read(u), read(v);</span><br><span class="line">            <span class="keyword">if</span> (u &gt; v) swap(u, v);</span><br><span class="line">            add(u, v, a);</span><br><span class="line">            add(v, u, a);</span><br><span class="line">            <span class="keyword">if</span> (u == <span class="number">1</span>) in1++;</span><br><span class="line">            <span class="keyword">if</span> (v == n) in2++;</span><br><span class="line">            <span class="keyword">if</span> (u == <span class="number">1</span> &amp;&amp; v == n) dis1n = a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a &lt;= b)&#123;</span><br><span class="line">            <span class="keyword">if</span> (dis1n == a) <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                dijk(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (dis[n] &lt;= b) <span class="built_in">cout</span> &lt;&lt; dis[n] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (dis1n == b)&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (in1 == n - <span class="number">1</span>) sum++;</span><br><span class="line">            <span class="keyword">if</span> (in2 == n - <span class="number">1</span>) sum++;</span><br><span class="line">            <span class="keyword">if</span> (sum &gt;= <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; min(a, <span class="number">2</span> * b) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J-HDU-1556-【The-Flash】的球球"><a href="#J-HDU-1556-【The-Flash】的球球" class="headerlink" title="J HDU 1556 【The__Flash】的球球"></a>J HDU 1556 【The__Flash】的球球</h2><h3 id="1-题目大意-9"><a href="#1-题目大意-9" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>中文题， qaq<br>N个气球排成一排，从左到右依次编号为1,2,3….N.每次给定2个整数a b(a &lt;= b),lele便为骑上他的“小飞鸽”牌电动车从气球a开始到气球b依次给每个气球涂一次颜色。但是N次以后lele已经忘记了第I个气球已经涂过几次颜色了，你能帮他算出每个气球被涂过几次颜色吗？</p><h3 id="2-分析-9"><a href="#2-分析-9" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>差分模板题。</p><h3 id="3-AC代码-9"><a href="#3-AC代码-9" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, l, r;</span><br><span class="line"><span class="keyword">int</span> diff[N], ans[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)&#123;</span><br><span class="line">        ms(diff, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            read(l), read(r);</span><br><span class="line">            diff[l] ++;</span><br><span class="line">            diff[r + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> add = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            add += diff[i];</span><br><span class="line">            ans[i] = add;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans[n] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K-POJ-2018-【The-Flash】的牛牛"><a href="#K-POJ-2018-【The-Flash】的牛牛" class="headerlink" title="K POJ 2018 【The__Flash】的牛牛"></a>K POJ 2018 【The__Flash】的牛牛</h2><h3 id="1-题目大意-10"><a href="#1-题目大意-10" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个长为n（<code>n &lt;= 1e5</code>）的序列， 求其长度至少为F区间， 其平均值*1000的最大值。</p><h3 id="2-分析-10"><a href="#2-分析-10" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>一开始以为是dp， 然后没思路qaq</p><p>二分答案qaq， tql</p><p>没想到居然是二分答案， qaq。</p><p>关键是如何以更小的时间判断二分出来的值 （mid）是不是符合要求的，也就是 判断 长度至少为F的区间的平均值， 有没有大于mid的。</p><p>先说二分， 我要求最大的满足条件的数， 所以就是从后向前查询。 从后向前详情请点击 <a href="https://solodance.top/2020/01/23/%E4%BA%8C%E5%88%86%E6%80%BB%E7%BB%93/">二分总结</a></p><p>然后如何判断呢， 那就把区间都减去mid， 就变成找一段区间[l, r]， 使 <code>sum[r] - sum[l - 1] &gt;= 0</code> , 这样记录 sum[l - 1]的最小值即可。</p><p>还有一种做法， 请参考 <a href="https://www.cnblogs.com/liucongyu/p/6357610.html" target="_blank" rel="noopener">POJ2018 Best Cow Fences (二分答案+类前缀和)</a></p><h3 id="3-AC代码-10"><a href="#3-AC代码-10" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><p>第一种做法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">double</span> sum[N];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        sum[i] = a[i] - x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        sum[i] += sum[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">double</span> mi = INF * <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt;= n; ++i)&#123;</span><br><span class="line">        mi = min(mi, sum[i - k]);</span><br><span class="line">        <span class="keyword">if</span> (sum[i] - mi &gt;= -eps) <span class="comment">// 特别注意这里。。</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n), read(k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">2000000</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        m = l + (r - l + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (is(<span class="number">1.0</span> * m / <span class="number">1000</span>))</span><br><span class="line">            l = m;</span><br><span class="line">        <span class="keyword">else</span> r = m - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; l &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种做法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">double</span> rsum[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">    rsum[n] = a[n] - x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">        rsum[i] = a[i] - x;</span><br><span class="line">        <span class="keyword">if</span> (rsum[i + <span class="number">1</span>] &gt; <span class="number">0</span>) rsum[i] += rsum[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - k + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum[i + k - <span class="number">1</span>] - sum[i - <span class="number">1</span>] &gt;= x * k)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (sum[i + k - <span class="number">1</span>] - sum[i - <span class="number">1</span>] - x * k + rsum[i + k] &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n), read(k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">2000000</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        m = l + (r - l + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (is(<span class="number">1.0</span> * m / <span class="number">1000</span>))</span><br><span class="line">            l = m;</span><br><span class="line">        <span class="keyword">else</span> r = m - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; l &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-3"><a href="#4-后继-3" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>知道如何在O(n)求 长度至少为k的 区间和的最大值</li></ol><h2 id="L-CodeForces-621B-【The-Flash】的鲨鲨"><a href="#L-CodeForces-621B-【The-Flash】的鲨鲨" class="headerlink" title="L CodeForces 621B 【The__Flash】的鲨鲨"></a>L CodeForces 621B 【The__Flash】的鲨鲨</h2><h3 id="1-题目大意-11"><a href="#1-题目大意-11" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>1000 * 1000 的网格中， 处于对角线上的鲨鲨会互相打架， 求有对少对鲨鲨会打架。</p><h3 id="2-分析-11"><a href="#2-分析-11" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>画图可分析， 处于对角线上的鲨鲨满足   <code>x + y = t (0&lt;= t &lt;= 2000)</code> 或者满足 <code>x - y = t (-1000 &lt;= t &lt;= 1000)</code>， 分别用两个数组储存在每一条对角线上的个数， 然后<code>n * (n - 1) / 2</code> 计算即可， 注意<code>x - y</code>的范围， 可以化成 <code>x - y + 1000 = t (0 &lt;= t &lt;= 2000)</code> ， 因为这个我re了两次QAQ</p><h3 id="3-AC代码-11"><a href="#3-AC代码-11" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> hp, atk;</span><br><span class="line">    <span class="keyword">double</span> v;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(x.v - y.v) &lt;= eps)</span><br><span class="line">        <span class="keyword">return</span> x.hp &gt; y.hp;</span><br><span class="line">    <span class="keyword">return</span> x.v &gt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a1[<span class="number">10003</span>], a2[<span class="number">10003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, x, y;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        read(x), read(y);</span><br><span class="line">        a1[x + y]++;</span><br><span class="line">        a2[x - y + <span class="number">1000</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2000</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a1[i] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            ans += ll(a1[i]) * ll(a1[i] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a2[i] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            ans += ll(a2[i]) * ll(a2[i] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-4"><a href="#4-后继-4" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>注意数组下标是不是负数 <code>o(╥﹏╥)o</code></li></ol><h2 id="M-Gym-102222H-【The-Flash】的达拉崩吧斑得贝迪卜多比鲁翁"><a href="#M-Gym-102222H-【The-Flash】的达拉崩吧斑得贝迪卜多比鲁翁" class="headerlink" title="M Gym 102222H 【The__Flash】的达拉崩吧斑得贝迪卜多比鲁翁"></a>M Gym 102222H 【The__Flash】的达拉崩吧斑得贝迪卜多比鲁翁</h2><h3 id="1-题目大意-12"><a href="#1-题目大意-12" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">很久很久以前</span><br><span class="line"></span><br><span class="line">巨龙突然出现</span><br><span class="line"></span><br><span class="line">带来灾难带走了公主又消失不见</span><br><span class="line"></span><br><span class="line">王国十分危险</span><br><span class="line"></span><br><span class="line">世间谁最勇敢</span><br><span class="line"></span><br><span class="line">一位勇者赶来大声喊</span><br><span class="line"></span><br><span class="line">“我要带上最好的剑</span><br><span class="line"></span><br><span class="line">翻过最高的山</span><br><span class="line"></span><br><span class="line">闯进最深的森林</span><br><span class="line"></span><br><span class="line">把公主带回到面前”</span><br><span class="line"></span><br><span class="line">国王非常高兴忙问他的姓名</span><br><span class="line"></span><br><span class="line">年轻人想了想</span><br><span class="line"></span><br><span class="line">他说</span><br><span class="line"></span><br><span class="line">“陛下我叫达拉崩吧斑得贝迪卜多比鲁翁</span><br><span class="line"></span><br><span class="line">再来一次</span><br><span class="line"></span><br><span class="line">达拉崩巴斑得贝迪卜多比鲁翁”</span><br><span class="line"></span><br><span class="line">“是不是达拉崩吧斑得贝迪卜多比鲁翁”</span><br><span class="line"></span><br><span class="line">“对对达拉崩巴斑得贝迪卜多比鲁翁”</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">幽幽小路上，英雄达拉崩吧遇到 <span class="keyword">n</span> 只怪兽</span><br><span class="line"></span><br><span class="line">每只怪兽有其相应的体力值 HP 和 攻击值 ATK</span><br><span class="line"></span><br><span class="line">达拉崩吧每次可对怪物造成一次伤害，伤害值为 K（其中，K 在数值上为达拉崩吧攻击这只怪兽的次数）</span><br><span class="line"></span><br><span class="line">然鹅，每次存活的怪兽都可以攻击我们的英雄达拉崩吧</span><br><span class="line"></span><br><span class="line">当怪兽的体力值小于等于时，怪兽死亡.</span><br><span class="line"></span><br><span class="line">现请你选择一种打怪兽的顺序，使得达拉崩吧收到的伤害和最小，并输出收到最小的伤害和.</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「The___Flash」的原创文章，遵循 <span class="keyword">CC</span> 4.0 <span class="keyword">BY</span>-<span class="keyword">SA</span> 版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:<span class="comment">//blog.csdn.net/The___Flash/article/details/103939876</span></span><br></pre></td></tr></table></figure><h3 id="2-分析-12"><a href="#2-分析-12" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>显而易见， 贪心， 但是当时没会用理解的思维推理， 而是臆测， 不过差一点（很多）就猜对了QAQ</p><p>最优情况肯定是把一只怪兽打到死。先只考虑攻击两只怪兽的优先级问题。</p><p>设t[i] 是把第i只怪兽打死需要的次数， sum是所有怪兽的总攻击力和</p><p>先进攻第一只 所受的攻击 是 <code>sum * t[1] + (sum - atk[1]) * t[2]</code><br>先进攻第二只 所受的攻击 是 <code>sum * t[2] + (sum - atk[2]) * t[1]</code></p><p>如果要先攻击第二只</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum * t[<span class="number">1</span>] + (sum - atk[<span class="number">1</span>]) * t[<span class="number">2</span>] &gt;= sum * t[<span class="number">2</span>] + (sum - atk[<span class="number">2</span>]) * t[<span class="number">1</span>]</span><br><span class="line">sum * t[<span class="number">1</span>] + sum * t[<span class="number">2</span>] - atk[<span class="number">1</span>] * t[<span class="number">2</span>] &gt;= sum * t[<span class="number">2</span>] + sum * t[<span class="number">1</span>] - atk[<span class="number">2</span>] * t[<span class="number">1</span>]</span><br><span class="line">atk[<span class="number">2</span>] * t[<span class="number">1</span>] &gt;= atk[<span class="number">1</span>] * t[<span class="number">2</span>]</span><br><span class="line">atk[<span class="number">2</span>] / t[<span class="number">2</span>] &gt;= atk[<span class="number">1</span>] / t[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>所以按照 <code>atk[i] / t[i]</code>排序就行。</p><p>那么怎么求把第i只怪兽打死需要的次数呢， 二分次数就行了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> hp, atk;</span><br><span class="line">    <span class="keyword">double</span> v;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(x.v - y.v) &lt;= eps)</span><br><span class="line">        <span class="keyword">return</span> x.hp &gt; y.hp;</span><br><span class="line">    <span class="keyword">return</span> x.v &gt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>, high = <span class="number">500</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(low &lt; high)&#123;</span><br><span class="line">        m = low + (high - low) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (m * (m + <span class="number">1</span>) / <span class="number">2</span> &gt;= x)</span><br><span class="line">            high = m;</span><br><span class="line">        <span class="keyword">else</span> low = m + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t, n;</span><br><span class="line">    ll ans, sum;</span><br><span class="line">    read(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> tt = <span class="number">1</span>; tt &lt;= t; ++tt)&#123;</span><br><span class="line">        read(n);</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            read(a[i].hp), read(a[i].atk);</span><br><span class="line">            a[i].hp = search(a[i].hp);</span><br><span class="line">            a[i].v = <span class="number">1.0</span> * a[i].atk / a[i].hp; <span class="comment">// 这里也可以不用v ， 而直接用 atk[2] * search(hp[1]) &gt;= atk[1] * search(hp[2]) 也行</span></span><br><span class="line">            sum += a[i].atk;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        sort(a, a + n, cmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            ans += sum * (a[i].hp);</span><br><span class="line">            sum -= a[i].atk;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>, tt, ans);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-5"><a href="#4-后继-5" class="headerlink" title="4. 后继"></a>4. 后继</h3><p>常见贪心证明手段：</p><ol><li>临项交换：</li></ol><p>证明在任何局面下，任何对局部最优策略的微小改变都会造成整体结果变差，经常用于以“排序”为贪心策略的证明.</p><ol start="2"><li>范围缩放：</li></ol><p>证明任何对局面最优策略作用范围的拓展都不会造成整体结果变差.</p><ol start="3"><li>决策包容性：</li></ol><p>证明在任意局面下，作出局部最优决策以后，在问题状态空间中的可达集合包含了作出其他任何决策后的可达集合。换言之，这个局部最优策略提供的可能性包含其他所有策略提供的可能性.</p><ol start="4"><li><p>反证法</p></li><li><p>数学归纳法</p></li></ol><p>例题：</p><p><a href="https://vjudge.net/problem/POJ-3614" target="_blank" rel="noopener">POJ-3614</a></p><p><a href="https://vjudge.net/problem/POJ-3190" target="_blank" rel="noopener">POJ-3190</a></p><p><a href="https://vjudge.net/problem/POJ-1328" target="_blank" rel="noopener">POJ-1328</a></p><p><a href="https://ac.nowcoder.com/acm/contest/1003/D" target="_blank" rel="noopener">国王游戏</a></p><p><a href="https://vjudge.net/problem/POJ-2054" target="_blank" rel="noopener">POJ-2054</a></p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;部分参照 &lt;a href=&quot;https://blog.csdn.net/The___Flash/article/details/103939876&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_2nd【解题报告】– The__Flash&lt;/a&gt;。&lt;br&gt;欢迎评论提问， 纠错&lt;/p&gt;
&lt;p&gt;文章篇幅较长， 请参考右侧&lt;strong&gt;文章目录&lt;/strong&gt;食用。&lt;/p&gt;
&lt;p&gt;专题链接： &lt;a href=&quot;https://vjudge.net/contest/352473&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_2nd&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://solodance.top/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="贪心" scheme="https://solodance.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="拓扑排序" scheme="https://solodance.top/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="二维前缀和" scheme="https://solodance.top/tags/%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="离散化" scheme="https://solodance.top/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
      <category term="线段树" scheme="https://solodance.top/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="差分" scheme="https://solodance.top/tags/%E5%B7%AE%E5%88%86/"/>
    
      <category term="二分" scheme="https://solodance.top/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>SDNU_ACM_ICPC_2020_Winter_Practice_1st【解题报告】</title>
    <link href="https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_1st%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/"/>
    <id>https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_1st%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/</id>
    <published>2020-01-29T02:51:58.191Z</published>
    <updated>2020-01-29T02:51:25.431Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎评论提问， 纠错</p><p>文章篇幅较长， 请参考右侧<strong>文章目录</strong>食用。</p><p>专题链接： <a href="https://vjudge.net/contest/352426" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_1st</a></p><a id="more"></a><p>等着写完会更新， 稍等啦~</p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎评论提问， 纠错&lt;/p&gt;
&lt;p&gt;文章篇幅较长， 请参考右侧&lt;strong&gt;文章目录&lt;/strong&gt;食用。&lt;/p&gt;
&lt;p&gt;专题链接： &lt;a href=&quot;https://vjudge.net/contest/352426&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_1st&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://solodance.top/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
  </entry>
  
  <entry>
    <title>优先队列定义优先级的方法</title>
    <link href="https://solodance.top/2020/01/27/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%AE%9A%E4%B9%89%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://solodance.top/2020/01/27/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%AE%9A%E4%B9%89%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2020-01-27T11:45:04.425Z</published>
    <updated>2020-01-27T11:44:25.049Z</updated>
    
    <content type="html"><![CDATA[<p>默认优先级是从大到小.</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最大值优先</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp1</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span> <span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &lt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最小值优先</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp2</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span> <span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node1</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node1 &amp;temp) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b &lt; temp.a + temp.b; <span class="comment">// 以a + b 的值 最大值优先</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node2</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node2 &amp; temp) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b &gt; temp.a + temp.b; <span class="comment">// 以a + b 的值 最小值优先</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 最大值优先</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt;q1;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; , less&lt;<span class="keyword">int</span>&gt; &gt;q2; <span class="comment">// 注意 less&lt;int&gt;&gt;q2; 中间不加空格的话会报错， 因为是右移&gt;&gt; 运算符</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; , cmp1&gt;q3;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 最小值优先</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt; &gt;q4; <span class="comment">// 注意 greater&lt;int&gt;&gt;q4; 中间不加空格的话会报错， 因为是右移&gt;&gt; 运算符</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, cmp2&gt; q5;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 结构体自定义优先级, 具体优先级顺序看上面</span></span><br><span class="line">    priority_queue&lt;node1&gt;q6;</span><br><span class="line">    priority_queue&lt;node2&gt;q7;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何理解结构体中overload的小于号呢？ (只能重载小于号)</p><ol><li>可以理解为重载后小于号作用是比较出数组中优先级更小的数据，如果返回的是某个数据值更大的一方则值越大优先级越小，相反则值越小优先级越大。</li><li>优先队列是输出优先级最高的数据的队列。</li><li>可以简单的记为与sort中的cmp函数效果相反。</li></ol><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;默认优先级是从大到小.&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://solodance.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="优先队列" scheme="https://solodance.top/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
      <category term="数据结构" scheme="https://solodance.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Jetbrains实用技巧汇总</title>
    <link href="https://solodance.top/2020/01/27/Jetbrains%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
    <id>https://solodance.top/2020/01/27/Jetbrains%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</id>
    <published>2020-01-27T11:44:53.009Z</published>
    <updated>2020-01-27T10:55:24.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Jetbrains-Tools-关闭-vim模式"><a href="#Jetbrains-Tools-关闭-vim模式" class="headerlink" title="Jetbrains Tools 关闭 vim模式"></a>Jetbrains Tools 关闭 vim模式</h3><pre><code>菜单栏 :tools-&gt;vim emulator</code></pre><a id="more"></a><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Jetbrains-Tools-关闭-vim模式&quot;&gt;&lt;a href=&quot;#Jetbrains-Tools-关闭-vim模式&quot; class=&quot;headerlink&quot; title=&quot;Jetbrains Tools 关闭 vim模式&quot;&gt;&lt;/a&gt;Jetbrains Tools 关闭 vim模式&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;菜单栏 :tools-&amp;gt;vim emulator&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="https://solodance.top/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="实用技巧" scheme="https://solodance.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Jetbrains" scheme="https://solodance.top/tags/Jetbrains/"/>
    
  </entry>
  
  <entry>
    <title>关于处理博客旧文章的说明</title>
    <link href="https://solodance.top/2020/01/24/%E5%85%B3%E4%BA%8E%E5%A4%84%E7%90%86%E5%8D%9A%E5%AE%A2%E6%97%A7%E6%96%87%E7%AB%A0%E7%9A%84%E8%AF%B4%E6%98%8E/"/>
    <id>https://solodance.top/2020/01/24/%E5%85%B3%E4%BA%8E%E5%A4%84%E7%90%86%E5%8D%9A%E5%AE%A2%E6%97%A7%E6%96%87%E7%AB%A0%E7%9A%84%E8%AF%B4%E6%98%8E/</id>
    <published>2020-01-24T11:27:46.134Z</published>
    <updated>2020-01-26T03:02:18.047Z</updated>
    
    <content type="html"><![CDATA[<p>由于博客重做， 以前博客的文章显示时间都变成一样的了， 以后这个博客也不会怎么像这样大改了， 毕竟是怀念。</p><a id="more"></a><h3 id="先说以前文章的诟病"><a href="#先说以前文章的诟病" class="headerlink" title="先说以前文章的诟病"></a>先说以前文章的诟病</h3><p>markdown语法不标准</p><p>tags 乱写</p><p>分类也乱写</p><p>题解格式不理想，看起来乱七八糟的</p><h3 id="处理计划"><a href="#处理计划" class="headerlink" title="处理计划"></a>处理计划</h3><p>等着按时间把一些没用的博客， 看着不顺眼的博客， 都给整理一下， 去其糟粕， 取其精华。</p><p><strong>新年加油。</strong></p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan    千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于博客重做， 以前博客的文章显示时间都变成一样的了， 以后这个博客也不会怎么像这样大改了， 毕竟是怀念。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://solodance.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://solodance.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客国庆集训派对 H-Highway (dijk求树的直径（当然还有更优的）)</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20H-Highway%20(dijk%E6%B1%82%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%EF%BC%88%E5%BD%93%E7%84%B6%E8%BF%98%E6%9C%89%E6%9B%B4%E4%BC%98%E7%9A%84%EF%BC%89)/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20H-Highway%20(dijk%E6%B1%82%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%EF%BC%88%E5%BD%93%E7%84%B6%E8%BF%98%E6%9C%89%E6%9B%B4%E4%BC%98%E7%9A%84%EF%BC%89)/</id>
    <published>2020-01-23T13:42:35.154Z</published>
    <updated>2019-10-06T06:02:07.175Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="https://ac.nowcoder.com/acm/contest/1109/H" target="_blank" rel="noopener">题目链接</a><br>n个点从1-n, 有(n - 1)条边连接。<br>现在要重新修（n - 1）条路， 修i 到 j 所用的代价为i到j的最短路，<br>问最多的代价是多少</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>就是求树的直径， 然后跑两边最短路求其他点到直径两端点的最短路， 最后把最大值加起来就可。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="keyword">int</span>(<span class="number">1e9</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="keyword">int</span>(<span class="number">1e5</span>) + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, ne;</span><br><span class="line">    ll w;</span><br><span class="line">&#125;ed[<span class="number">2</span> * N];</span><br><span class="line"><span class="keyword">int</span> n, cnt, head[N];</span><br><span class="line">ll dis1[N], dis2[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, ll w)</span></span>&#123;</span><br><span class="line">    ed[cnt].u = u, ed[cnt].v = v, ed[cnt].w = w, ed[cnt].ne = head[u];</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dijk</span><span class="params">(ll dis[], <span class="keyword">int</span> st)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dis[i] = ll(<span class="number">1e15</span>);</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt;q;</span><br><span class="line">    dis[st] = <span class="number">0</span>;</span><br><span class="line">    q.emplace(<span class="number">0</span>, st);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + ed[i].w)&#123;</span><br><span class="line">                dis[v] = dis[u] + ed[i].w;</span><br><span class="line">                q.emplace(dis[v], v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>, ansj;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (dis[i] != ll(<span class="number">1e15</span>) &amp;&amp; dis[i] &gt; ans)&#123;</span><br><span class="line">            ans = dis[i], ansj = i;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ansj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    ll c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">            add(a, b, c);</span><br><span class="line">            add(b, a, c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> s1 = dijk(dis1, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> s2 = dijk(dis1, s1);</span><br><span class="line">        dijk(dis1, s1);</span><br><span class="line">        dijk(dis2, s2);</span><br><span class="line">        ll ans = dis1[s2];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == s1 || i == s2)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            ans += max(dis1[i], dis2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">、</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/1109/H&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="2019牛客国庆集训派对" scheme="https://solodance.top/categories/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="树的直径" scheme="https://solodance.top/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客国庆集训派对 E-Partial Sum （绝对值的特殊性）</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20E-Partial%20Sum%20%EF%BC%88%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7%EF%BC%89/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20E-Partial%20Sum%20%EF%BC%88%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.139Z</published>
    <updated>2019-10-06T06:03:13.829Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="https://ac.nowcoder.com/acm/contest/1109/E" target="_blank" rel="noopener">题目链接</a><br>给定长为n的数组， 找到m组(L, R)， 使得<code>|sum（L,R）| - C</code>的和最大， 其中C为常数（输入中给出）， 每个(L, R)只出现一次。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>求区间前缀和， 因为绝对值的特性， <code>|sumi - sumj = sumj - sumi|</code> 所以前后减的顺序没关系， 他也没<br>要求具体是那m组， 所以sort后 最大减最小就可。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="keyword">int</span>(<span class="number">1e9</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="keyword">int</span>(<span class="number">1e5</span>) + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m, c, x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c)&#123;</span><br><span class="line">        sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">            sum[i] = sum[i - <span class="number">1</span>] + x;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(sum, sum + n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = n;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = sum[r] - sum[l] - c;</span><br><span class="line">            <span class="keyword">if</span> (temp &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            l++, r--;</span><br><span class="line">            ans += ll(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/1109/E&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="2019牛客国庆集训派对" scheme="https://solodance.top/categories/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="绝对值的特殊性" scheme="https://solodance.top/tags/%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7/"/>
    
      <category term="思维" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第五场A题 （思维题）</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAA%E9%A2%98%20%EF%BC%88%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAA%E9%A2%98%20%EF%BC%88%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.123Z</published>
    <updated>2019-08-02T06:02:36.904Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>（看不清图片可以右击图片-&gt; 复制图片地址 -&gt;浏览器新开一个标签页，粘贴此地址就可看大图<br>（也可以右击图片-&gt; 在新标签页打开图片</p><p><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFRMNGtzcmtHbjZtMmtJT29KTHRUYjBjMWhoaUJ3a3AvSVpDNkh0Ri9oR3V3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="题干"></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>题意</strong>：给你一个整型x（x &lt;= 100）， 让你输出一个整型y， y要满足3个条件:</p><ol><li>y 能被 x 整除</li><li>y和各个数位的数字之和能被 x 整除(就是个位， 十位， 百位，… 之和)</li><li>y的位数不超过 10^4</li></ol><p>思维题， 真是太妙了。<br>最简单的构造方法就是， 把n看做字符串， 输出n个头尾相连的字符串n即可。</p><ul><li>第一个条件： 这肯定是满足的呀。</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举个例子</span><br><span class="line">x = <span class="number">99</span></span><br><span class="line">y = <span class="number">99</span>个<span class="number">99</span></span><br><span class="line">用竖式除一下， 就是（<span class="number">1010101.</span>..)</span><br></pre></td></tr></table></figure><ul><li>第二个条件：这也肯定了呀。  </li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举个例子</span><br><span class="line">x = <span class="number">99</span></span><br><span class="line">y = <span class="number">99</span>个<span class="number">99</span></span><br><span class="line">求和就是<span class="number">99</span>个(<span class="number">18</span>)</span><br></pre></td></tr></table></figure><ul><li>第三个条件， x最大是100， 100个100正好10 ^ 4</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t, n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;（看不清图片可以右击图片-&amp;gt; 复制图片地址 -&amp;gt;浏览器新开一个标签页，粘贴此地址就可看大图&lt;br&gt;（也可以右击图
      
    
    </summary>
    
    
      <category term="思维题" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://solodance.top/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第五场B题generator 1（十进制矩阵快速幂）</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAB%E9%A2%98generator%201%EF%BC%88%E5%8D%81%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAB%E9%A2%98generator%201%EF%BC%88%E5%8D%81%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.123Z</published>
    <updated>2019-10-06T05:49:56.558Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="https://ac.nowcoder.com/acm/contest/885/B" target="_blank" rel="noopener">题干</a></p><h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><ol><li>给你四个数： x0, x1, a, b   都&gt;=1 &lt;=1e9</li><li>x(i) = a * x (i - 1) + b * x(i - 2)  i &gt;= 2</li><li>给你两个数： n, mod.    1&lt;=n&lt;=10 ^ (10 ^ 6)  (超大)  1e9 &lt;= mod &lt;= 2e9</li><li>输出x(n)</li></ol><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用十进制快速幂， tql<br>时间复杂度是 10 ^ 6 * log 10<br>变换矩阵也很好推</p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFRraWFHQ2ZIemtaUFRwS0NGYk80Y3VXOGpRdEVCQzhWY1hCenNYazJ0RVFRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="变换矩阵"><br>具体看代码</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> esp 1e-6</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e9</span> + <span class="number">5</span>;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mod;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Matrix</span>&#123;</span></span><br><span class="line">    ll m[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">&#125;unit;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">mul</span><span class="params">(Matrix a, Matrix b, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="comment">// a * b  n为a的行数， m为b的列数</span></span><br><span class="line">    Matrix c;</span><br><span class="line">    <span class="built_in">memset</span>(c.m, <span class="number">0</span>, <span class="keyword">sizeof</span> c.m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">                c.m[i][j] = (c.m[i][j] + a.m[i][k] * b.m[k][j]) % mod ; <span class="comment">// 取模在这里取</span></span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">q_pow2</span><span class="params">(Matrix a, ll b, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">// a^b  n为矩阵大小</span></span><br><span class="line">    Matrix ans = unit;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            ans = mul(ans, a, n, n);</span><br><span class="line">        a = mul(a, a, n, n);</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">q_pow_10</span><span class="params">(Matrix a, <span class="built_in">string</span> b, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    Matrix ans = unit;</span><br><span class="line">    <span class="keyword">int</span> len = b.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num = b[i] - <span class="string">'0'</span>;</span><br><span class="line">        ans = mul(ans, q_pow2(a, num, n), n, n);</span><br><span class="line">        a = q_pow2(a, <span class="number">10</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    unit.m[<span class="number">1</span>][<span class="number">1</span>] = unit.m[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    Matrix A, B, C;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> x0, x1, a, b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x0 &gt;&gt; x1 &gt;&gt; a &gt;&gt; b &gt;&gt; s &gt;&gt; mod;</span><br><span class="line">    A.m[<span class="number">1</span>][<span class="number">1</span>] = a;</span><br><span class="line">    A.m[<span class="number">1</span>][<span class="number">2</span>] = b;</span><br><span class="line">    A.m[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    A.m[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    B.m[<span class="number">1</span>][<span class="number">1</span>] = x1;</span><br><span class="line">    B.m[<span class="number">2</span>][<span class="number">1</span>] = x0;</span><br><span class="line">    <span class="keyword">int</span> len = s.length();</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">1</span> &amp;&amp; s[<span class="number">0</span>] == <span class="string">'1'</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; x1 &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将s减1</span></span><br><span class="line">    <span class="keyword">while</span>(len--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[len] != <span class="string">'0'</span>)&#123;</span><br><span class="line">            s[len] --;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s[len] = <span class="string">'9'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'0'</span>)</span><br><span class="line">        s.erase(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    A = q_pow_10(A, s, <span class="number">2</span>);</span><br><span class="line">    A = mul(A, B, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; A.m[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/885/B&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="2019牛客多校训练赛" scheme="https://solodance.top/categories/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://solodance.top/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
      <category term="矩阵快速幂" scheme="https://solodance.top/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第二场H题（单调栈＋思维）Second Large Rectangle</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAH%E9%A2%98%EF%BC%88%E5%8D%95%E8%B0%83%E6%A0%88%EF%BC%8B%E6%80%9D%E7%BB%B4%EF%BC%89Second%20Large%20Rectangle/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAH%E9%A2%98%EF%BC%88%E5%8D%95%E8%B0%83%E6%A0%88%EF%BC%8B%E6%80%9D%E7%BB%B4%EF%BC%89Second%20Large%20Rectangle/</id>
    <published>2020-01-23T13:42:35.108Z</published>
    <updated>2019-07-22T13:42:43.694Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>（看不清图片可以右击图片-&gt; 复制图片地址 -&gt;浏览器新开一个标签页，粘贴此地址就可看大图<br>（也可以右击图片-&gt; 在新标签页打开图片</p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFM3WHhsb0oxdWFUekJ2ZS9vVzd6ODJNWXlTQ1IyOTV6bkJJaXFoWXhpWmh3PT0.png?imageView&thumbnail=1903y1266&type=png&quality=96&stripmeta=0" alt="题干"></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>听师哥讲得才明白怎么做， 我好菜啊~！<br>单调栈的应用<br>把题目中矩阵拆开看， 看成以第i行为底的直方图， 然后暴力这i行， 根据单调栈求即可。<br>可以转化成这题来做： <a href="https://solodance.top/2019/07/22/POJ%20-%202559%EF%BC%88%E5%8D%95%E8%B0%83%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%89/">点此</a>   </p><p>有几个小问题需要注意：</p><ol><li>以第i行的矩阵可以由第i-1行求出</li><li>添加的时候需要注意， 不仅仅要把所求的添加上， 还要加上原矩阵 宽减一 乘以 高 和 宽 乘以 高减一。</li></ol><p>ac代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstdio"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"queue"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"set"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstring"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"map"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"vector"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"utility"</span>   <span class="comment">// pair头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> esp 1e-6</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">    <span class="keyword">int</span> width;</span><br><span class="line">    node()&#123;</span><br><span class="line">        height = <span class="number">0</span>;</span><br><span class="line">        width = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> ans1, ans2;</span><br><span class="line"><span class="built_in">stack</span> &lt;node&gt; st;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1003</span>][<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">max2</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ans1 &lt; a)&#123;</span><br><span class="line">        ans2 = ans1;</span><br><span class="line">        ans1 = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ans2 &lt; a)</span><br><span class="line">        ans2 = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solotion</span><span class="params">(<span class="keyword">int</span> x[])</span></span>&#123;</span><br><span class="line">   node a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m + <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= m)</span><br><span class="line">            a.height = x[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a.height = <span class="number">-1</span>;  <span class="comment">// 最后加入一个0元素， 使栈全部元素弹出, 巧妙啊</span></span><br><span class="line">        a.width = i;</span><br><span class="line">        <span class="keyword">while</span>(!st.empty() &amp;&amp; st.top().height &gt;= a.height) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = st.top().height, x2 = i - st.top().width;</span><br><span class="line">            max2(x1 * x2);</span><br><span class="line">            max2(x1 * (x2 - <span class="number">1</span>));</span><br><span class="line">            max2((x1 - <span class="number">1</span>) * x2);</span><br><span class="line">            a.width = st.top().width;</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        st.push(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">                a[i][j] = s[j - <span class="number">1</span>] - <span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (s[j - <span class="number">1</span>] == <span class="string">'1'</span>)</span><br><span class="line">                    a[i][j] = a[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    a[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*for (int i = 1; i &lt;= n; i++)&#123;</span></span><br><span class="line"><span class="comment">        for (int j = 1; j &lt;= m; j++)&#123;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; a[i][j] &lt;&lt; " ";</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; "\n";</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        solotion(a[i]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans2 &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5 7</span></span><br><span class="line"><span class="comment">0001000</span></span><br><span class="line"><span class="comment">0011000</span></span><br><span class="line"><span class="comment">1011011</span></span><br><span class="line"><span class="comment">1011011</span></span><br><span class="line"><span class="comment">1111111</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;（看不清图片可以右击图片-&amp;gt; 复制图片地址 -&amp;gt;浏览器新开一个标签页，粘贴此地址就可看大图&lt;br&gt;（也可以右击图
      
    
    </summary>
    
    
      <category term="单调栈" scheme="https://solodance.top/categories/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://solodance.top/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
      <category term="单调栈" scheme="https://solodance.top/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第二场F题Partition problem（dfs + 暴力枚举）</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAF%E9%A2%98Partition%20problem%EF%BC%88dfs%20+%20%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE%EF%BC%89/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAF%E9%A2%98Partition%20problem%EF%BC%88dfs%20+%20%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-07-23T02:08:20.970Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>（看不清图片可以右击图片-&gt; 复制图片地址 -&gt;浏览器新开一个标签页，粘贴此地址就可看大图<br>（也可以右击图片-&gt; 在新标签页打开图片</p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFRxNWZ4RmlrSU9neDhORjU5cDRCY2xXK0sxSzEwVG53MHc3VEdXREpESEt3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="F"></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>题意： 给你2 * n个人， 以及他们之间的竞争值（用矩阵表示），让你分成两组， 每组n个人， 问你如何分才能让竞争值最大（同队之间不存在竞争）， 输出最大竞争值 。</p><p>分析： 用dfs爆搜， 从1开始， 当groupA 组员数小于n时， 就可以放进A， 同理groupB也是。最后当搜索到第 <code>2 * n + 1</code>时return。</p><p>ac代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstdio"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"queue"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"set"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstring"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"map"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"vector"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"utility"</span>   <span class="comment">// pair头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> esp 1e-6</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line">ll val[<span class="number">102</span>][<span class="number">102</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="keyword">int</span> group1[<span class="number">102</span>], group2[<span class="number">102</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> cnt1, <span class="keyword">int</span> cnt2, ll sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cur &gt;= <span class="number">2</span> * n + <span class="number">1</span>)&#123;</span><br><span class="line">        ans = max(ans, sum);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cnt1 &lt; n)&#123;</span><br><span class="line">        ll tem = sum;</span><br><span class="line">        group1[cnt1 + <span class="number">1</span>] = cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt2; i++)</span><br><span class="line">            tem += val[group2[i]][cur];</span><br><span class="line">        dfs(cur + <span class="number">1</span>, cnt1 + <span class="number">1</span>, cnt2, tem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cnt2 &lt; n)&#123;</span><br><span class="line">        ll tem = sum;</span><br><span class="line">        group2[cnt2 + <span class="number">1</span>] = cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt1; i++)&#123;</span><br><span class="line">            tem += val[group1[i]][cur];</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(cur + <span class="number">1</span>, cnt1, cnt2 + <span class="number">1</span>, tem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * n; j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; val[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;（看不清图片可以右击图片-&amp;gt; 复制图片地址 -&amp;gt;浏览器新开一个标签页，粘贴此地址就可看大图&lt;br&gt;（也可以右击图
      
    
    </summary>
    
    
      <category term="dfs" scheme="https://solodance.top/categories/dfs/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://solodance.top/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
      <category term="dfs" scheme="https://solodance.top/tags/dfs/"/>
    
      <category term="暴力枚举" scheme="https://solodance.top/tags/%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>为萌新准备的如何用codeblocks新建c or c++代码并编译运行</title>
    <link href="https://solodance.top/2020/01/23/%E4%B8%BA%E8%90%8C%E6%96%B0%E5%87%86%E5%A4%87%E7%9A%84%E5%A6%82%E4%BD%95%E7%94%A8codeblocks%E6%96%B0%E5%BB%BAc%20or%20c++%E4%BB%A3%E7%A0%81%E5%B9%B6%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/"/>
    <id>https://solodance.top/2020/01/23/%E4%B8%BA%E8%90%8C%E6%96%B0%E5%87%86%E5%A4%87%E7%9A%84%E5%A6%82%E4%BD%95%E7%94%A8codeblocks%E6%96%B0%E5%BB%BAc%20or%20c++%E4%BB%A3%E7%A0%81%E5%B9%B6%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-08-14T07:28:38.425Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>直接默认走起， 需要勾选的就都勾选上， 一直next就好， 注意一点，安装位置建议安装在固态里， 或者c盘就行。<br>ps： 安装包在群里</p><h3 id="2-如何新建c-c-文件，-编译并运行"><a href="#2-如何新建c-c-文件，-编译并运行" class="headerlink" title="2. 如何新建c / c++文件， 编译并运行"></a>2. 如何新建c / c++文件， 编译并运行</h3><p>首先注明一点， 不建议汉化， 汉化很容易出bug， 你所需要的那一点东西， 完全看到懂。</p><p>安装完成打开后界面如下， 点击 <code>Create a new project</code><br><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dGw1bTJGbzZ2aFJUR2poVlJPanVHcUlHenEvWXFYMVlnPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>按照下图一直操作<br><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0cHRHemhFNzVWNDFUbTVwdHBoTU04bFpnKzdJOTFpSmR3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dlQxZG80Q0FCNXVUekRKd3hpL2JRTHJ6dUxXcFdzckR3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0a3FscE5QYzZTYkRKOVV5OUFkbFliTm9hcXVCQ2hLV0N3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0bVk1SEl1ZTV1RzdNT1Z3KzE3eTFNWmZwUUhUc3lqcWJ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>新建完成后出现以下界面， 双击 <code>Sources</code>文件夹<br><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dlc5RHVwU0ViNFppOGkzYXVsSTJJN25ZUlRsTjk3Yk5RPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>双击 <code>main.cpp or main.c</code></p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0a1h3czc2elFJMFVXZldSa1hmZGcyVlZmUUsyVm5mMHJRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0a21ldTd6Snl0bHpzUkhCVTVEYjBoeHNNM21VRVA3MHJ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>编译运行可能会等一下， 然后就会弹出命令窗了</p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0b1k5dU9haXI4VjRzckJvV2htVzNtMG5lM1NpK2RHemNRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-经常遇到的问题"><a href="#3-经常遇到的问题" class="headerlink" title="3. 经常遇到的问题"></a>3. 经常遇到的问题</h3><ol><li>若遇到无法编译， 就是点编译并运行按钮时， 右下角会弹出黄色警告， 并且命令窗也没弹出来， 一般解决方案：<br>点击<code>Setting(最上面哪一行倒数第二个) -&gt; Compiler...</code><br>然后点击， 出现什么都点yes, 最后完成后重启就好了<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dVJUTlpLcTQrbWFpYlF0dG95VllKdkE5ZHF6cnBCd05nPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h3&gt;&lt;p&gt;直接默认走起， 需要勾选的就都勾选上， 一直next就好， 注意一点，安装位置建议安装在固态里， 或者c盘就行。&lt;br&gt;
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://solodance.top/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="零碎小知识" scheme="https://solodance.top/tags/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
      <category term="codeblocks" scheme="https://solodance.top/tags/codeblocks/"/>
    
  </entry>
  
  <entry>
    <title>做题时文件的读入（c++）</title>
    <link href="https://solodance.top/2020/01/23/%E5%81%9A%E9%A2%98%E6%97%B6%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%85%A5%EF%BC%88c++%EF%BC%89/"/>
    <id>https://solodance.top/2020/01/23/%E5%81%9A%E9%A2%98%E6%97%B6%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%85%A5%EF%BC%88c++%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-06-16T09:37:12.867Z</updated>
    
    <content type="html"><![CDATA[<p>直接看代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    FILE *fp = fopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>); <span class="comment">// 根据题目中要求的写 有的是text.txt</span></span><br><span class="line">    FILE *fpw = fopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">-1</span>; <span class="comment">// 第一行特殊就专门输入</span></span><br><span class="line">    <span class="keyword">while</span>(!feof(fp))&#123;  <span class="comment">// 把整个文件一个个读进去</span></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">-1</span>)  <span class="comment">// 第一行特殊就专门输入</span></span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;K);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 正常主体代码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 最后输出</span></span><br><span class="line">    <span class="built_in">fprintf</span>(fpw, <span class="string">"%d %d\n"</span>, indx, indy);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接看代码：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://solodance.top/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="小知识" scheme="https://solodance.top/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>组合数打表模板</title>
    <link href="https://solodance.top/2020/01/23/%E7%BB%84%E5%90%88%E6%95%B0%E6%89%93%E8%A1%A8%E6%A8%A1%E6%9D%BF/"/>
    <id>https://solodance.top/2020/01/23/%E7%BB%84%E5%90%88%E6%95%B0%E6%89%93%E8%A1%A8%E6%A8%A1%E6%9D%BF/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-09-05T06:25:28.452Z</updated>
    
    <content type="html"><![CDATA[<h3 id="组合数打表模板"><a href="#组合数打表模板" class="headerlink" title="组合数打表模板"></a>组合数打表模板</h3><p>组合数打表模板,适用于N&lt;=3000<br>c[i][j]表示从i个中选j个的选法。 </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> C[N][N];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_C</span><span class="params">(<span class="keyword">int</span> maxn)</span> </span>&#123;</span><br><span class="line">    C[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++) &#123;</span><br><span class="line">        C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            C[i][j] = C[i - <span class="number">1</span>][j] + C[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            <span class="comment">// C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;组合数打表模板&quot;&gt;&lt;a href=&quot;#组合数打表模板&quot; class=&quot;headerlink&quot; title=&quot;组合数打表模板&quot;&gt;&lt;/a&gt;组合数打表模板&lt;/h3&gt;&lt;p&gt;组合数打表模板,适用于N&amp;lt;=3000&lt;br&gt;c[i][j]表示从i个中选j个的选法。 &lt;/p&gt;
      
    
    </summary>
    
    
      <category term="总结" scheme="https://solodance.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="组合数打表" scheme="https://solodance.top/tags/%E7%BB%84%E5%90%88%E6%95%B0%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>为Clion配置mingw32或mingw64</title>
    <link href="https://solodance.top/2020/01/23/%E4%B8%BAClion%E9%85%8D%E7%BD%AEmingw32%E5%92%8Cmingw64/"/>
    <id>https://solodance.top/2020/01/23/%E4%B8%BAClion%E9%85%8D%E7%BD%AEmingw32%E5%92%8Cmingw64/</id>
    <published>2020-01-23T13:42:35.076Z</published>
    <updated>2019-09-02T12:55:49.058Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装MinGW32-或者-MinGW64"><a href="#1-安装MinGW32-或者-MinGW64" class="headerlink" title="1. 安装MinGW32 或者 MinGW64"></a>1. 安装MinGW32 或者 MinGW64</h3><p>我不教怎么用官方的软件安装（我也不会， 直接交给你们一个技巧<br>MinGW32 和 MinGW64 选择其一安装即可</p><ol><li>安装 MinGW32 ： 安装codeblocks， <a href="http://www.codeblocks.org/downloads/26" target="_blank" rel="noopener">官方下载链接</a>， 在其安装目录里就有MinGW32</li><li>安装MinGW64: ： 同样， 安装devc++， <a href="https://sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener">下载链接</a> ， 在其安装目录里就有MinGW64</li></ol><h3 id="2-配置CLion-C-C-运行环境"><a href="#2-配置CLion-C-C-运行环境" class="headerlink" title="2. 配置CLion C/C++ 运行环境"></a>2. 配置CLion C/C++ 运行环境</h3><p>按照下图配置即可（若看不清就右击图片， 在新窗口打开， 或者复制图片地址在新窗口打开）<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNDeUN6R2VydkJTRlRoWk96WkN3Q1g2cTlGOTV5SkNWcEk4YXNUUVI3ZTZ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-新建项目配置文件"><a href="#3-新建项目配置文件" class="headerlink" title="3. 新建项目配置文件"></a>3. 新建项目配置文件</h3><p>在你项目的根目录下， 新建 <code>CMakeLists.txt</code>， 然后在其填入下列代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)</span><br><span class="line">project(project1) </span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 11)</span><br><span class="line"></span><br><span class="line">add_executable(project1 main.cpp)</span><br></pre></td></tr></table></figure><p>解释一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)   这个不用管</span><br><span class="line">project(project1)  括号里的是你的项目名称, 也就是你项目根文件夹的名称</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 11)  不用管</span><br><span class="line"></span><br><span class="line">add_executable(project1 main.cpp)  这句话的意思是 project1 项目下的 main.cpp 可以编译运行了</span><br><span class="line"></span><br><span class="line">add_executable(template template.cpp)  </span><br><span class="line">若是想运行多个cpp文件， 那就要这样配置， 第一个template 是另一个项目名称， 随便起（但不能和上面出现过的项目名相同）， template.cpp 是你想运行的另一个cpp文件</span><br><span class="line"></span><br><span class="line">你也可以添加很多个</span><br><span class="line">add_executable(template1 template1.cpp)  </span><br><span class="line">add_executable(template2 template2.cpp)  </span><br><span class="line">add_executable(template3 template3.cpp)</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装MinGW32-或者-MinGW64&quot;&gt;&lt;a href=&quot;#1-安装MinGW32-或者-MinGW64&quot; class=&quot;headerlink&quot; title=&quot;1. 安装MinGW32 或者 MinGW64&quot;&gt;&lt;/a&gt;1. 安装MinGW32 或者 Min
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://solodance.top/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="clion" scheme="https://solodance.top/tags/clion/"/>
    
      <category term="零碎小知识" scheme="https://solodance.top/tags/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>数据结构实验12 ：排序</title>
    <link href="https://solodance.top/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C12%EF%BC%9A%20%E6%8E%92%E5%BA%8F/"/>
    <id>https://solodance.top/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C12%EF%BC%9A%20%E6%8E%92%E5%BA%8F/</id>
    <published>2020-01-23T13:42:35.076Z</published>
    <updated>2019-06-09T13:43:30.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验12-：-排序"><a href="#实验12-：-排序" class="headerlink" title="实验12 ： 排序"></a>实验12 ： 排序</h2><h3 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h3><ol><li>直接插入排序；</li><li>折半插入排序；</li><li>希尔排序;</li><li>冒泡排序</li><li>简单选择排序</li><li>树型选择排序</li><li>堆排序</li></ol><p>详情见代码，注释应该比较清晰。<br>（树形排序暂时还没有， 等着补上（因为这个太费时间了））</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> b[N], a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123; <span class="comment">// 直接插入排序（升序）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - <span class="number">1</span>]) &#123;  <span class="comment">// 反之， 若a[i] &gt;= a[i - 1] ，则此时这部分数组是升序的， 则不用处理</span></span><br><span class="line">            a[<span class="number">0</span>] = a[i];  <span class="comment">// a[0] 叫监视哨</span></span><br><span class="line">            <span class="keyword">for</span> (j = i - <span class="number">1</span>; a[<span class="number">0</span>] &lt; a[j]; j--) &#123;</span><br><span class="line">                <span class="comment">// 这里的判断条件不 加等号即不是 a[0] &lt;= a[j] 有两个原因</span></span><br><span class="line">                <span class="comment">// 1. 保持排序的稳定性</span></span><br><span class="line">                <span class="comment">// 2. 如果加了等号， 那么当 i == 2 时， j == 0 ， 然后 a[0] &lt;= a[j]  此循环继续 j 变为-1 那么就变成 a[-1] 虽然这是合法的， 但会出现莫名的错误</span></span><br><span class="line">                a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            a[j + <span class="number">1</span>] = a[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BInsertSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123; <span class="comment">// 折半插入排序</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i, j, high, low, mid;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            a[<span class="number">0</span>] = a[i];</span><br><span class="line">            low = <span class="number">1</span>, high = i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">                mid = low + high &gt;&gt; <span class="number">1</span>; <span class="comment">// 二进制运算， 相当于 （low + high）/ 2</span></span><br><span class="line">                <span class="keyword">if</span> (a[<span class="number">0</span>] &lt; a[mid])</span><br><span class="line">                    high = mid - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    low = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= high + <span class="number">1</span>; j--) &#123;</span><br><span class="line">                a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            a[high + <span class="number">1</span>] = a[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellInsert</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> dk)</span> </span>&#123;  <span class="comment">// 一趟 增量为dk的希尔排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = dk + <span class="number">1</span>; i &lt;= n; i++) &#123; <span class="comment">// dk + 1 是最小的 单位了</span></span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - dk]) &#123;</span><br><span class="line">            a[<span class="number">0</span>] = a[i];</span><br><span class="line">            <span class="keyword">int</span> j;</span><br><span class="line">            <span class="keyword">for</span> (j = i - dk; j &gt; <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>] &lt; a[j]; j -= dk) &#123;</span><br><span class="line">                a[j + dk] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            a[j + dk] = a[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;  <span class="comment">// t 趟 希尔排序</span></span><br><span class="line">    <span class="keyword">int</span> k, t, dk[N];</span><br><span class="line">    t = <span class="keyword">int</span>(<span class="built_in">log</span>(n + <span class="number">1</span>));<span class="comment">// 书上给的</span></span><br><span class="line"><span class="comment">/*    cout &lt;&lt; "t : " &lt;&lt; t &lt;&lt; "\n";*/</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i++) &#123;</span><br><span class="line">        dk[i] = <span class="built_in">pow</span>(<span class="number">2</span>, t - i + <span class="number">1</span>) - <span class="number">1</span>;  <span class="comment">// 书上给的</span></span><br><span class="line"><span class="comment">/*        cout &lt;&lt; "dk" &lt;&lt; i &lt;&lt; ':' &lt;&lt; dk[i] &lt;&lt; "\n";*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i++) &#123;</span><br><span class="line">        ShellInsert(a, dk[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;  <span class="comment">// 冒泡排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n - i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j - <span class="number">1</span>] &gt; a[j]) &#123;</span><br><span class="line">                swap(a[j - <span class="number">1</span>], a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;  <span class="comment">// 简单选择排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">                swap(a[i], a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapAdjust</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> s, <span class="keyword">int</span> m)</span> </span>&#123; <span class="comment">// 筛法调整堆</span></span><br><span class="line">    <span class="comment">// 假设a[s + 1..m] 已经是堆， 将a[s..m] 调整为以a[s] 为根的大根堆</span></span><br><span class="line">    <span class="keyword">int</span> rc = a[s];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span> * s; j &lt;= m; j *= <span class="number">2</span>) &#123; <span class="comment">// 从2 * s 开始</span></span><br><span class="line">        <span class="keyword">if</span> (j &lt; m &amp;&amp; a[j] &lt; a[j + <span class="number">1</span>]) <span class="comment">// 注意 莫忘j &lt; m</span></span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> (rc &gt;= a[j])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        a[s] = a[j];</span><br><span class="line">        s = j;</span><br><span class="line">    &#125;</span><br><span class="line">    a[s] = rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatHeap</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123; <span class="comment">// 建大根堆</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n / <span class="number">2</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        HeapAdjust(a, i, n);</span><br><span class="line">        <span class="comment">//  序号大于 int (n / 2) 的节点都是叶子节点 注意 n / 2 - 1 不行  因为 n / 2 * 2 ?= n</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;</span><br><span class="line">    CreatHeap(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt; <span class="number">1</span>; i--) &#123;</span><br><span class="line">        swap(a[<span class="number">1</span>], a[i]);</span><br><span class="line">        HeapAdjust(a, <span class="number">1</span>, i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TSelect</span><span class="params">(<span class="keyword">int</span> c[], <span class="keyword">int</span> s, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> c[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = s; i &lt;= m; i += <span class="number">2</span>) &#123;</span><br><span class="line">        c[i / <span class="number">2</span>] = min(c[i], c[i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d = m - s + <span class="number">1</span>;</span><br><span class="line">    m = s - <span class="number">1</span>;</span><br><span class="line">    s = m - d / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TSelectSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 因为实在不知道如何记录 value 对应的 key  我就用map写吧</span></span><br><span class="line">    <span class="keyword">int</span> c[N]; <span class="comment">// 储存树</span></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; ma; <span class="comment">// 记录 value 对应key</span></span><br><span class="line">    <span class="keyword">int</span> k, nn = n;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        a[n + <span class="number">1</span>] = INF;</span><br><span class="line">        nn++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*让第 n + 1 个数变成正无穷， 叶子节点为偶数个</span></span><br><span class="line"><span class="comment">     *如果 n 为 偶数， 那就不起作用</span></span><br><span class="line"><span class="comment">     * 如果n 为奇数， 起作用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    k = nn / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        c[k] = a[i];</span><br><span class="line">        ma[a[i]] = k++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        a[i] = TSelect(c, nn / <span class="number">2</span> + <span class="number">1</span>, nn);</span><br><span class="line">        c[ma[a[i]]] = INF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入你要排序的序列中的元素个数：\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入各元素：\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            a[i] = b[i];   <span class="comment">// 复制此数组， 以便于再次利用原数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请选择你要排序的方法的下标：\n"</span></span><br><span class="line">            <span class="string">"1、直接插入排序；\n"</span></span><br><span class="line">            <span class="string">"2、折半插入排序；\n"</span></span><br><span class="line">            <span class="string">"3、希尔排序;\n"</span></span><br><span class="line">            <span class="string">"4、冒泡排序\n"</span></span><br><span class="line">            <span class="string">"5、简单选择排序\n"</span></span><br><span class="line">            <span class="string">"6、堆排序\n"</span>);</span><br><span class="line">        <span class="keyword">int</span> o;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; o;</span><br><span class="line">        <span class="keyword">switch</span> (o) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: InsertSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: BInsertSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>: ShellSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>: BubbleSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>: SelectSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>: HeapSort(a); <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"排序后的结果为：\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入你要排序的序列中的元素个数(结束请输入0)：\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实验12-：-排序&quot;&gt;&lt;a href=&quot;#实验12-：-排序&quot; class=&quot;headerlink&quot; title=&quot;实验12 ： 排序&quot;&gt;&lt;/a&gt;实验12 ： 排序&lt;/h2&gt;&lt;h3 id=&quot;要求：&quot;&gt;&lt;a href=&quot;#要求：&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://solodance.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://solodance.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="查找" scheme="https://solodance.top/tags/%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何通过学生邮箱（教育邮箱）申请Jetbrains系列软件无限期试用</title>
    <link href="https://solodance.top/2020/01/23/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%EF%BC%88%E6%95%99%E8%82%B2%E9%82%AE%E7%AE%B1%EF%BC%89%E7%94%B3%E8%AF%B7Jetbrains%E7%B3%BB%E5%88%97%E8%BD%AF%E4%BB%B6%E6%97%A0%E9%99%90%E6%9C%9F%E8%AF%95%E7%94%A8/"/>
    <id>https://solodance.top/2020/01/23/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%EF%BC%88%E6%95%99%E8%82%B2%E9%82%AE%E7%AE%B1%EF%BC%89%E7%94%B3%E8%AF%B7Jetbrains%E7%B3%BB%E5%88%97%E8%BD%AF%E4%BB%B6%E6%97%A0%E9%99%90%E6%9C%9F%E8%AF%95%E7%94%A8/</id>
    <published>2020-01-23T13:42:35.045Z</published>
    <updated>2019-09-04T08:05:38.561Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-获得（学生邮箱）教育邮箱"><a href="#1-获得（学生邮箱）教育邮箱" class="headerlink" title="1. 获得（学生邮箱）教育邮箱"></a>1. 获得（学生邮箱）教育邮箱</h3><p>作为山师er， 我们在入学时学校已经给了我们教育邮箱， 只是大多数人都不知道罢了，<br>邮箱为</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号 : 学号+@stu<span class="selector-class">.sdnu</span><span class="selector-class">.edu</span><span class="selector-class">.cn</span>  如 <span class="number">201811010121</span>@stu<span class="selector-class">.sdnu</span><span class="selector-class">.edu</span>.cn</span><br><span class="line">密码 ： 初始密码为身份证后<span class="number">8</span>位， 记住 是 后<span class="number">8</span>位！！</span><br></pre></td></tr></table></figure><p>如何登陆呢， 这里附上山师学生邮箱官网， 点击下面链接登陆即可<br><a href="http://mail.stu.sdnu.edu.cn/" target="_blank" rel="noopener">http://mail.stu.sdnu.edu.cn/</a></p><p>注意， 若是用手机端进入的同学， 一定要切换到电脑版在登陆。<br>如下图：<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFUERmb2FHY3hiMnFjeUU2WFF6K0lWS3liSlEwdGRJeEJRPT0.jpg?imageView&thumbnail=1680x0&quality=96&stripmeta=0&type=jpg" alt="1"></p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFT1k1aFNNNnA1R1FDbENSd0ljWXZETXpoU1ZTQnR6UkdBPT0.jpg?imageView&thumbnail=1680x0&quality=96&stripmeta=0&type=jpg" alt="1"></p><h3 id="2-申请试用Jetbrains试用"><a href="#2-申请试用Jetbrains试用" class="headerlink" title="2. 申请试用Jetbrains试用"></a>2. 申请试用Jetbrains试用</h3><p>当你拥有了你的学生邮箱， 就可以申请试用啦。</p><ol><li>进入Jetbrains官网 <a href="https://account.jetbrains.com/login" target="_blank" rel="noopener">https://account.jetbrains.com/login</a> ， 用自己的学生邮箱注册账号  （有时候Jetbrains官网相应的比较慢， 请耐心等待）<br>若看不清下图请右击在新窗口打开~<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFS1QzclRhUk94dVVLM1laUkowdDlselpkbzk2TStoTEVnPT0.png?imageView&thumbnail=1920y1040&type=png&quality=96&stripmeta=0" alt="1"></li></ol><p>点击sign up后，官方会发一封确认验证邮件到你的邮箱上， 有时候过好几分钟才会发过来， 请耐心等待一下吧。<br>收到邮件设置好账号密码， 然后进入下一步<br>2. 进入 <a href="https://www.jetbrains.com/shop/eform/students" target="_blank" rel="noopener">https://www.jetbrains.com/shop/eform/students</a>， 开始填写资料。（有时候Jetbrains官网相应的比较慢~请耐心等待）<br>如下图， 若看不懂请翻译…<br><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFSDBoSS93N2FMWFU3eUlPWGNSK1czc0N0cFBmTFdsOG5nPT0.png?imageView&thumbnail=1920y1373&type=png&quality=96&stripmeta=0" alt="1"></p><p>填写完成后， 你就等着Jetbrains给你发送申请成功的邮件， 一般一星期内就可~</p><ol start="3"><li>当你收到邮件时那么恭喜你申请成功了， 接下来就是下载Jetbrains了， 进入Jetbrains官网 <a href="https://www.jetbrains.com/" target="_blank" rel="noopener">https://www.jetbrains.com/</a>， 把鼠标放在tool那一栏，  选择你要下载的工具， 比如你要下载<code>WebStorm</code>， 那就点击WebStorm， 然后中间有个大大的 <code>download</code>， 等待下载就行了， 当然有时候也会比较慢~</li></ol><p>当然你也可以安装<code>Toolbox App</code>， 在这里面可以下载Jetbrains里的一系列软件， 网速就稍微快点了， 管理更新也很方便。<br>不过它默认在c盘， 建议更改一下下载位置。<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFFPU1ZIbnlCQXp4Ukw5Vzk4U3FtVmNENVQyTVBxOS9CaUVWcjlRMGhaTWNRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFFPU1ZIbnlCQXp4VDdsR3Rja3ZzU3ZoelVwa1RnZ3ovc0tuUGV0NnFjVjBnPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-教育邮箱的其他用处"><a href="#3-教育邮箱的其他用处" class="headerlink" title="3. 教育邮箱的其他用处"></a>3. 教育邮箱的其他用处</h3><p>教育邮箱的妙用， 请百度或者知乎， 这里贴一个知乎<br><a href="https://www.zhihu.com/question/53297353" target="_blank" rel="noopener">https://www.zhihu.com/question/53297353</a></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-获得（学生邮箱）教育邮箱&quot;&gt;&lt;a href=&quot;#1-获得（学生邮箱）教育邮箱&quot; class=&quot;headerlink&quot; title=&quot;1. 获得（学生邮箱）教育邮箱&quot;&gt;&lt;/a&gt;1. 获得（学生邮箱）教育邮箱&lt;/h3&gt;&lt;p&gt;作为山师er， 我们在入学时学校已经给了
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://solodance.top/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="Jetbrains" scheme="https://solodance.top/tags/Jetbrains/"/>
    
      <category term="零碎小知识" scheme="https://solodance.top/tags/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>数据结构整理笔记（提纲） （数据结构 C语言版 第二版 严蔚敏）</title>
    <link href="https://solodance.top/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/"/>
    <id>https://solodance.top/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-23T13:42:35.045Z</published>
    <updated>2019-06-25T12:29:50.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><strong>数据结构（这门学科）：</strong> 是一门研究数据的组织， 存储， 和运算的一般方法。  </p><p><strong>数据：</strong> 是客观事物的符号表示， 是所有能输入到计算机中并被计算机程序处理的符号的总称。  </p><p><strong>数据元素：</strong> 是数据的<strong>基本单位</strong>， 在计算机中通常作为一个整体进行考虑和处理。数据元素用于完整地描述一个对象。</p><p><strong>数据项：</strong> 组成数据元素的、 有独立含义的、 不可分割的最小单位。<em>例如</em> ：学生的姓名学号等。</p><p><strong>数据对象：</strong> 是性质相同的数据元素的集合， 是数据的一个子集。<strong>只要集合内的性质均相同， 都可称之为一个数据对象</strong>。  </p><p><strong>数据结构：</strong> 是相互之间存在一种或多种特定关系的数据元素的集合。  </p><p>数据结构  </p><ul><li>逻辑结构  <ul><li>集合结构（离散结构， 因为太简单， 所以不考虑）</li><li>线性结构</li><li>非线性结构<ul><li>树结构</li><li>图结构或网状结构</li></ul></li></ul></li><li>存储结构<ul><li>顺序存储结构</li><li>链式存储结构</li></ul></li></ul><p><strong>逻辑结构</strong><br>二元组 （D， R）  </p><ul><li>D是数据关系的集合</li><li>R是D关系上的集合<br>（） 代表无序 &lt;&gt; 代表有序</li></ul><h3 id="抽象数据类型"><a href="#抽象数据类型" class="headerlink" title="抽象数据类型"></a>抽象数据类型</h3><p><strong>抽象数据类型</strong> ： 一般指由用户定义的、 表示应用问题的数学模型， 以及定义在这个模型上的一组操作的总称。<br>具体包括三部分： 数据对象， 数据对象上关系的集合 以及 对数据对象的基本操作的集合。<br><strong>定义格式</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ADT 抽象数据类型名&#123;</span><br><span class="line">    数据对象:&lt;数据对象的定义&gt;</span><br><span class="line">    数据关系:&lt;数据关系的定义&gt;</span><br><span class="line">    基本操作:&lt;基本操作的定义&gt;</span><br><span class="line">&#125; ADT 抽象数据类型名</span><br></pre></td></tr></table></figure><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p><strong>算法</strong> ：是为了解决某类问题而规定的一个有限长的操作序列。<br><strong>重要特性</strong></p><ul><li>有穷性</li><li>确定性</li><li>可行性</li><li>输入</li><li>输出</li></ul><p><strong>评价算法优劣的基本标准</strong></p><ul><li>正确性 能在有限的运行时间内得到正确的结果。</li><li>可读性 </li><li>健壮性</li><li>高效性 时间空间</li></ul><p><strong>语句频度：</strong> 一条语句重复执行的次数</p><p><strong>算法的时间复杂度：</strong> （一般指的是最坏时间复杂度）</p><ul><li>常量阶实例  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100000000</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"我爱你啊亲！"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>此算法时间复杂度 T(n) = O(1)。</li></ul><p><strong>算法的空间复杂度</strong></p><ul><li>常量阶<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n / <span class="number">2</span>; i++)&#123;</span><br><span class="line">    t = a[i];</span><br><span class="line">    a[i] = a[n - i + <span class="number">1</span>];</span><br><span class="line">    a[n - i - <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>线性阶<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    b[i] = a[n - i + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    a[i] = b[i];</span><br></pre></td></tr></table></figure>此算法需要借助大小为n的辅助数组， 所以其空间复杂度为O(n)。</li></ul><h2 id="第二章-线性表"><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a>第二章 线性表</h2><p><strong>线性表：</strong> 由n（n &gt;= 0）个数据特性相同的元素构成的有限序列。<br><strong>空表：</strong> n = 0的线性表。</p><p>非空的线性表或线性结构的特点：<br>（1） 存在唯一的一个被称作“第一个”的数据元素；<br>（2） 存在唯一的一个被称作“最后一个”的数据元素；<br>（3） 除第一个元素外， 结构中的每个数据元素均只有一个前驱；<br>（4） 除最后一个元素外， 结构中的每个数据元素均只有一个后继。</p><h3 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h3><p>线性表的顺序存储结构是一种<strong>随机存取</strong>的存储结构。</p><p><strong>平均查找长度：</strong> 在查找时， 为确定元素在顺序表中的位置， 需和给定的值进行比较的数据元素个数的期望值称为查找算法在查找成功时的平均查找长度（Average Search Length ASL）</p><ul><li>假设pi 是查找第i个元素的概率， Ci 为找到其中关键字与给定值相等的第i个记录时， 和给定值已进行过比较的关键字个数， 则在长度为n的线性表中， 查找成功时的平均查找长度为<code>ASL = piCi （i : 1 - n 之和）</code></li></ul><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><p>链表这东西没什么好说的， 会一些基本的操作就行。</p><h3 id="待解决的问题"><a href="#待解决的问题" class="headerlink" title="待解决的问题"></a>待解决的问题</h3><p>把链表的基本操作写一下。</p><h2 id="第三章-栈和队列"><a href="#第三章-栈和队列" class="headerlink" title="第三章 栈和队列"></a>第三章 栈和队列</h2><h3 id="栈-（后进先出的数据结构（Last-In-First-Out-LIFO））"><a href="#栈-（后进先出的数据结构（Last-In-First-Out-LIFO））" class="headerlink" title="栈 （后进先出的数据结构（Last In First Out, LIFO））"></a>栈 （后进先出的数据结构（Last In First Out, LIFO））</h3><p>栈顶， 栈底。</p><ul><li>顺序栈  </li><li>链栈</li><li><em>递归*</em>： </li></ul><ol><li>定义是递归的 比如： 阶乘，二阶Fibonacci数列<ul><li>分治法：</li><li>能将一个问题变成一个新问题， 而新问题与原问题的解法相同或类同， 不同的仅是处理的对象， 并且这些处理对象更小且变化有规律。</li><li>可以通过上述转化而使问题简化。</li><li>必须有一个明确的递归出口， 或称递归的边界。</li></ul></li><li>数据结构是递归的 比如： 链表</li><li>问题的解法是递归的 比如： Hanoi塔问题， 八皇后问题， 迷宫问题</li></ol><p><strong>递归的算法效率分析：</strong>通过迭代法求解递归方程来计算时间复杂度。</p><h3 id="队列-（先进先出的数据结构（First-In-First-Out-FIFO））"><a href="#队列-（先进先出的数据结构（First-In-First-Out-FIFO））" class="headerlink" title="队列 （先进先出的数据结构（First In First Out, FIFO））"></a>队列 （先进先出的数据结构（First In First Out, FIFO））</h3><p>队头， 队尾</p><ul><li><p>顺序队列（循环队列）<br>少用一个元素空间；<br>队空的条件： Q.front == Q.rear<br>队满的条件： (Q.rear + 1) % MAXQSIZE == Q.front</p></li><li><p>链队</p></li></ul><h3 id="遗留的问题"><a href="#遗留的问题" class="headerlink" title="遗留的问题"></a>遗留的问题</h3><p>链栈， 顺序队， 链队的代码</p><h2 id="第四章-串、数组和广义表"><a href="#第四章-串、数组和广义表" class="headerlink" title="第四章 串、数组和广义表"></a>第四章 串、数组和广义表</h2><h3 id="串（或字符串）"><a href="#串（或字符串）" class="headerlink" title="串（或字符串）"></a>串（或字符串）</h3><p><strong>串的模式匹配算法</strong></p><ol><li>BF算法（Brute-Force）<br>就是暴力、这个 太简单就不写代码了。</li><li>KMP算法<br>最主要的是如何构造next数组和nextval数组<ul><li>next数组（模式串）：</li></ul><ol><li>0    j = 1</li><li>max k(1 &lt; k &lt; j)  ‘p1 p2 … p(k - 1)’  == ‘p(j - k + 1) … p(j - 2) p(j - 1)’<br>通俗的来说 就是看 j 前面的 k - 1（1 &lt; k &lt; j）字符 和 从 1 到k - 1的字符是不是一样</li><li>1 一个字符都不匹配</li></ol><ul><li>nextval数组</li></ul><ol><li>求出next数组</li><li>根据next数组判断 s[j] ?= s[next[j]]<br>如果相等 nextval[j] = next[next[j]]<br>如果不想等(不相等) nextval[j] = next[j]</li></ol></li></ol><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组很简单就不说了</p><h3 id="广义表"><a href="#广义表" class="headerlink" title="广义表"></a>广义表</h3><p>就把一些基本的定义弄熟就行了<br>广义表一般记作<code>LS = (a1, a2, a2, ..., an)</code> 其中LS是这个广义表的名称， n为其长度。<br>ai 可以是单个元素， 也可以是广义表 分别称为 广义表LS的原子和字表。<br>习惯上， 用大写字母表示广义表的名称， 用小写字母表示原子。<br>显然， 广义表的定义是一个递归的定义， 因为在描述广义表时又用到了广义表的概念。<br><strong>例子</strong></p><ol><li>A = () —— A是一个空表， 其长度为0。</li><li>B = (e) —— B只有一个原子e，其长度为1。</li><li>C = (a, (b, c, d)) —— C的长度为2， 两个元素分别为原子a和字表(b, c, d)。</li><li>D = (A, B, C) —— D的长度为3， 三个字表都是广义表。</li><li>E = (a, E) —— 这是一个递归表， 长度为2。E 相当于一个无限的广义表 E = (a, (a, (a, …)))。</li></ol><p><strong>概念</strong></p><ul><li>表头（是一个元素）： 为非空广义表的以一个元素， 它可以是一个原子也可以是一个子表。  </li><li>表尾（是一个广义表）：除表头之外， 由其余元素构成的表。（若只有一个元素， 那么其为空表）。 </li></ul><h3 id="遗留的问题-1"><a href="#遗留的问题-1" class="headerlink" title="遗留的问题"></a>遗留的问题</h3><ol><li>KMP算法的实现</li></ol><h2 id="第五章-树和二叉树"><a href="#第五章-树和二叉树" class="headerlink" title="第五章 树和二叉树"></a>第五章 树和二叉树</h2><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><p><strong>树</strong>： 是n（n &gt;= 0）个结点的有限集， 它或为空树；或为非空树， 对于非空树T：</p><ol><li>有且仅有一个称之为根的结点。</li><li>除根结点以外的其余结点可分为m(m &gt; 0) 个互不相交的有限集T1, T2, …, TM, 其中每一个集合本身又是一棵树， 并且称之为根的子树（SubTree）。</li></ol><p><strong>树的基本术语</strong></p><ol><li><strong>结点</strong>：树中的一个独立单元。包含一个数据元素及若干指向其子树的分支 。</li><li><strong>结点的度</strong>： 结点拥有的子树数。（这个结点后继的个数）。</li><li><strong>树的度</strong>： 树内各结点度的最大值。</li><li><strong>叶子</strong>： 度为0的结点称为叶子结点或者终端结点。</li><li><strong>非终端结点</strong>： 度不为0的结点称为非终端结点或者分支结点。 除根结点以外， 非终端结点也称为内部结点。</li><li><strong>双亲和孩子</strong>： 结点的子树的根称为该结点的孩子， 相应地， 该结点称为孩子的双亲。</li><li><strong>兄弟</strong>： 同一个双亲的孩子之间互称兄弟。</li><li><strong>祖先</strong>： 从根到该结点所经分支上的所有结点。</li><li><strong>子孙</strong>： 以某结点为根的子树中的任一结点都称为该结点的子孙。</li><li><strong>层次</strong>： 结点的层次从根开始定义起， 根为第一层， 根的孩子为第二层。 树中任一结点的层次等于其双亲结点的层次加一。</li><li><strong>堂兄弟</strong>： 双亲在同一层的结点互为堂兄弟。</li><li><strong>树的深度</strong>： 树中结点的最大层次称为树的深度或高度。</li><li><strong>有序树和无序树</strong>： 如果将树中结点的各子树看成从左到右是有次序的， 则称该树为有序树， 否则称为无序树。</li><li><strong>森林</strong>： 是m(m &gt;= 0) 课互不相交的树的集合。</li></ol><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p><strong>二叉树</strong>：是n (n &gt;= 0) 个结点所构成的集合。对于非空树T：</p><ol><li>有且仅有一个称之为根的结点。</li><li>除根结点外的其余结点分为两个互不相交的子集T1 和T2， 分别称为T的左子树和右子树。</li></ol><ul><li><strong>二叉树与树的区别</strong><ol><li>二叉树每个结点至多只有两棵子树。</li><li>二叉树是有序树。</li></ol></li><li><strong>二叉树的性质</strong><ol><li>在二叉树的第i层上至多有2 ^ (i - 1) 个结点（i &gt;= 1）。</li><li>深度为k的二叉树至多有2 ^ k - 1个结点。</li><li>对任何一棵二叉树T， 如果其终端结点数为n0， 度为2的结点数为n2， 则n0 = n2 + 1。</li></ol></li><li><em>证明*</em>：<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">设B为总分支数</span><br><span class="line">二叉树结点总数</span><br><span class="line">n = n0 + n1 + n2</span><br><span class="line">除了根结点外， 每一个结点都有一个分支进入则</span><br><span class="line">n = B + <span class="number">1</span></span><br><span class="line">由于这些分支是由度为<span class="number">1</span> 和度为<span class="number">2</span> 的结点射出的，所以</span><br><span class="line">B = n1 + <span class="number">2</span> * n2</span><br><span class="line">于是得</span><br><span class="line">n = n1 + <span class="number">2</span>* n2 + <span class="number">1</span></span><br><span class="line">所以</span><br><span class="line">n0 = n2 + <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>对于任意一棵树</strong>：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">树的总结点个数为</span><br><span class="line">n = n1 + n2 + ... + nk</span><br><span class="line">除了根结点外， 每一个结点都有一个分支进入则</span><br><span class="line">n = B + <span class="number">1</span></span><br><span class="line">由于这些分支是由度为<span class="number">1</span> ， 度为<span class="number">2</span>， ...， 度为k的结点射出的， 所以</span><br><span class="line">B = n1 + <span class="number">2</span> * n2 + <span class="number">3</span> * n3 + ... + k * nk</span><br><span class="line">于是得</span><br><span class="line">n = n1 + <span class="number">2</span> * n2 + <span class="number">3</span> * n3 + ... + k * nk + <span class="number">1</span></span><br><span class="line">所以</span><br><span class="line">n0 = <span class="number">1</span> + n2 + <span class="number">2</span> * n3 + ... + (k - <span class="number">1</span>) * nk</span><br></pre></td></tr></table></figure><ul><li><strong>满二叉树</strong>： 深度为k且含有2 ^ k - 1个结点的二叉树。</li><li><strong>完全二叉树</strong>： 深度为k的， 有n个结点的二叉树， 当且仅当其每一个结点都与深度为k的满二叉树中编号从1 - n 一一对应时， 称为完全二叉树。<ul><li><strong>特点</strong> </li></ul><ol><li>叶子节点只可能在层次最大的两层上出现（第k层和第k - 1层）；</li><li>对任一结点， 若其右分支下的子孙的最大层次为l， 则其左分支下的子孙的最大层次必为l 或 l + 1 。</li></ol></li></ul><ol start="4"><li>具有n个结点的完全二叉树的深度为 (向下取整)[log2 n]  + 1。</li></ol><h3 id="遍历二叉树和线索二叉树"><a href="#遍历二叉树和线索二叉树" class="headerlink" title="遍历二叉树和线索二叉树"></a>遍历二叉树和线索二叉树</h3><h4 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h4><ul><li>前序（先序）遍历<ol><li>访问根结点</li><li>先序遍历左子树</li><li>先序遍历右子树</li></ol></li><li>中序遍历<ol><li>中序遍历左子树</li><li>访问根结点</li><li>中序遍历右子树</li></ol></li><li>后序遍历<ol><li>后序遍历左子树</li><li>后序遍历右子树</li><li>访问根结点</li></ol></li></ul><p>表达式的前缀表示：波兰式。<br>表达式的后缀表示：逆波兰式。<br>表达式的中缀表示：中缀式。  </p><p>如何根据中缀式写出波兰表达式和逆波兰表达式？<br><a href="https://solodance.top/2019/06/25/根据算数表达式（中缀式）求波兰表达式和逆波兰表达式/">相关博客链接</a></p><h4 id="线索二叉树"><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h4><p><strong>构造中序线索二叉树</strong><br>在二叉树的线索链表上添加一个头结点，令其lchild 指向二叉树的根结点， rchild指向中序遍历时的最后一个节点；同时令二叉树中序遍历序列第一个节点的lchild和最后一个节点的rchild指向头结点。<br><strong>以结点p为根的子树中序线索化</strong>  </p><ol><li>若p非空， 左子树递归线索化</li><li>若p的左孩子为空， 则给p加上左线索， 将其LTag置为1， 让p的左孩子指针指向pre（前驱）；否则将LTag置为0。</li><li>若pre的右孩子为空，则给pre加上右线索， 将其LTag置为1， 让pre的右孩子指针指向p（后继）；否则将pre的LTag置为0；</li><li>将pre指向刚访问过的结点p， 即pre = p。</li><li>右子树递归线索化。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InThreading</span><span class="params">(BiThrTree p)</span></span>&#123;</span><br><span class="line">    <span class="comment">//pre为全局变量， 初始化时其右孩子指针为空， 便于在树的最左点开始建线索。</span></span><br><span class="line">    <span class="keyword">if</span> (p)&#123;</span><br><span class="line">        InThreading(p -&gt; lchild);</span><br><span class="line">        <span class="keyword">if</span> (!p-&gt;lchild)&#123; </span><br><span class="line">            p-&gt;LTag = <span class="number">1</span>;</span><br><span class="line">            p-&gt;lchild = pre;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p-&gt;LTag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!pre-&gt;rchild)&#123;</span><br><span class="line">            pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">            pre-&gt;rchild = p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">        pre = p;</span><br><span class="line">        InThreading(p-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><strong>带头结点的二叉树中序线索化</strong>  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderThreading</span><span class="params">(BiThrTree &amp;Thrt, BithrTree T)</span></span>&#123;</span><br><span class="line">    <span class="comment">//中序遍历二叉树T， 并将其中序线索化。 Thrt指向头结点</span></span><br><span class="line">    Thrt = <span class="keyword">new</span> BiThrNode;</span><br><span class="line">    Thrt-&gt;LTag = <span class="number">0</span>;</span><br><span class="line">    Thrt-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">    Thrt-&gt;rchild = Thrt;</span><br><span class="line">    <span class="keyword">if</span> (!T)</span><br><span class="line">        Thrt-&gt;lchild = Thrt;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        Thrt-&gt;lchild=T;</span><br><span class="line">        pre = Thrt;</span><br><span class="line">        InThreading(T);</span><br><span class="line">        pre-&gt;rchild = Thrt;</span><br><span class="line">        pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">        Thrt-&gt;rchild = pre;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>遍历线索二叉树</strong> </p><ol><li>在中序线索二叉树中查找<ul><li>若p-&gt;LTag=1 ，则p的左链指向其前驱；</li><li>若p-&gt;LTag=0 ，则说明p有左子树， 结点的前驱是遍历其左子树时最后访问的一个结点。</li><li>若p-&gt;RTag=1， 则p的右链指向其后继；</li><li>若p-&gt;RTag=0， 则说明p有右子树， 结点的后继是遍历其右子树时访问的第一个结点。</li></ul></li><li>在先序线索二叉树中查找<ul><li>若p-&gt;LTag=1， 则p的左链指向其前驱；</li><li>若p-&gt;LTag=0， 则说明p有左子树， 此时p的前驱有两种情况：若*p是其双亲的左孩子， 则其双亲结点为其前驱；否则应该是其双亲的左子树上先序遍历的最后一个结点。</li><li>若p-&gt;RTag=1， 则p的右链指向其后继；</li><li>若p-&gt;RTag=0， 则说明p有右子树， *p的后继必为其左子树数（若存在）或右子树根。</li></ul></li><li>在后序线索二叉树中查找<ul><li>若p-&gt;LTag=1， 则p的左链指向其前驱；</li><li>若p-&gt;LTag=0， 当p-&gt;RTag=0时， 则p的右链指示其前驱；若p-&gt;RTag=1时， 则p的左链指向其前驱；</li><li>若p-&gt;RTag=1， 则p的右链指向其后继；</li><li>查找其后继比较复杂，若<code>*p</code>是二叉树的根， 则其后继为空；若<code>*p</code>是其双亲的右孩子， 则其后继为双亲结点；若<code>*p</code>是其双亲上午左孩子， 且<code>*p</code>没有右兄弟，则其后继为双亲结点；若<code>*p</code>是其双亲的左孩子， 且<code>*p</code>有右兄弟，， 则其后继为双亲的右子树上按后序遍历列出的第一个结点。</li></ul></li></ol><h3 id="树和森林"><a href="#树和森林" class="headerlink" title="树和森林"></a>树和森林</h3><h4 id="树的存储结构"><a href="#树的存储结构" class="headerlink" title="树的存储结构"></a>树的存储结构</h4><ol><li>双亲表示法</li></ol><table><thead><tr><th>data</th><th>parent</th></tr></thead></table><ol start="2"><li><p>孩子表示法</p></li><li><p>孩子兄弟法<br>又称二叉树表示法， 或二叉链表表示法， 即以二叉链表做树的存储结构。链表中结点的两个链域分别指向该节点的第一个孩子结点和下一个兄弟结点。</p></li></ol><table><thead><tr><th>firstchild</th><th>data</th><th>nextsibling</th></tr></thead></table><h4 id="树与二叉树的转换"><a href="#树与二叉树的转换" class="headerlink" title="树与二叉树的转换"></a>树与二叉树的转换</h4><p>遵循左儿子右兄弟的原则。</p><h4 id="树和森林的遍历"><a href="#树和森林的遍历" class="headerlink" title="树和森林的遍历"></a>树和森林的遍历</h4><p><strong>树的遍历</strong>  </p><ul><li>先根遍历树：先访问数的根结点， 然后依次先根遍历根的每棵子树。</li><li>后根遍历树：先依次后根遍历每棵子树， 然后访问根结点。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一章-绪论&quot;&gt;&lt;a href=&quot;#第一章-绪论&quot; class=&quot;headerlink&quot; title=&quot;第一章 绪论&quot;&gt;&lt;/a&gt;第一章 绪论&lt;/h2&gt;&lt;h3 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://solodance.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://solodance.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="笔记" scheme="https://solodance.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>求n边形的面积</title>
    <link href="https://solodance.top/2020/01/23/%E6%B1%82n%E8%BE%B9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/"/>
    <id>https://solodance.top/2020/01/23/%E6%B1%82n%E8%BE%B9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/</id>
    <published>2020-01-23T13:42:35.045Z</published>
    <updated>2019-12-02T05:11:12.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="http://www.acmicpc.sdnu.edu.cn/problem/show/1334" target="_blank" rel="noopener">题目链接</a></p><p>给出正n边形n个点的坐标， 求n变形面积的2倍， <code>3&lt;=N&lt;=100000</code>，<code>0&lt;=xi,yi&lt;=10^9</code>，  <code>mod = 1000000007</code></p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">4557430888798830399</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll x, y;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[i].x = read(), a[i].y = read();</span><br><span class="line">        a[n] = a[<span class="number">0</span>];</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            ans = (ans + (a[i - <span class="number">1</span>].x * a[i].y - a[i].x * a[i - <span class="number">1</span>].y) % mod + mod) % mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.acmicpc.sdnu.edu.cn/problem/show/1334&quot; tar
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://solodance.top/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="小知识" scheme="https://solodance.top/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>判断一个数是不是2的整数次幂</title>
    <link href="https://solodance.top/2020/01/23/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E4%B8%8D%E6%98%AF2%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E5%B9%82/"/>
    <id>https://solodance.top/2020/01/23/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E4%B8%8D%E6%98%AF2%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E5%B9%82/</id>
    <published>2020-01-23T13:42:35.029Z</published>
    <updated>2019-07-23T01:43:57.686Z</updated>
    
    <content type="html"><![CDATA[<p>判断一个数是不是2的整数次幂</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (!(n &amp; (n<span class="number">-1</span>))) &amp;&amp; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;判断一个数是不是2的整数次幂&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://solodance.top/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="小知识" scheme="https://solodance.top/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
      <category term="数学方法" scheme="https://solodance.top/tags/%E6%95%B0%E5%AD%A6%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
