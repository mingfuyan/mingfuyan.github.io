<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Solo_Dance的博客</title>
  
  <subtitle>欢迎访问 Solo_Dance的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://solodance.top/"/>
  <updated>2020-04-03T01:09:49.940Z</updated>
  <id>https://solodance.top/</id>
  
  <author>
    <name>Mingfu Yan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计蒜客 - 44529 The League of Sequence Designers(构造)</title>
    <link href="https://solodance.top/2020/04/03/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044529%20The%20League%20of%20Sequence%20Designers(%E6%9E%84%E9%80%A0)/"/>
    <id>https://solodance.top/2020/04/03/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044529%20The%20League%20of%20Sequence%20Designers(%E6%9E%84%E9%80%A0)/</id>
    <published>2020-04-03T01:10:08.369Z</published>
    <updated>2020-04-03T01:09:49.940Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://nanti.jisuanke.com/t/44529" target="_blank" rel="noopener">题目链接</a></p><p>给你两个数k，n。n表示构造的序列的最小长度，k表示构造的序列满足下列两种算法得到的答案之差， 构造这个序列，若无，输出-1。</p><a id="more"></a><p>这个序列最多有1999个， 元素的绝对值小于1e6.</p><p><code>sum[i][j] 是指 a[i] 到 a[j]的和</code></p><p>算法1：<br><code>ans = max(ans, (r - l + 1) * sum[l][r])</code></p><p>算法2：</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> += a[i]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">sum</span> &lt; <span class="number">0</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="built_in">left</span> = i</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ans = max(ans, (i - <span class="built_in">left</span>) * <span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先你要明白这两种算法到底有什么不同。</p><p>举个例子  <code>1 -2 2</code>， 这个序列在算法1， 答案是3 (<code>(1 - 2 + 2) * 3</code>) ， 在算法2，答案是2(<code>2 * 1</code>),  这时候我们就可以按照前两项是<code>1 -2</code>， 后面全正来构造了。</p><p>假设前两项是<code>1 -2</code>， 假设后面m个元素的和为sum(后m个元素都是正的)， 那么对于算法1 <code>ans1 = (m + 2) * (sum - 1)</code>，算法2 <code>ans2 = m * sum</code>.</p><p>根据题意 <code>ans1 - ans2 = k</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(m + <span class="number">2</span>) * (sum - <span class="number">1</span>) - m * sum = k</span><br><span class="line">m * sum - m + <span class="number">2</span>sum - <span class="number">2</span> - m * sum = k</span><br><span class="line"><span class="number">2</span>sum - <span class="number">2</span> = m + k</span><br><span class="line">sum = (m + k) / <span class="number">2</span> + <span class="number">1</span></span><br></pre></td></tr></table></figure><p>k是确定的，看m。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">前提条件 m + <span class="number">2</span> &lt;= <span class="number">1999</span> -&gt; m &lt; <span class="number">1997</span></span><br><span class="line">m + <span class="number">2</span> &gt;= n</span><br><span class="line">然后 m + k 是偶数</span><br></pre></td></tr></table></figure><p>这时候就呼之欲出了</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">当k为奇数时，m 是奇数 令 m = <span class="number">1997</span></span><br><span class="line">当k为偶数时，m是偶数 令 m = <span class="number">1996</span></span><br><span class="line">但是 k为偶数时，m是偶数时， m + <span class="number">2</span> 是 <span class="number">1998</span>项，然后当n是<span class="number">1999</span>时， 这就少了一项，怎么办？特判，在前面在加一个<span class="number">-1e6</span> 即 <span class="number">-1e6</span> <span class="number">1</span> <span class="number">-2</span></span><br></pre></td></tr></table></figure><p>m给出了， sum(<code>sum = (m + k) / 2 + 1</code>)也就求出来了，然后让后面的项之和为sum就行了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = read();</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> k = read(), len = read();</span><br><span class="line">        <span class="keyword">if</span> (len &gt;= <span class="number">2000</span>)&#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.clear();</span><br><span class="line">        <span class="keyword">int</span> m;</span><br><span class="line">        <span class="comment">// 特判</span></span><br><span class="line">        <span class="keyword">if</span> (k % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; len == <span class="number">1999</span>)&#123;</span><br><span class="line">            m = <span class="number">1996</span>;</span><br><span class="line">            <span class="keyword">int</span> sum = (k + m) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(sum &gt; <span class="number">1000000</span>)&#123;</span><br><span class="line">                ans.push_back(<span class="number">1000000</span>);</span><br><span class="line">                sum -= <span class="number">1000000</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans.push_back(sum);</span><br><span class="line">            <span class="keyword">while</span>(ans.size() &lt; m) ans.push_back(<span class="number">0</span>);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="number">1999</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"-1000000 1 -2 "</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> c : ans) <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 给m赋值</span></span><br><span class="line">        <span class="keyword">if</span> (k &amp; <span class="number">1</span>) m = <span class="number">1997</span>;</span><br><span class="line">        <span class="keyword">else</span> m = <span class="number">1996</span>;</span><br><span class="line">        <span class="keyword">int</span> sum = (k + m) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(sum &gt; <span class="number">1000000</span>)&#123;</span><br><span class="line">            ans.push_back(<span class="number">1000000</span>);</span><br><span class="line">            sum -= <span class="number">1000000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans.push_back(sum);</span><br><span class="line">        <span class="keyword">while</span>(ans.size() &lt; m) ans.push_back(<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; m + <span class="number">2</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"1 -2 "</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : ans) <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://nanti.jisuanke.com/t/44529&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你两个数k，n。n表示构造的序列的最小长度，k表示构造的序列满足下列两种算法得到的答案之差， 构造这个序列，若无，输出-1。&lt;/p&gt;
    
    </summary>
    
    
      <category term="构造" scheme="https://solodance.top/categories/%E6%9E%84%E9%80%A0/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="构造" scheme="https://solodance.top/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>POJ - 1456 Supermarket(并查集+贪心).md</title>
    <link href="https://solodance.top/2020/03/28/POJ%20-%201456%20Supermarket(%E5%B9%B6%E6%9F%A5%E9%9B%86+%E8%B4%AA%E5%BF%83)/"/>
    <id>https://solodance.top/2020/03/28/POJ%20-%201456%20Supermarket(%E5%B9%B6%E6%9F%A5%E9%9B%86+%E8%B4%AA%E5%BF%83)/</id>
    <published>2020-03-28T12:00:18.869Z</published>
    <updated>2020-03-28T12:00:07.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/POJ-1456" target="_blank" rel="noopener">题目链接</a></p><p>超市里有N个商品. 第i个商品必须在保质期(第di天)之前卖掉, 若卖掉可让超市获得pi的利润.<br>每天只能卖一个商品.<br>现在你要让超市获得最大的利润.</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>用并查集向前查找， 太妙了呀。</p><p>首先贪心， 价值越大的物品， 越放在快过期的那天卖最好， 因为你肯定要卖的嘛， 如果快过期那天已经卖了别的了， 就说明有更大价值东西在那天卖了。</p><p>然后寻找最靠近保质期切没有被用到的哪一天 ， 这不就是并查集？</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">tofind</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f[x] != x) f[x] = tofind(f[x]);</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> p, d;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.p != y.p) <span class="keyword">return</span> x.p &gt; y.p;</span><br><span class="line">    <span class="keyword">return</span> x.d &lt; y.d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[i].p = read(), a[i].d = read();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i) f[i] = i;</span><br><span class="line">        sort(a, a + n, cmp);</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> fa = tofind(a[i].d);</span><br><span class="line">            <span class="keyword">if</span> (fa &lt; <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ans += a[i].p;</span><br><span class="line">            f[fa] = fa - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/POJ-1456&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;超市里有N个商品. 第i个商品必须在保质期(第di天)之前卖掉, 若卖掉可让超市获得pi的利润.&lt;br&gt;每天只能卖一个商品.&lt;br&gt;现在你要让超市获得最大的利润.&lt;/p&gt;
    
    </summary>
    
    
      <category term="并查集" scheme="https://solodance.top/categories/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="贪心" scheme="https://solodance.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="并查集" scheme="https://solodance.top/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>POJ - 1417 True Liars(并查集、dp)</title>
    <link href="https://solodance.top/2020/03/28/POJ%20-%201417%20True%20Liars(%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%81dp)/"/>
    <id>https://solodance.top/2020/03/28/POJ%20-%201417%20True%20Liars(%E5%B9%B6%E6%9F%A5%E9%9B%86%E3%80%81dp)/</id>
    <published>2020-03-28T11:06:17.367Z</published>
    <updated>2020-03-28T11:06:02.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/POJ-1417" target="_blank" rel="noopener">题目链接</a></p><p>一个村庄有两类人，好人坏人， 好人总是说真话， 坏人总是说假话， 给你m(原题用n表示的， 我让n = p + q)个询问和好人、坏人的数量p  q， 每个询问 x y yes/no, 表示 x 说 y 是 好/坏人。问是否能够唯一确定哪些是好人， 哪些是坏人， 如果可以输出好人的序号以”end”结尾， 否则输出”no”</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这让我想到食物链那道题， 所以我想用两个大集合来表示u v是不是同一个阵营， 即 u 的祖先是个 v 的祖先同一个集合还是和 v + n 的祖先是同一个集合。</p><p>我本着这个思想然后找呀找找呀找， 发现全都是用权值并查集做的，心里阵阵不悦， 最后发现了一个12年的博客(<a href="https://blog.csdn.net/gotoac/article/details/8234846" target="_blank" rel="noopener">点此进入</a>)， 哒， 心里莫名开心。</p><p>可以推断，当为yes时，可以发现u和v是同一类人，为no时是不同类。</p><p>然后用我上面说的并查集 是否为一类归到集合里。</p><p>然后用dp， dp[i][j] 表示前i个集合组成j好人数的个数， 如果 <code>dp[cnt][p] == 1</code> , (cnt是集合的个数)那么就存在唯一解， 输出路径就行了， 本质上就是个背包。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">205</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">tofind</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x] == x ? x : f[x] = tofind(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">tojoin</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    f[tofind(a)] = tofind(b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[N][N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ve[N][<span class="number">2</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m, p, q;</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = p + q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; ++i) f[i] = i;</span><br><span class="line">    <span class="keyword">char</span> op[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%s"</span>, &amp;x, &amp;y, op);</span><br><span class="line">        <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">'y'</span>) tojoin(x, y), tojoin(x + n, y + n);</span><br><span class="line">        <span class="keyword">else</span> tojoin(x, y + n), tojoin(x + n, y);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//  可以不用, 但是放在这里容易理解代码</span></span><br><span class="line"><span class="comment">//    for (int i = 1; i &lt;= n; ++i)&#123;</span></span><br><span class="line"><span class="comment">//        if (tofind(i) == tofind(i + n))&#123;</span></span><br><span class="line"><span class="comment">//            puts("no");</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line">    ms(vis, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i]) <span class="keyword">continue</span>;</span><br><span class="line">        ++tot;</span><br><span class="line">        ve[tot][<span class="number">0</span>].clear();</span><br><span class="line">        ve[tot][<span class="number">1</span>].clear();</span><br><span class="line">        <span class="keyword">int</span> f0 = tofind(i), f1 = tofind(i + n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span> (vis[j]) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (tofind(j) == f0) ve[tot][<span class="number">0</span>].push_back(j), vis[j] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (tofind(j) == f1) ve[tot][<span class="number">1</span>].push_back(j), vis[j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ms(dp, <span class="number">0</span>); dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= tot; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> s0 = ve[i][<span class="number">0</span>].size();</span><br><span class="line">        <span class="keyword">int</span> s1 = ve[i][<span class="number">1</span>].size();</span><br><span class="line"><span class="comment">//        for (int j = p; j &gt;= 0; --j)&#123; // 记住 这里不是1 是0！！！！！！！</span></span><br><span class="line"><span class="comment">//            if (j &gt;= s0) dp[i][j] += dp[i - 1][j - s0];</span></span><br><span class="line"><span class="comment">//            if (j &gt;= s1) dp[i][j] += dp[i - 1][j - s1];</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="comment">// 建议这么写</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = p; j &gt;= s0; --j) dp[i][j] += dp[i - <span class="number">1</span>][j - s0];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = p; j &gt;= s1; --j) dp[i][j] += dp[i - <span class="number">1</span>][j - s1];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dp[tot][p] != <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"no"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        ans.clear();</span><br><span class="line">        <span class="keyword">int</span> pre = p;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = tot; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">            <span class="keyword">int</span> s0 = ve[i][<span class="number">0</span>].size();</span><br><span class="line">            <span class="keyword">if</span> (pre &gt;= s0 &amp;&amp; dp[i - <span class="number">1</span>][pre - s0] == <span class="number">1</span>)&#123;</span><br><span class="line">                pre -= s0;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; s0; ++j) ans.push_back(ve[i][<span class="number">0</span>][j]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> s1 = ve[i][<span class="number">1</span>].size();</span><br><span class="line">            <span class="keyword">if</span> (pre &gt;= s1 &amp;&amp; dp[i - <span class="number">1</span>][pre - s1] == <span class="number">1</span>)&#123;</span><br><span class="line">                pre -= s1;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; s1; ++j) ans.push_back(ve[i][<span class="number">1</span>][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(ans.begin(), ans.end());</span><br><span class="line">        <span class="keyword">int</span> sz = ans.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"end"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; m &gt;&gt; p &gt;&gt; q &amp;&amp; (m || p || q)) solve();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">2 1 27</span></span><br><span class="line"><span class="comment">22 25 yes</span></span><br><span class="line"><span class="comment">5 27 yes</span></span><br><span class="line"><span class="comment">0 0 0</span></span><br><span class="line"><span class="comment">no</span></span><br><span class="line"><span class="comment"> * */</span></span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/POJ-1417&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个村庄有两类人，好人坏人， 好人总是说真话， 坏人总是说假话， 给你m(原题用n表示的， 我让n = p + q)个询问和好人、坏人的数量p  q， 每个询问 x y yes/no, 表示 x 说 y 是 好/坏人。问是否能够唯一确定哪些是好人， 哪些是坏人， 如果可以输出好人的序号以”end”结尾， 否则输出”no”&lt;/p&gt;
    
    </summary>
    
    
      <category term="并查集" scheme="https://solodance.top/categories/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="dp" scheme="https://solodance.top/tags/dp/"/>
    
      <category term="并查集" scheme="https://solodance.top/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>HDU - 4081 Qin Shi Huang&#39;s National Road System(次小生成树)</title>
    <link href="https://solodance.top/2020/03/27/HDU%20-%204081%20Qin%20Shi%20Huang&#39;s%20National%20Road%20System(%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91)/"/>
    <id>https://solodance.top/2020/03/27/HDU%20-%204081%20Qin%20Shi%20Huang&#39;s%20National%20Road%20System(%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91)/</id>
    <published>2020-03-27T12:45:33.505Z</published>
    <updated>2020-03-27T12:44:54.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/HDU-4081" target="_blank" rel="noopener">题目链接</a></p><p>给出n(&lt;=1e3)个城市的x,y坐标以及每个城市的人数， 这些城市的主人想建造最小生成树，这时候有个会魔法的道士说， 我可以让一条路权值为0， 求A/B的最大值， 其中A是权值为0的道路连接的城市的人数之和， B是最小生成树的权值。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这题实在是太妙了， 果然还是要多刷题。</p><p>我们暴力遍历所有的边， 然后求 A/B的最大值就行了。</p><p>MST为最小生成树的权值和，p[i]为城市i的人数。</p><p>如果我们遍历的的边(u, v) 在最小生成树的生成树上， 那么就把这条边减去  <code>ans = max(ans, (p[u] + p[v]) / (MST - w))</code>4</p><p>如果不在最小生成树上， 那么我们就删除u到v这个环的最长边（因为要让B越小越好嘛）， 即 <code>ans = max(ans, (p[u] + p[v]) / (MST - maxd[u][v]))</code></p><p>看到这是不是就想到次小生成树啦~</p><p>切忌， 用链式前向星会超时！用邻接矩阵就不会超时~</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">double</span> , <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ma[N][N];</span><br><span class="line"><span class="keyword">int</span> pre[N], used[N][N];</span><br><span class="line"><span class="keyword">double</span> maxd[N][N], dis[N];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">prim</span><span class="params">(<span class="keyword">int</span> st)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(used, <span class="number">0</span>, <span class="keyword">sizeof</span> used);</span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    dis[st] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt_s = <span class="number">0</span>;</span><br><span class="line">    pre[st] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, st));</span><br><span class="line">    <span class="keyword">while</span> (!q.empty() &amp;&amp; cnt_s &lt; n) &#123;</span><br><span class="line">        <span class="keyword">double</span> d = q.top().first;<span class="keyword">int</span> u = q.top().second;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        cnt_s++; sum += d;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        used[pre[u]][u] = used[u][pre[u]] = <span class="number">1</span>;</span><br><span class="line">        maxd[pre[u]][u] = maxd[u][pre[u]] = d;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i == u) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> v = i;</span><br><span class="line">            <span class="keyword">double</span> w = ma[u][v];</span><br><span class="line">            <span class="keyword">if</span> (vis[v])</span><br><span class="line">                maxd[u][v] = maxd[v][u] = max(maxd[v][pre[u]], dis[u]);</span><br><span class="line">            <span class="keyword">if</span> (!vis[v] &amp;&amp; w &lt; dis[v]) &#123;</span><br><span class="line">                dis[v] = w;pre[v] = u;</span><br><span class="line">                q.push(P(dis[v], v));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> p[N];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getSecondMST</span><span class="params">(<span class="keyword">double</span> sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (!used[i][j]) ans = max(ans, <span class="number">1.0</span> * (p[i] + p[j]) / (sum - maxd[i][j]));</span><br><span class="line">            <span class="keyword">else</span> ans = max(ans, <span class="number">1.0</span> * (p[i] + p[j]) / (sum - ma[i][j]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">disxy</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x.x - y.x) * (x.x - y.x) + (x.y - y.y) * (x.y - y.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a[i].x, &amp;a[i].y, &amp;p[i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            dis[i] = <span class="number">1e9</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line">                maxd[i][j] = <span class="number">0</span>;</span><br><span class="line">                ma[i][j] = disxy(a[i], a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> sum = prim(<span class="number">1</span>);</span><br><span class="line">        sum = getSecondMST(sum);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/HDU-4081&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给出n(&amp;lt;=1e3)个城市的x,y坐标以及每个城市的人数， 这些城市的主人想建造最小生成树，这时候有个会魔法的道士说， 我可以让一条路权值为0， 求A/B的最大值， 其中A是权值为0的道路连接的城市的人数之和， B是最小生成树的权值。&lt;/p&gt;
    
    </summary>
    
    
      <category term="生成树" scheme="https://solodance.top/categories/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="次小生成树" scheme="https://solodance.top/tags/%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>计蒜客 - 44141 First Last Sorting(dp)</title>
    <link href="https://solodance.top/2020/03/26/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044141%20First%20Last%20Sorting(dp)/"/>
    <id>https://solodance.top/2020/03/26/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044141%20First%20Last%20Sorting(dp)/</id>
    <published>2020-03-26T12:53:12.154Z</published>
    <updated>2020-03-26T12:53:05.211Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44141" target="_blank" rel="noopener">题目链接</a></p><p>给你一个1~n（n &lt;= 1e5）随机排列的序列，你有两种操作， 把第i个移到对首或者队尾。为最少移动几次能让 ai = i(也就是1， 2， 3， … ,  n)</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>正难则反， 我们只要求出严格上升的子序列的长度ans， 那么用 n - ans 就是答案</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> dp[N]; <span class="comment">// dp[i]表示以i结尾的严格上升的最长子序列</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = read();</span><br><span class="line">        dp[x] = dp[x - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        ans = max(ans, dp[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; n - ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44141&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一个1~n（n &amp;lt;= 1e5）随机排列的序列，你有两种操作， 把第i个移到对首或者队尾。为最少移动几次能让 ai = i(也就是1， 2， 3， … ,  n)&lt;/p&gt;
    
    </summary>
    
    
      <category term="dp" scheme="https://solodance.top/categories/dp/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="dp" scheme="https://solodance.top/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>计蒜客 - 44154 Historical TV Remote Control (思维)</title>
    <link href="https://solodance.top/2020/03/26/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044154%20Historical%20TV%20Remote%20Control%20(%E6%80%9D%E7%BB%B4)/"/>
    <id>https://solodance.top/2020/03/26/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044154%20Historical%20TV%20Remote%20Control%20(%E6%80%9D%E7%BB%B4)/</id>
    <published>2020-03-26T11:54:47.532Z</published>
    <updated>2020-03-28T02:55:27.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44154" target="_blank" rel="noopener">题目链接</a></p><p>一个只有12个键的遥控器(0-9 上键， 下键)， 然后最多有9个键坏掉了（上下键不会坏）， 然后给你想要的序号(1-999), 问最少需要按几次上下键。<br>保证只有(0-999), 且0不能到999且999不能到0。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>暴力， 居然是暴力0~999 。<br>然后别忘了特判0 。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;ma;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="number">0</span> &amp;&amp; ma[<span class="number">0</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (ma[tmp]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = read();</span><br><span class="line">        ma[x] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ta = read();</span><br><span class="line">    <span class="keyword">int</span> ans = INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">999</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> d = <span class="built_in">abs</span>(ta - i);</span><br><span class="line">        <span class="keyword">if</span> (d &lt; ans &amp;&amp; is(i)) ans = d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44154&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个只有12个键的遥控器(0-9 上键， 下键)， 然后最多有9个键坏掉了（上下键不会坏）， 然后给你想要的序号(1-999), 问最少需要按几次上下键。&lt;br&gt;保证只有(0-999), 且0不能到999且999不能到0。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
  </entry>
  
  <entry>
    <title>c++字符串转换为数字（stoi, stol, stoul, stoull, stof, stod, stold）</title>
    <link href="https://solodance.top/2020/03/26/c++%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97%EF%BC%88stoi,%20stol,%20stoul,%20stoull,%20stof,%20stod,%20stold%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/26/c++%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E5%AD%97%EF%BC%88stoi,%20stol,%20stoul,%20stoull,%20stof,%20stod,%20stold%EF%BC%89/</id>
    <published>2020-03-26T11:45:59.577Z</published>
    <updated>2020-03-26T11:45:42.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="c-字符串转换为数字（stoi-stol-stoul-stoull-stof-stod-stold）"><a href="#c-字符串转换为数字（stoi-stol-stoul-stoull-stof-stod-stold）" class="headerlink" title="c++字符串转换为数字（stoi, stol, stoul, stoull, stof, stod, stold）"></a>c++字符串转换为数字（stoi, stol, stoul, stoull, stof, stod, stold）</h2><p>头文件<code>#include &lt;string&gt;</code></p><a id="more"></a><h3 id="1-stoi"><a href="#1-stoi" class="headerlink" title="1. stoi"></a>1. stoi</h3><p>将字符串转换成<code>int</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stoi</span> <span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp;  str, <span class="keyword">size_t</span>* idx = <span class="number">0</span>, <span class="keyword">int</span> base = <span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stoi</span> <span class="params">(<span class="keyword">const</span> <span class="built_in">wstring</span>&amp; str, <span class="keyword">size_t</span>* idx = <span class="number">0</span>, <span class="keyword">int</span> base = <span class="number">10</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>base是指string里的数字是几进制的。</p><p>示例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str_bin = <span class="string">"1010"</span>;</span><br><span class="line">    <span class="built_in">string</span> str_hex = <span class="string">"a"</span>;</span><br><span class="line">    <span class="built_in">string</span> str_auto = <span class="string">"0x3f3f3f3f"</span>;</span><br><span class="line">    <span class="built_in">string</span> str_dec = <span class="string">"12345"</span>;</span><br><span class="line">    <span class="built_in">string</span> str_oct = <span class="string">"10"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str_bin &lt;&lt; <span class="string">" "</span> &lt;&lt; stoi(str_bin, <span class="literal">nullptr</span>, <span class="number">2</span>) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str_hex &lt;&lt; <span class="string">" "</span> &lt;&lt; stoi(str_hex, <span class="literal">nullptr</span>, <span class="number">16</span>) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str_auto &lt;&lt; <span class="string">" "</span> &lt;&lt; stoi(str_auto, <span class="literal">nullptr</span>, <span class="number">0</span>) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str_dec &lt;&lt; <span class="string">" "</span> &lt;&lt; stoi(str_dec, <span class="literal">nullptr</span>, <span class="number">10</span>) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str_oct &lt;&lt; <span class="string">" "</span> &lt;&lt; stoi(str_oct, <span class="literal">nullptr</span>, <span class="number">8</span>) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-stol"><a href="#2-stol" class="headerlink" title="2. stol"></a>2. stol</h3><p>将字符串转化为<code>long</code> </p><h3 id="3-stoul"><a href="#3-stoul" class="headerlink" title="3. stoul"></a>3. stoul</h3><p>将字符串转化为<code>unsigned long</code></p><h3 id="4-stoll"><a href="#4-stoll" class="headerlink" title="4. stoll"></a>4. stoll</h3><p>将字符串转化为<code>long long</code></p><h3 id="5-stoull"><a href="#5-stoull" class="headerlink" title="5. stoull"></a>5. stoull</h3><p>将字符串转化为<code>unsigned long long</code></p><h3 id="6-stof"><a href="#6-stof" class="headerlink" title="6. stof"></a>6. stof</h3><p>将字符串转化为<code>float</code></p><h3 id="7-stod"><a href="#7-stod" class="headerlink" title="7. stod"></a>7. stod</h3><p>将字符串转化为<code>double</code></p><h3 id="8-stold"><a href="#8-stold" class="headerlink" title="8. stold"></a>8. stold</h3><p>将字符串转化为<code>long double</code></p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;c-字符串转换为数字（stoi-stol-stoul-stoull-stof-stod-stold）&quot;&gt;&lt;a href=&quot;#c-字符串转换为数字（stoi-stol-stoul-stoull-stof-stod-stold）&quot; class=&quot;headerlink&quot; title=&quot;c++字符串转换为数字（stoi, stol, stoul, stoull, stof, stod, stold）&quot;&gt;&lt;/a&gt;c++字符串转换为数字（stoi, stol, stoul, stoull, stof, stod, stold）&lt;/h2&gt;&lt;p&gt;头文件&lt;code&gt;#include &amp;lt;string&amp;gt;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="字符串" scheme="https://solodance.top/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
  </entry>
  
  <entry>
    <title>计蒜客 - 44158 World Cup Fever(最短路)</title>
    <link href="https://solodance.top/2020/03/26/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044158%20World%20Cup%20Fever(%E6%9C%80%E7%9F%AD%E8%B7%AF)/"/>
    <id>https://solodance.top/2020/03/26/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044158%20World%20Cup%20Fever(%E6%9C%80%E7%9F%AD%E8%B7%AF)/</id>
    <published>2020-03-26T10:23:06.993Z</published>
    <updated>2020-03-26T10:22:55.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44158" target="_blank" rel="noopener">题目链接</a></p><p>两支球队a, b，每支n人， 如果a球队两个队员之间没有其他人， 那么就可以传球， 问a队1号队员最少传多少次能传到a队n号队员， 输出次数， 传不到输出-1.</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>思路很简单， 就是判断a球队的队员能不能直接传球，能的话就加一条边长为1的边， 注意如果两个球员之间有本队的球员也是不能直接传球的！！！</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, w, ne;</span><br><span class="line">&#125; ed[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[N], head[N], tim[N], dis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    ed[cnt] = &#123;u, v, w, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">memset</span>(tim, <span class="number">0</span>, <span class="keyword">sizeof</span> tim);</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="built_in">memset</span>(dis, INF, <span class="keyword">sizeof</span> dis);</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class="line">    dis[s] = <span class="number">0</span>;</span><br><span class="line">    q.emplace(<span class="number">0</span>, s);</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)</span><br><span class="line">                dis[v] = dis[u] + w, q.emplace(dis[v], v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">&#125;a[N], b[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLine</span><span class="params">(point x, point y, point z)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (z.x &lt; min(x.x, y.x) || z.x &gt; max(x.x, y.x) || z.y &lt; min(x.y, y.y) || z.y &gt; max(x.y, y.y))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> (x.y - y.y) * (x.x - z.x) == (x.y - z.y) * (x.x - y.x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">if</span> (isLine(a[x], a[y], b[i])) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 特别要注意判断如果中间有本队球员也是不能传球的！</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i == x || y == i) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (isLine(a[x], a[y], a[i])) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[i].x = read(), a[i].y = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) b[i].x = read(), b[i].y = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (is(i, j)) add(i, j, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dijk(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (dis[n - <span class="number">1</span>] &gt;= INF) dis[n - <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dis[n - <span class="number">1</span>] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44158&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两支球队a, b，每支n人， 如果a球队两个队员之间没有其他人， 那么就可以传球， 问a队1号队员最少传多少次能传到a队n号队员， 输出次数， 传不到输出-1.&lt;/p&gt;
    
    </summary>
    
    
      <category term="最短路" scheme="https://solodance.top/categories/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>计蒜客 - 44345 I - Problem I. Journey(dp).md</title>
    <link href="https://solodance.top/2020/03/19/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044345%20I%20-%20Problem%20I.%20Journey(dp)/"/>
    <id>https://solodance.top/2020/03/19/%E8%AE%A1%E8%92%9C%E5%AE%A2%20-%2044345%20I%20-%20Problem%20I.%20Journey(dp)/</id>
    <published>2020-03-19T14:40:54.093Z</published>
    <updated>2020-03-19T14:40:37.752Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44345" target="_blank" rel="noopener">题目链接</a></p><p>一个无限大的二维图， 从(0, 0)出发，走n步，只能向右和向下走， 不能在同一方向连续走k步，问走n步，不同路径的方案数（对<code>1e9+7</code>取余）。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>dp[i] 表示第i步向下走的方案数。</p><p>sum = dp[1] + dp[2] + … + dp[n]</p><p>dp[i] 也可以表示第i步向右走的方案数。<br>所以最后答案就是 sum * 2</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line">ll sum, dp[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = read();</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n = read(), k = read();</span><br><span class="line">        dp[<span class="number">1</span>] = sum = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            dp[i] = sum;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; k)&#123;</span><br><span class="line">                sum += mod - dp[i - k];</span><br><span class="line">                sum %= mod;</span><br><span class="line">            &#125;</span><br><span class="line">            sum += dp[i];</span><br><span class="line">            sum %= mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n) <span class="built_in">cout</span> &lt;&lt; sum * <span class="number">2</span> % mod &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-44345&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个无限大的二维图， 从(0, 0)出发，走n步，只能向右和向下走， 不能在同一方向连续走k步，问走n步，不同路径的方案数（对&lt;code&gt;1e9+7&lt;/code&gt;取余）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="dp" scheme="https://solodance.top/categories/dp/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="dp" scheme="https://solodance.top/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>Preliminaries for Benelux Algorithm Programming Contest 2019E - Exits in Excess（思维题，有向图去环）</title>
    <link href="https://solodance.top/2020/03/18/Preliminaries%20for%20Benelux%20Algorithm%20Programming%20Contest%202019E%20-%20Exits%20in%20Excess%EF%BC%88%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%8C%E6%9C%89%E5%90%91%E5%9B%BE%E5%8E%BB%E7%8E%AF%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/18/Preliminaries%20for%20Benelux%20Algorithm%20Programming%20Contest%202019E%20-%20Exits%20in%20Excess%EF%BC%88%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%8C%E6%9C%89%E5%90%91%E5%9B%BE%E5%8E%BB%E7%8E%AF%EF%BC%89/</id>
    <published>2020-03-18T05:38:51.506Z</published>
    <updated>2020-03-18T05:38:35.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-43469" target="_blank" rel="noopener">题目链接</a></p><p>n个点（n &lt;= 1e5）, m条<strong>有向</strong>边（m &lt;= 2e5）, 最多之能删掉(m / 2)条边， 让其不成环，输出删除的边数和其索引号i（1 &lt;= i &lt;= m）</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>只保留一个方向的边就行了。</p><p>我们可以认为边有两个方向， 一个是小索引号到大索引号， 另一个是大索引号到小索引号。</p><p>我们删除这两个方向中边数较少的那个方向的边， 即可， 最多删除的边数是（m / 2）</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; l;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> u, v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        <span class="keyword">if</span> (u &lt; v)</span><br><span class="line">            s.push_back(i + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            l.push_back(i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> ans = s.size() &lt; l.size() ? s : l;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans.size() &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : ans)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/%E8%AE%A1%E8%92%9C%E5%AE%A2-43469&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;n个点（n &amp;lt;= 1e5）, m条&lt;strong&gt;有向&lt;/strong&gt;边（m &amp;lt;= 2e5）, 最多之能删掉(m / 2)条边， 让其不成环，输出删除的边数和其索引号i（1 &amp;lt;= i &amp;lt;= m）&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维题" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="有向图去环" scheme="https://solodance.top/tags/%E6%9C%89%E5%90%91%E5%9B%BE%E5%8E%BB%E7%8E%AF/"/>
    
  </entry>
  
  <entry>
    <title>POJ - 2502 L - Subway（最短路）</title>
    <link href="https://solodance.top/2020/03/15/POJ%20-%202502%20L%20-%20Subway%EF%BC%88%E6%9C%80%E7%9F%AD%E8%B7%AF%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/15/POJ%20-%202502%20L%20-%20Subway%EF%BC%88%E6%9C%80%E7%9F%AD%E8%B7%AF%EF%BC%89/</id>
    <published>2020-03-15T12:46:18.040Z</published>
    <updated>2020-03-15T12:46:07.385Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/POJ-2502" target="_blank" rel="noopener">题目链接</a></p><p>给你起始坐标s和终点坐标e， 然后给你地铁线（EOF结束）每条地铁线以EOF结束， 相邻的地铁线可以双向通， 问s到t的最短时间（min）。<br>其中地铁的速度是 40 km/h ， 步行的速度是10 km/h， 然后单位是m，要转化，两点的距离是欧几里得距离， 不是曼哈顿距离。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>最关键的是建图。<br>因为最多总共200个地铁站， 用邻接矩阵存就行， 因为求最短时间， 用邻接矩阵存时间就行。</p><p>起点是0号，终点是1号， 地铁站依次类推。<br>因为地铁快， 输入的过程中，把相邻两地铁站的时间存起来。</p><p>然后计算两两坐标步行的距离，取最小值就行， 最多202个点跑floyd完全没问题。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ma[<span class="number">1003</span>][<span class="number">1003</span>];</span><br><span class="line"><span class="keyword">double</span> dis[<span class="number">1003</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">d</span><span class="params">(P a, P b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.first - b.first) * (a.first - b.first) + (a.second - b.second) * (a.second - b.second));</span><br><span class="line">&#125;</span><br><span class="line">P a[<span class="number">1003</span>], s, e;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    s.first = read(), s.second = read(), e.first = read(), e.second = read();</span><br><span class="line">    P tmp;</span><br><span class="line">    a[cnt++] = s;</span><br><span class="line">    a[cnt++] = e;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1000</span>; ++j)</span><br><span class="line">            <span class="keyword">if</span> (i == j) ma[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> ma[i][j] = <span class="number">1e9</span>;</span><br><span class="line">    P lst = P(<span class="number">-1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;tmp.first, &amp;tmp.second))&#123;</span><br><span class="line">        <span class="keyword">if</span> (tmp.first != <span class="number">-1</span>) &#123;</span><br><span class="line">            a[cnt++] = tmp;</span><br><span class="line">            <span class="keyword">if</span> (lst.first != <span class="number">-1</span>)</span><br><span class="line">                ma[cnt - <span class="number">1</span>][cnt - <span class="number">2</span>] = ma[cnt - <span class="number">2</span>][cnt - <span class="number">1</span>] =</span><br><span class="line">                        min(ma[cnt - <span class="number">2</span>][cnt - <span class="number">1</span>], d(tmp, lst) * <span class="number">3</span> / <span class="number">2000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        lst = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; ++j)&#123;</span><br><span class="line">            ma[i][j] = min(ma[i][j], d(a[i], a[j]) * <span class="number">3</span> / <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; cnt; ++k)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; ++j)</span><br><span class="line">                ma[i][j] = min(ma[i][j], ma[i][k] + ma[k][j]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.0f\n"</span>, ma[<span class="number">0</span>][<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后继"><a href="#后继" class="headerlink" title="后继"></a>后继</h2><ol><li>让我知道了<code>不满足条件就continue</code> 和 <code>满足条件在执行</code> 的区别， 大多数是没区别的， 但是如果循环中， 有不论什么条件都要执行的语句时， 就不能用continue。</li></ol><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/POJ-2502&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你起始坐标s和终点坐标e， 然后给你地铁线（EOF结束）每条地铁线以EOF结束， 相邻的地铁线可以双向通， 问s到t的最短时间（min）。&lt;br&gt;其中地铁的速度是 40 km/h ， 步行的速度是10 km/h， 然后单位是m，要转化，两点的距离是欧几里得距离， 不是曼哈顿距离。&lt;/p&gt;
    
    </summary>
    
    
      <category term="最短路" scheme="https://solodance.top/categories/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>矩阵求A的1到n的幂次之和</title>
    <link href="https://solodance.top/2020/03/10/%E7%9F%A9%E9%98%B5%E6%B1%82A%E7%9A%841%E5%88%B0n%E7%9A%84%E5%B9%82%E6%AC%A1%E4%B9%8B%E5%92%8C%EF%BC%88%E7%9F%A9%E9%98%B5%E6%9E%84%E9%80%A0%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/10/%E7%9F%A9%E9%98%B5%E6%B1%82A%E7%9A%841%E5%88%B0n%E7%9A%84%E5%B9%82%E6%AC%A1%E4%B9%8B%E5%92%8C%EF%BC%88%E7%9F%A9%E9%98%B5%E6%9E%84%E9%80%A0%EF%BC%89/</id>
    <published>2020-03-10T05:40:48.782Z</published>
    <updated>2020-03-10T05:40:40.310Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>给你一个n*n(n &lt;= 30)的矩阵A， 每个元素x（0 &lt;=x&lt;= 1e6 ）， 给你一个m（m &lt;= 1e9）， 求S = A + A^2 + A ^3 + … + A^m,其中对每个元素对1e9+7取余。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这里有另一种做法， <a href="https://www.cnblogs.com/hua-dong/p/8479103.html" target="_blank" rel="noopener">点此</a></p><p>对于A矩阵， 我们可以构造一个这样的矩阵B</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string">A A</span>|</span><br><span class="line">|<span class="string">0 E</span>|</span><br></pre></td></tr></table></figure><p>B^2为</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string">A^2 A + A^2</span>|</span><br><span class="line">|<span class="string">0   E      </span>|</span><br></pre></td></tr></table></figure><p>B^3为</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">|A^<span class="number">3</span> A + A^<span class="number">2</span> + A^<span class="number">3</span>|</span><br><span class="line">|<span class="number">0</span>   E            |</span><br></pre></td></tr></table></figure><p>因此只要求B^m 即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> dimx, dimy; <span class="comment">// 矩阵维度</span></span><br><span class="line">    ll m[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line">    matrix(<span class="keyword">int</span> x = <span class="number">60</span>, <span class="keyword">int</span> y = <span class="number">60</span>) &#123; <span class="comment">// 构造函数</span></span><br><span class="line">        ms(m, <span class="number">0</span>);</span><br><span class="line">        dimx = x, dimy = y;</span><br><span class="line">    &#125;</span><br><span class="line">    matrix <span class="keyword">operator</span>*(<span class="keyword">const</span> matrix &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        matrix c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dimx; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; x.dimy; ++j)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; dimy; ++k)</span><br><span class="line">                    c.m[i][j] = (c.m[i][j] + m[i][k] * x.m[k][j]) % mod;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">qpow2</span><span class="params">(matrix a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    matrix ans = a;b--;</span><br><span class="line">    <span class="keyword">while</span> (b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = ans * a;</span><br><span class="line">        a = a * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read(), m = read();</span><br><span class="line">    <span class="function">matrix <span class="title">a</span><span class="params">(<span class="number">2</span> * n, <span class="number">2</span> * n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line">            a.m[i][j + n] = a.m[i][j] = read();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &lt; <span class="number">2</span> * n; ++i) a.m[i][i] = <span class="number">1</span>;</span><br><span class="line">    a = qpow2(a, m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &lt; <span class="number">2</span> * n; ++j)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>, a.m[i][j]);</span><br><span class="line">            <span class="keyword">if</span> (j != <span class="number">2</span> * n - <span class="number">1</span>) <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;给你一个n*n(n &amp;lt;= 30)的矩阵A， 每个元素x（0 &amp;lt;=x&amp;lt;= 1e6 ）， 给你一个m（m &amp;lt;= 1e9）， 求S = A + A^2 + A ^3 + … + A^m,其中对每个元素对1e9+7取余。&lt;/p&gt;
    
    </summary>
    
    
      <category term="矩阵" scheme="https://solodance.top/categories/%E7%9F%A9%E9%98%B5/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="矩阵构造" scheme="https://solodance.top/tags/%E7%9F%A9%E9%98%B5%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>POJ - 3660 Cow Contest(最短路).md</title>
    <link href="https://solodance.top/2020/03/10/POJ%20-%203660%20Cow%20Contest(%E6%9C%80%E7%9F%AD%E8%B7%AF)/"/>
    <id>https://solodance.top/2020/03/10/POJ%20-%203660%20Cow%20Contest(%E6%9C%80%E7%9F%AD%E8%B7%AF)/</id>
    <published>2020-03-10T03:19:48.182Z</published>
    <updated>2020-03-10T03:19:31.543Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/POJ-3660" target="_blank" rel="noopener">题目链接</a></p><p>n（&lt;= 100）头牛， m（m &lt;= 4500 ）种关系， 每种关系 u, v代表 u能赢v。问最终能确定多少头牛的排名。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>用最短路的松弛操作， 确定出每两头牛的关系， 对于第i个牛， 如果和其他i - 1个牛都能确定胜负， 就能确定这头牛的排名。</p><p>建图， 如果u能赢v， 那么<code>ma[u][v] = 1</code>, 否则就<code>ma[u][v] = -1</code>， 用floyd松弛的时候， 如果i能赢（输）k 并且k能赢（输）j, 那么i就能赢（输）j 。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> ma[<span class="number">102</span>][<span class="number">102</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">                <span class="keyword">if</span> ((ma[i][k] == <span class="number">1</span> || ma[i][k] == <span class="number">-1</span>) &amp;&amp; ma[i][k] == ma[k][j])</span><br><span class="line">                    ma[i][j] = ma[i][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">memset</span>(ma, INF, <span class="keyword">sizeof</span> ma);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) ma[i][i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> u, v;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        ma[u][v] = <span class="number">1</span>;</span><br><span class="line">        ma[v][u] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    floyd();</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ma[i][j] == INF)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/POJ-3660&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;n（&amp;lt;= 100）头牛， m（m &amp;lt;= 4500 ）种关系， 每种关系 u, v代表 u能赢v。问最终能确定多少头牛的排名。&lt;/p&gt;
    
    </summary>
    
    
      <category term="最短路" scheme="https://solodance.top/categories/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>POJ - 1511 Invitation Cards（最短路， 有向图的逆图）</title>
    <link href="https://solodance.top/2020/03/10/POJ%20-%201511%20Invitation%20Cards%EF%BC%88%E6%9C%80%E7%9F%AD%E8%B7%AF%EF%BC%8C%20%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E9%80%86%E5%9B%BE%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/10/POJ%20-%201511%20Invitation%20Cards%EF%BC%88%E6%9C%80%E7%9F%AD%E8%B7%AF%EF%BC%8C%20%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E9%80%86%E5%9B%BE%EF%BC%89/</id>
    <published>2020-03-10T01:48:17.950Z</published>
    <updated>2020-03-10T02:16:26.181Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/POJ-1511" target="_blank" rel="noopener">题目链接</a></p><p>有n个点（n &lt;= 1e6）， m条<strong>单向</strong>边（m &lt;= 1e6）, n - 1个人从 点1 出发，去剩余n-1个点并回到1点，  求来回的和的最小值。<br>其中注意权值和 小于 1e9 （这就是个坑， 一眼看去不用ll就能过， 其实不然。。。）</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>用正的有向图跑一边， 逆的有向图跑一边， 最后求和就行了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, w, ne;</span><br><span class="line">&#125; ed[<span class="number">2</span>][M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">2</span>][N], head[<span class="number">2</span>][N], dis[<span class="number">2</span>][N];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    ed[op][cnt[op]] = &#123;u, v, w, head[op][u]&#125;;</span><br><span class="line">    head[op][u] = cnt[op]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="built_in">memset</span>(dis, INF, <span class="keyword">sizeof</span> dis);</span><br><span class="line">    cnt[<span class="number">0</span>] = cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt; , greater&lt;P&gt; &gt; q;</span><br><span class="line">    dis[op][s] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, s));</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[op][u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[op][u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[op][u]; ~i; i = ed[op][i].ne) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[op][i].v, w = ed[op][i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[op][v] &gt; dis[op][u] + w)</span><br><span class="line">                dis[op][v] = dis[op][u] + w, q.push(P(dis[op][v], v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = read();</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        n = read(), m = read();</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> u = read(), v = read(), w = read();</span><br><span class="line">            add(<span class="number">0</span>, u, v, w), add(<span class="number">1</span>, v, u, w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 0 代表原图， 1代表逆图</span></span><br><span class="line">        dijk(<span class="number">0</span>, <span class="number">1</span>); dijk(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 要用long long</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) ans += <span class="number">0l</span>l + dis[<span class="number">0</span>][i] + dis[<span class="number">1</span>][i];</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/POJ-1511&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有n个点（n &amp;lt;= 1e6）， m条&lt;strong&gt;单向&lt;/strong&gt;边（m &amp;lt;= 1e6）, n - 1个人从 点1 出发，去剩余n-1个点并回到1点，  求来回的和的最小值。&lt;br&gt;其中注意权值和 小于 1e9 （这就是个坑， 一眼看去不用ll就能过， 其实不然。。。）&lt;/p&gt;
    
    </summary>
    
    
      <category term="最短路" scheme="https://solodance.top/categories/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="有向图的逆图" scheme="https://solodance.top/tags/%E6%9C%89%E5%90%91%E5%9B%BE%E7%9A%84%E9%80%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>c和cpp的文件读入输出.md</title>
    <link href="https://solodance.top/2020/03/10/c%E5%92%8Ccpp%E7%9A%84%E6%96%87%E4%BB%B6%E8%AF%BB%E5%85%A5%E8%BE%93%E5%87%BA/"/>
    <id>https://solodance.top/2020/03/10/c%E5%92%8Ccpp%E7%9A%84%E6%96%87%E4%BB%B6%E8%AF%BB%E5%85%A5%E8%BE%93%E5%87%BA/</id>
    <published>2020-03-10T01:41:52.808Z</published>
    <updated>2020-03-10T01:41:41.312Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    FILE *fp = fopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>); <span class="comment">// 根据题目中要求的写 有的是text.txt</span></span><br><span class="line">    FILE *fpw = fopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">-1</span>; <span class="comment">// 第一行特殊就专门输入</span></span><br><span class="line">    <span class="keyword">while</span>(!feof(fp))&#123;  <span class="comment">// 把整个文件一个个读进去</span></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">-1</span>)  <span class="comment">// 第一行特殊就专门输入</span></span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;K);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 正常主体代码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 最后输出</span></span><br><span class="line">    <span class="built_in">fprintf</span>(fpw, <span class="string">"%d %d\n"</span>, indx, indy);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    fclose(fpw);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h2><p>待补……</p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;


&lt;h2 id=&quot;C语言&quot;&gt;&lt;a href=&quot;#C语言&quot; class=&quot;headerlink&quot; title=&quot;C语言&quot;&gt;&lt;/a&gt;C语言&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
    
      <category term="ACM小知识" scheme="https://solodance.top/categories/ACM%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="文件操作" scheme="https://solodance.top/tags/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>POJ - 3268 Silver Cow Party(最短路).md</title>
    <link href="https://solodance.top/2020/03/07/POJ%20-%203268%20Silver%20Cow%20Party(%E6%9C%80%E7%9F%AD%E8%B7%AF)/"/>
    <id>https://solodance.top/2020/03/07/POJ%20-%203268%20Silver%20Cow%20Party(%E6%9C%80%E7%9F%AD%E8%B7%AF)/</id>
    <published>2020-03-07T13:22:10.906Z</published>
    <updated>2020-03-07T13:21:46.815Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/POJ-3268" target="_blank" rel="noopener">题目链接</a></p><p>n个点， 给你m条有向边， 问 各个点到x的最短距离 + x到各个点的最短距离 的最大值是多少</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>我跑了n次dijk（暴力过了滑稽）</p><p>正解， 求一次其他点到x的最短路， 再求一次逆图 的 其他点到x的最短路 （这里我用了两倍空间， 但是时间复杂度是O(n logn)）</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, w, ne;</span><br><span class="line">&#125; ed[<span class="number">2</span>][M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">2</span>][N], head[<span class="number">2</span>][N], dis[<span class="number">2</span>][N];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    ed[op][cnt[op]] = &#123;u, v, w, head[op][u]&#125;;</span><br><span class="line">    head[op][u] = cnt[op]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">    <span class="built_in">memset</span>(dis, INF, <span class="keyword">sizeof</span> dis);</span><br><span class="line">    cnt[<span class="number">0</span>] = cnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> s)</span> </span>&#123;</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt; , greater&lt;P&gt; &gt; q;</span><br><span class="line">    dis[op][s] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, s));</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second; q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[op][u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[op][u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[op][u]; ~i; i = ed[op][i].ne) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[op][i].v, w = ed[op][i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[op][v] &gt; dis[op][u] + w)</span><br><span class="line">                dis[op][v] = dis[op][u] + w, q.push(P(dis[op][v], v));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">int</span> x = read();</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> u = read(), v = read(), w = read();</span><br><span class="line">        add(<span class="number">0</span>, u, v, w);</span><br><span class="line">        add(<span class="number">1</span>, v, u, w);</span><br><span class="line">    &#125;</span><br><span class="line">    dijk(<span class="number">0</span>, x);</span><br><span class="line">    dijk(<span class="number">1</span>, x);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) ans = max(ans, dis[<span class="number">0</span>][i] + dis[<span class="number">1</span>][i]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/POJ-3268&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;n个点， 给你m条有向边， 问 各个点到x的最短距离 + x到各个点的最短距离 的最大值是多少&lt;/p&gt;
    
    </summary>
    
    
      <category term="模板题" scheme="https://solodance.top/categories/%E6%A8%A1%E6%9D%BF%E9%A2%98/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1316B String Modification（思维）.md</title>
    <link href="https://solodance.top/2020/03/07/CodeForces%20-%201316B%20String%20Modification%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/07/CodeForces%20-%201316B%20String%20Modification%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%89/</id>
    <published>2020-03-07T12:07:35.528Z</published>
    <updated>2020-03-07T12:07:17.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1316B" target="_blank" rel="noopener">题目链接</a></p><p>给你一个长为n的字符串， 问k为多少时， 字符串的字典序最小</p><p>k的定义， 翻转 <code>s[i : i + k − 1] | 1 &lt;= i &lt;= n - k + 1</code> 。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>写几个找规律。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">k</span> = <span class="string">2时</span></span><br><span class="line"><span class="attr">abcd</span> <span class="string">结果是 bcd|a</span></span><br><span class="line"><span class="attr">abcde</span> <span class="string">结果是 bcde|a</span></span><br><span class="line"><span class="attr">k</span> = <span class="string">3是</span></span><br><span class="line"><span class="attr">abcd</span> <span class="string">结果是 cd|ab</span></span><br><span class="line"><span class="attr">abcde</span> <span class="string">结果是 cde|ba</span></span><br></pre></td></tr></table></figure><p>可以看得出来， 结果是又两部分构成， 前一部分是 s[k : len], 后一部分 如果 <code>n - k</code> 是奇数， 那么 为s[1 :k], 如果 <code>n - k</code> 是偶数， 为 s[1 : k] 的翻转。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> s, s1, s2, ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = read();</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="keyword">int</span> n = read();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">        ans = s;</span><br><span class="line">        <span class="keyword">int</span> pos = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            s1 = s.substr(<span class="number">0</span>, i);</span><br><span class="line">            s2 = s.substr(i);</span><br><span class="line">            <span class="built_in">string</span> tmp = s2;</span><br><span class="line">            <span class="keyword">if</span> ((n - i) &amp; <span class="number">1</span>) reverse(s1.begin(), s1.end());</span><br><span class="line">            tmp += s1;</span><br><span class="line">            <span class="keyword">if</span> (tmp &lt; ans)&#123;</span><br><span class="line">                ans = tmp;</span><br><span class="line">                pos = i + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span> &lt;&lt; pos &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1316B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一个长为n的字符串， 问k为多少时， 字符串的字典序最小&lt;/p&gt;
&lt;p&gt;k的定义， 翻转 &lt;code&gt;s[i : i + k − 1] | 1 &amp;lt;= i &amp;lt;= n - k + 1&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1305E Kuroni and the Score Distribution（思维， 构造）.md</title>
    <link href="https://solodance.top/2020/03/05/CodeForces%20-%201305E%20Kuroni%20and%20the%20Score%20Distribution%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%8C%20%E6%9E%84%E9%80%A0%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/05/CodeForces%20-%201305E%20Kuroni%20and%20the%20Score%20Distribution%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%8C%20%E6%9E%84%E9%80%A0%EF%BC%89/</id>
    <published>2020-03-05T13:58:13.355Z</published>
    <updated>2020-03-05T13:57:54.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1305E" target="_blank" rel="noopener">题目链接</a></p><p>给你两个数n(&lt;= 5000)， m(&lt;= 1e9)， n为你要构造的序列长度， m下面会用到。该序列满足</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 序列递增</span><br><span class="line"><span class="number">2.</span> <span class="number">1</span> &lt;= ai &lt;= <span class="number">1e9</span></span><br><span class="line"><span class="number">3.</span> 有恰好m组 i, j, k (<span class="number">1</span> &lt;= i &lt; j &lt; k &lt;= n) 满足 ai + aj = ak</span><br></pre></td></tr></table></figure><p>如果存在这样的序列， 输出这个序列， 不存在输出-1、</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><a href="https://www.cnblogs.com/BakaCirno/p/12409554.html" target="_blank" rel="noopener">转自此</a></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNjTlE5aGkyLzd2TEdSRkVuU2N5WURtcjR0WVlCZzkxQjd3QUphT1dEbTFBPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read(), m = read();</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k &lt; n &amp;&amp; sum + k / <span class="number">2</span> &lt;= m) sum += k / <span class="number">2</span>, k++;</span><br><span class="line">    <span class="keyword">if</span> (k == n &amp;&amp; sum &lt; m) <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>), <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; ++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>, i);</span><br><span class="line">    <span class="keyword">if</span> (k == n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, k - <span class="number">2</span> * (m - sum) + <span class="number">1</span> + k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k + <span class="number">2</span>; i &lt;= n; ++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>, <span class="keyword">int</span>(<span class="number">1e8</span> + (i - k - <span class="number">2</span>) * <span class="number">1e4</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1305E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你两个数n(&amp;lt;= 5000)， m(&amp;lt;= 1e9)， n为你要构造的序列长度， m下面会用到。该序列满足&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt; 序列递增&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;= ai &amp;lt;= &lt;span class=&quot;number&quot;&gt;1e9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt; 有恰好m组 i, j, k (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;= i &amp;lt; j &amp;lt; k &amp;lt;= n) 满足 ai + aj = ak&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果存在这样的序列， 输出这个序列， 不存在输出-1、&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="构造" scheme="https://solodance.top/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1305D Kuroni and the Celebration（交互题， 思维题）.md</title>
    <link href="https://solodance.top/2020/03/04/CodeForces%20-%201305D%20Kuroni%20and%20the%20Celebration%EF%BC%88%E4%BA%A4%E4%BA%92%E9%A2%98%EF%BC%8C%20%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/04/CodeForces%20-%201305D%20Kuroni%20and%20the%20Celebration%EF%BC%88%E4%BA%A4%E4%BA%92%E9%A2%98%EF%BC%8C%20%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/</id>
    <published>2020-03-04T06:57:05.339Z</published>
    <updated>2020-03-04T06:55:54.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1305D" target="_blank" rel="noopener">题目链接</a></p><p>给你一棵n个节点的树， 找出他的根结点。</p><p>交互(不懂交互题的百度搜例题就明白了)</p><p>最多可以交互 n / 2次<br>输出 <code>? u v</code> 返回 <code>lca(u, v)</code> .<br>输出答案 <code>! root</code></p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>最多询问n / 2 次， 如果保证每次都能淘汰两个点的话， 肯定能找到根结点，如果n为奇数并且 在n / 2次内没找到根结点， 那么剩下的那个节点就是根结点。<br>就是自己搞一搞。<br>我选择的是每次选择叶子节点， 如果 <code>lca(u, v) == u || lca(u, c) == v</code> 那么 <code>lca(u, v)</code> 就是根结点。如果不是， 那么就把这两个叶子节点删除， 这样有可能会有新的叶子节点， 再把它放到队列中。</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> du[<span class="number">1003</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ma[<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        ma[a].push_back(b);</span><br><span class="line">        ma[b].push_back(a);</span><br><span class="line">        du[a]++, du[b]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    <span class="keyword">int</span> sum = n / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">if</span> (du[i] == <span class="number">1</span>) q.push(i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty() &amp;&amp; sum--)&#123;</span><br><span class="line">        <span class="keyword">int</span> c1 = q.front();q.pop();</span><br><span class="line">        <span class="keyword">if</span> (q.empty()) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> c2 = q.front();q.pop();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"? "</span> &lt;&lt; c1 &lt;&lt; <span class="string">" "</span> &lt;&lt; c2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> lca;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; lca;</span><br><span class="line">        <span class="keyword">if</span> (lca == c1 || lca == c2)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"! "</span> &lt;&lt; lca &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        du[c1] = du[c2] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : ma[c1]) &#123;</span><br><span class="line">            du[c]--;</span><br><span class="line">            <span class="keyword">if</span> (du[c] == <span class="number">1</span>) q.push(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : ma[c2]) &#123;</span><br><span class="line">            du[c]--;</span><br><span class="line">            <span class="keyword">if</span> (du[c] == <span class="number">1</span>) q.push(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (du[i] &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"! "</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1305D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一棵n个节点的树， 找出他的根结点。&lt;/p&gt;
&lt;p&gt;交互(不懂交互题的百度搜例题就明白了)&lt;/p&gt;
&lt;p&gt;最多可以交互 n / 2次&lt;br&gt;输出 &lt;code&gt;? u v&lt;/code&gt; 返回 &lt;code&gt;lca(u, v)&lt;/code&gt; .&lt;br&gt;输出答案 &lt;code&gt;! root&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维题" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
    
      <category term="思维题" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="交互题" scheme="https://solodance.top/tags/%E4%BA%A4%E4%BA%92%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1305C Kuroni and Impossible Calculation（数学）.md</title>
    <link href="https://solodance.top/2020/03/04/CodeForces%20-%201305C%20Kuroni%20and%20Impossible%20Calculation%EF%BC%88%E6%95%B0%E5%AD%A6%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/04/CodeForces%20-%201305C%20Kuroni%20and%20Impossible%20Calculation%EF%BC%88%E6%95%B0%E5%AD%A6%EF%BC%89/</id>
    <published>2020-03-04T05:07:42.139Z</published>
    <updated>2020-03-04T05:07:31.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1305C" target="_blank" rel="noopener">题目链接</a></p><p>calculate (∏1≤i&lt;j≤n|ai−aj|) % m.<br>其中 <code>2 &lt;= n &lt;= 2e5 | 1 &lt;= m &lt;= 1000 | 0 &lt;= ai &lt;= 1e9</code></p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>由<a href="https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776?fr=aladdin" target="_blank" rel="noopener">抽屉原理</a>可知， 当n &gt; m 时， 肯定会有 两个数和m同余。</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m, a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[i] = read();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n &gt; m)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ll ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; ++j)&#123;</span><br><span class="line">                ans = ans * <span class="built_in">abs</span>(a[i] - a[j]) % m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1305C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;calculate (∏1≤i&amp;lt;j≤n|ai−aj|) % m.&lt;br&gt;其中 &lt;code&gt;2 &amp;lt;= n &amp;lt;= 2e5 | 1 &amp;lt;= m &amp;lt;= 1000 | 0 &amp;lt;= ai &amp;lt;= 1e9&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="https://solodance.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="抽屉原理" scheme="https://solodance.top/tags/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
