<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Solo_Danceの博客</title>
  
  <subtitle>欢迎访问 Solo_Danceの博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mingfuyan.github.io/"/>
  <updated>2019-10-06T06:02:07.175Z</updated>
  <id>https://mingfuyan.github.io/</id>
  
  <author>
    <name>Mingfu Yan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019牛客国庆集训派对 H-Highway (dijk求树的直径（当然还有更优的）)</title>
    <link href="https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20H-Highway%20(dijk%E6%B1%82%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%EF%BC%88%E5%BD%93%E7%84%B6%E8%BF%98%E6%9C%89%E6%9B%B4%E4%BC%98%E7%9A%84%EF%BC%89)/"/>
    <id>https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20H-Highway%20(dijk%E6%B1%82%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%EF%BC%88%E5%BD%93%E7%84%B6%E8%BF%98%E6%9C%89%E6%9B%B4%E4%BC%98%E7%9A%84%EF%BC%89)/</id>
    <published>2020-01-23T13:42:35.154Z</published>
    <updated>2019-10-06T06:02:07.175Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="https://ac.nowcoder.com/acm/contest/1109/H" target="_blank" rel="noopener">题目链接</a><br>n个点从1-n, 有(n - 1)条边连接。<br>现在要重新修（n - 1）条路， 修i 到 j 所用的代价为i到j的最短路，<br>问最多的代价是多少</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>就是求树的直径， 然后跑两边最短路求其他点到直径两端点的最短路， 最后把最大值加起来就可。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="keyword">int</span>(<span class="number">1e9</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="keyword">int</span>(<span class="number">1e5</span>) + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, ne;</span><br><span class="line">    ll w;</span><br><span class="line">&#125;ed[<span class="number">2</span> * N];</span><br><span class="line"><span class="keyword">int</span> n, cnt, head[N];</span><br><span class="line">ll dis1[N], dis2[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, ll w)</span></span>&#123;</span><br><span class="line">    ed[cnt].u = u, ed[cnt].v = v, ed[cnt].w = w, ed[cnt].ne = head[u];</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dijk</span><span class="params">(ll dis[], <span class="keyword">int</span> st)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dis[i] = ll(<span class="number">1e15</span>);</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt;q;</span><br><span class="line">    dis[st] = <span class="number">0</span>;</span><br><span class="line">    q.emplace(<span class="number">0</span>, st);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + ed[i].w)&#123;</span><br><span class="line">                dis[v] = dis[u] + ed[i].w;</span><br><span class="line">                q.emplace(dis[v], v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>, ansj;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (dis[i] != ll(<span class="number">1e15</span>) &amp;&amp; dis[i] &gt; ans)&#123;</span><br><span class="line">            ans = dis[i], ansj = i;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ansj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    ll c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">            add(a, b, c);</span><br><span class="line">            add(b, a, c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> s1 = dijk(dis1, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> s2 = dijk(dis1, s1);</span><br><span class="line">        dijk(dis1, s1);</span><br><span class="line">        dijk(dis2, s2);</span><br><span class="line">        ll ans = dis1[s2];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == s1 || i == s2)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            ans += max(dis1[i], dis2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">、</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/1109/H&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="2019牛客国庆集训派对" scheme="https://mingfuyan.github.io/categories/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="树的直径" scheme="https://mingfuyan.github.io/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客国庆集训派对 E-Partial Sum （绝对值的特殊性）</title>
    <link href="https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20E-Partial%20Sum%20%EF%BC%88%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7%EF%BC%89/"/>
    <id>https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20E-Partial%20Sum%20%EF%BC%88%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.139Z</published>
    <updated>2019-10-06T06:03:13.829Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="https://ac.nowcoder.com/acm/contest/1109/E" target="_blank" rel="noopener">题目链接</a><br>给定长为n的数组， 找到m组(L, R)， 使得<code>|sum（L,R）| - C</code>的和最大， 其中C为常数（输入中给出）， 每个(L, R)只出现一次。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>求区间前缀和， 因为绝对值的特性， <code>|sumi - sumj = sumj - sumi|</code> 所以前后减的顺序没关系， 他也没<br>要求具体是那m组， 所以sort后 最大减最小就可。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="keyword">int</span>(<span class="number">1e9</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="keyword">int</span>(<span class="number">1e5</span>) + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m, c, x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c)&#123;</span><br><span class="line">        sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">            sum[i] = sum[i - <span class="number">1</span>] + x;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(sum, sum + n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = n;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = sum[r] - sum[l] - c;</span><br><span class="line">            <span class="keyword">if</span> (temp &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            l++, r--;</span><br><span class="line">            ans += ll(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/1109/E&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="2019牛客国庆集训派对" scheme="https://mingfuyan.github.io/categories/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="绝对值的特殊性" scheme="https://mingfuyan.github.io/tags/%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7/"/>
    
      <category term="思维" scheme="https://mingfuyan.github.io/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第五场A题 （思维题）</title>
    <link href="https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAA%E9%A2%98%20%EF%BC%88%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/"/>
    <id>https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAA%E9%A2%98%20%EF%BC%88%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.123Z</published>
    <updated>2019-08-02T06:02:36.904Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>（看不清图片可以右击图片-&gt; 复制图片地址 -&gt;浏览器新开一个标签页，粘贴此地址就可看大图<br>（也可以右击图片-&gt; 在新标签页打开图片</p><p><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFRMNGtzcmtHbjZtMmtJT29KTHRUYjBjMWhoaUJ3a3AvSVpDNkh0Ri9oR3V3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="题干"></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p><strong>题意</strong>：给你一个整型x（x &lt;= 100）， 让你输出一个整型y， y要满足3个条件:</p><ol><li>y 能被 x 整除</li><li>y和各个数位的数字之和能被 x 整除(就是个位， 十位， 百位，… 之和)</li><li>y的位数不超过 10^4</li></ol><p>思维题， 真是太妙了。<br>最简单的构造方法就是， 把n看做字符串， 输出n个头尾相连的字符串n即可。</p><ul><li>第一个条件： 这肯定是满足的呀。</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举个例子</span><br><span class="line">x = <span class="number">99</span></span><br><span class="line">y = <span class="number">99</span>个<span class="number">99</span></span><br><span class="line">用竖式除一下， 就是（<span class="number">1010101.</span>..)</span><br></pre></td></tr></table></figure><ul><li>第二个条件：这也肯定了呀。  </li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举个例子</span><br><span class="line">x = <span class="number">99</span></span><br><span class="line">y = <span class="number">99</span>个<span class="number">99</span></span><br><span class="line">求和就是<span class="number">99</span>个(<span class="number">18</span>)</span><br></pre></td></tr></table></figure><ul><li>第三个条件， x最大是100， 100个100正好10 ^ 4</li></ul><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> t, n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;（看不清图片可以右击图片-&amp;gt; 复制图片地址 -&amp;gt;浏览器新开一个标签页，粘贴此地址就可看大图&lt;br&gt;（也可以右击图
      
    
    </summary>
    
    
      <category term="思维题" scheme="https://mingfuyan.github.io/categories/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://mingfuyan.github.io/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第五场B题generator 1（十进制矩阵快速幂）</title>
    <link href="https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAB%E9%A2%98generator%201%EF%BC%88%E5%8D%81%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/"/>
    <id>https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%94%E5%9C%BAB%E9%A2%98generator%201%EF%BC%88%E5%8D%81%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.123Z</published>
    <updated>2019-10-06T05:49:56.558Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h3><p><a href="https://ac.nowcoder.com/acm/contest/885/B" target="_blank" rel="noopener">题干</a></p><h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><ol><li>给你四个数： x0, x1, a, b   都&gt;=1 &lt;=1e9</li><li>x(i) = a * x (i - 1) + b * x(i - 2)  i &gt;= 2</li><li>给你两个数： n, mod.    1&lt;=n&lt;=10 ^ (10 ^ 6)  (超大)  1e9 &lt;= mod &lt;= 2e9</li><li>输出x(n)</li></ol><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>用十进制快速幂， tql<br>时间复杂度是 10 ^ 6 * log 10<br>变换矩阵也很好推</p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFRraWFHQ2ZIemtaUFRwS0NGYk80Y3VXOGpRdEVCQzhWY1hCenNYazJ0RVFRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="变换矩阵"><br>具体看代码</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> esp 1e-6</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e2</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e9</span> + <span class="number">5</span>;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mod;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Matrix</span>&#123;</span></span><br><span class="line">    ll m[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">&#125;unit;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">mul</span><span class="params">(Matrix a, Matrix b, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="comment">// a * b  n为a的行数， m为b的列数</span></span><br><span class="line">    Matrix c;</span><br><span class="line">    <span class="built_in">memset</span>(c.m, <span class="number">0</span>, <span class="keyword">sizeof</span> c.m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">                c.m[i][j] = (c.m[i][j] + a.m[i][k] * b.m[k][j]) % mod ; <span class="comment">// 取模在这里取</span></span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">q_pow2</span><span class="params">(Matrix a, ll b, <span class="keyword">int</span> n)</span> </span>&#123; <span class="comment">// a^b  n为矩阵大小</span></span><br><span class="line">    Matrix ans = unit;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>)</span><br><span class="line">            ans = mul(ans, a, n, n);</span><br><span class="line">        a = mul(a, a, n, n);</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Matrix <span class="title">q_pow_10</span><span class="params">(Matrix a, <span class="built_in">string</span> b, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    Matrix ans = unit;</span><br><span class="line">    <span class="keyword">int</span> len = b.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="keyword">int</span> num = b[i] - <span class="string">'0'</span>;</span><br><span class="line">        ans = mul(ans, q_pow2(a, num, n), n, n);</span><br><span class="line">        a = q_pow2(a, <span class="number">10</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    unit.m[<span class="number">1</span>][<span class="number">1</span>] = unit.m[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    Matrix A, B, C;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> x0, x1, a, b;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; x0 &gt;&gt; x1 &gt;&gt; a &gt;&gt; b &gt;&gt; s &gt;&gt; mod;</span><br><span class="line">    A.m[<span class="number">1</span>][<span class="number">1</span>] = a;</span><br><span class="line">    A.m[<span class="number">1</span>][<span class="number">2</span>] = b;</span><br><span class="line">    A.m[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    A.m[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    B.m[<span class="number">1</span>][<span class="number">1</span>] = x1;</span><br><span class="line">    B.m[<span class="number">2</span>][<span class="number">1</span>] = x0;</span><br><span class="line">    <span class="keyword">int</span> len = s.length();</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">1</span> &amp;&amp; s[<span class="number">0</span>] == <span class="string">'1'</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; x1 &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将s减1</span></span><br><span class="line">    <span class="keyword">while</span>(len--)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[len] != <span class="string">'0'</span>)&#123;</span><br><span class="line">            s[len] --;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            s[len] = <span class="string">'9'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s[<span class="number">0</span>] == <span class="string">'0'</span>)</span><br><span class="line">        s.erase(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    A = q_pow_10(A, s, <span class="number">2</span>);</span><br><span class="line">    A = mul(A, B, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; A.m[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目链接&quot;&gt;&lt;a href=&quot;#题目链接&quot; class=&quot;headerlink&quot; title=&quot;题目链接&quot;&gt;&lt;/a&gt;题目链接&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/885/B&quot; target=&quot;_b
      
    
    </summary>
    
    
      <category term="2019牛客多校训练赛" scheme="https://mingfuyan.github.io/categories/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://mingfuyan.github.io/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
      <category term="矩阵快速幂" scheme="https://mingfuyan.github.io/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第二场H题（单调栈＋思维）Second Large Rectangle</title>
    <link href="https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAH%E9%A2%98%EF%BC%88%E5%8D%95%E8%B0%83%E6%A0%88%EF%BC%8B%E6%80%9D%E7%BB%B4%EF%BC%89Second%20Large%20Rectangle/"/>
    <id>https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAH%E9%A2%98%EF%BC%88%E5%8D%95%E8%B0%83%E6%A0%88%EF%BC%8B%E6%80%9D%E7%BB%B4%EF%BC%89Second%20Large%20Rectangle/</id>
    <published>2020-01-23T13:42:35.108Z</published>
    <updated>2019-07-22T13:42:43.694Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>（看不清图片可以右击图片-&gt; 复制图片地址 -&gt;浏览器新开一个标签页，粘贴此地址就可看大图<br>（也可以右击图片-&gt; 在新标签页打开图片</p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFM3WHhsb0oxdWFUekJ2ZS9vVzd6ODJNWXlTQ1IyOTV6bkJJaXFoWXhpWmh3PT0.png?imageView&thumbnail=1903y1266&type=png&quality=96&stripmeta=0" alt="题干"></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>听师哥讲得才明白怎么做， 我好菜啊~！<br>单调栈的应用<br>把题目中矩阵拆开看， 看成以第i行为底的直方图， 然后暴力这i行， 根据单调栈求即可。<br>可以转化成这题来做： <a href="https://solodance.top/2019/07/22/POJ%20-%202559%EF%BC%88%E5%8D%95%E8%B0%83%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%89/" target="_blank" rel="noopener">点此</a>   </p><p>有几个小问题需要注意：</p><ol><li>以第i行的矩阵可以由第i-1行求出</li><li>添加的时候需要注意， 不仅仅要把所求的添加上， 还要加上原矩阵 宽减一 乘以 高 和 宽 乘以 高减一。</li></ol><p>ac代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstdio"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"queue"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"set"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstring"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"map"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"vector"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"utility"</span>   <span class="comment">// pair头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> esp 1e-6</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> height;</span><br><span class="line">    <span class="keyword">int</span> width;</span><br><span class="line">    node()&#123;</span><br><span class="line">        height = <span class="number">0</span>;</span><br><span class="line">        width = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> ans1, ans2;</span><br><span class="line"><span class="built_in">stack</span> &lt;node&gt; st;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1003</span>][<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">max2</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ans1 &lt; a)&#123;</span><br><span class="line">        ans2 = ans1;</span><br><span class="line">        ans1 = a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ans2 &lt; a)</span><br><span class="line">        ans2 = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solotion</span><span class="params">(<span class="keyword">int</span> x[])</span></span>&#123;</span><br><span class="line">   node a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m + <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= m)</span><br><span class="line">            a.height = x[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a.height = <span class="number">-1</span>;  <span class="comment">// 最后加入一个0元素， 使栈全部元素弹出, 巧妙啊</span></span><br><span class="line">        a.width = i;</span><br><span class="line">        <span class="keyword">while</span>(!st.empty() &amp;&amp; st.top().height &gt;= a.height) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = st.top().height, x2 = i - st.top().width;</span><br><span class="line">            max2(x1 * x2);</span><br><span class="line">            max2(x1 * (x2 - <span class="number">1</span>));</span><br><span class="line">            max2((x1 - <span class="number">1</span>) * x2);</span><br><span class="line">            a.width = st.top().width;</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        st.push(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">                a[i][j] = s[j - <span class="number">1</span>] - <span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (s[j - <span class="number">1</span>] == <span class="string">'1'</span>)</span><br><span class="line">                    a[i][j] = a[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    a[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*for (int i = 1; i &lt;= n; i++)&#123;</span></span><br><span class="line"><span class="comment">        for (int j = 1; j &lt;= m; j++)&#123;</span></span><br><span class="line"><span class="comment">            cout &lt;&lt; a[i][j] &lt;&lt; " ";</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        cout &lt;&lt; "\n";</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        solotion(a[i]);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans2 &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5 7</span></span><br><span class="line"><span class="comment">0001000</span></span><br><span class="line"><span class="comment">0011000</span></span><br><span class="line"><span class="comment">1011011</span></span><br><span class="line"><span class="comment">1011011</span></span><br><span class="line"><span class="comment">1111111</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">7</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;（看不清图片可以右击图片-&amp;gt; 复制图片地址 -&amp;gt;浏览器新开一个标签页，粘贴此地址就可看大图&lt;br&gt;（也可以右击图
      
    
    </summary>
    
    
      <category term="单调栈" scheme="https://mingfuyan.github.io/categories/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://mingfuyan.github.io/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
      <category term="单调栈" scheme="https://mingfuyan.github.io/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客多校训练赛第二场F题Partition problem（dfs + 暴力枚举）</title>
    <link href="https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAF%E9%A2%98Partition%20problem%EF%BC%88dfs%20+%20%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE%EF%BC%89/"/>
    <id>https://mingfuyan.github.io/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B%E7%AC%AC%E4%BA%8C%E5%9C%BAF%E9%A2%98Partition%20problem%EF%BC%88dfs%20+%20%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-07-23T02:08:20.970Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>（看不清图片可以右击图片-&gt; 复制图片地址 -&gt;浏览器新开一个标签页，粘贴此地址就可看大图<br>（也可以右击图片-&gt; 在新标签页打开图片</p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFRxNWZ4RmlrSU9neDhORjU5cDRCY2xXK0sxSzEwVG53MHc3VEdXREpESEt3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="F"></p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>题意： 给你2 * n个人， 以及他们之间的竞争值（用矩阵表示），让你分成两组， 每组n个人， 问你如何分才能让竞争值最大（同队之间不存在竞争）， 输出最大竞争值 。</p><p>分析： 用dfs爆搜， 从1开始， 当groupA 组员数小于n时， 就可以放进A， 同理groupB也是。最后当搜索到第 <code>2 * n + 1</code>时return。</p><p>ac代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstdio"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"queue"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"set"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cstring"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"map"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"vector"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"math.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"utility"</span>   <span class="comment">// pair头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> esp 1e-6</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line">ll val[<span class="number">102</span>][<span class="number">102</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="keyword">int</span> group1[<span class="number">102</span>], group2[<span class="number">102</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> cnt1, <span class="keyword">int</span> cnt2, ll sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cur &gt;= <span class="number">2</span> * n + <span class="number">1</span>)&#123;</span><br><span class="line">        ans = max(ans, sum);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cnt1 &lt; n)&#123;</span><br><span class="line">        ll tem = sum;</span><br><span class="line">        group1[cnt1 + <span class="number">1</span>] = cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt2; i++)</span><br><span class="line">            tem += val[group2[i]][cur];</span><br><span class="line">        dfs(cur + <span class="number">1</span>, cnt1 + <span class="number">1</span>, cnt2, tem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cnt2 &lt; n)&#123;</span><br><span class="line">        ll tem = sum;</span><br><span class="line">        group2[cnt2 + <span class="number">1</span>] = cur;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt1; i++)&#123;</span><br><span class="line">            tem += val[group1[i]][cur];</span><br><span class="line">        &#125;</span><br><span class="line">        dfs(cur + <span class="number">1</span>, cnt1, cnt2 + <span class="number">1</span>, tem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span> * n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span> * n; j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; val[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h3&gt;&lt;p&gt;（看不清图片可以右击图片-&amp;gt; 复制图片地址 -&amp;gt;浏览器新开一个标签页，粘贴此地址就可看大图&lt;br&gt;（也可以右击图
      
    
    </summary>
    
    
      <category term="dfs" scheme="https://mingfuyan.github.io/categories/dfs/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="dfs" scheme="https://mingfuyan.github.io/tags/dfs/"/>
    
      <category term="暴力枚举" scheme="https://mingfuyan.github.io/tags/%E6%9A%B4%E5%8A%9B%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="2019牛客多校训练赛" scheme="https://mingfuyan.github.io/tags/2019%E7%89%9B%E5%AE%A2%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>做题时文件的读入（c++）</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E5%81%9A%E9%A2%98%E6%97%B6%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%85%A5%EF%BC%88c++%EF%BC%89/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E5%81%9A%E9%A2%98%E6%97%B6%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%85%A5%EF%BC%88c++%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-06-16T09:37:12.867Z</updated>
    
    <content type="html"><![CDATA[<p>直接看代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    FILE *fp = fopen(<span class="string">"input.txt"</span>, <span class="string">"r"</span>); <span class="comment">// 根据题目中要求的写 有的是text.txt</span></span><br><span class="line">    FILE *fpw = fopen(<span class="string">"output.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">-1</span>; <span class="comment">// 第一行特殊就专门输入</span></span><br><span class="line">    <span class="keyword">while</span>(!feof(fp))&#123;  <span class="comment">// 把整个文件一个个读进去</span></span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">-1</span>)  <span class="comment">// 第一行特殊就专门输入</span></span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%d %d %d"</span>, &amp;n, &amp;m, &amp;K);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%d%d"</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 正常主体代码</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 最后输出</span></span><br><span class="line">    <span class="built_in">fprintf</span>(fpw, <span class="string">"%d %d\n"</span>, indx, indy);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;直接看代码：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://mingfuyan.github.io/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="小知识" scheme="https://mingfuyan.github.io/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>为萌新准备的如何用codeblocks新建c or c++代码并编译运行</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E4%B8%BA%E8%90%8C%E6%96%B0%E5%87%86%E5%A4%87%E7%9A%84%E5%A6%82%E4%BD%95%E7%94%A8codeblocks%E6%96%B0%E5%BB%BAc%20or%20c++%E4%BB%A3%E7%A0%81%E5%B9%B6%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E4%B8%BA%E8%90%8C%E6%96%B0%E5%87%86%E5%A4%87%E7%9A%84%E5%A6%82%E4%BD%95%E7%94%A8codeblocks%E6%96%B0%E5%BB%BAc%20or%20c++%E4%BB%A3%E7%A0%81%E5%B9%B6%E7%BC%96%E8%AF%91%E8%BF%90%E8%A1%8C/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-08-14T07:28:38.425Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>直接默认走起， 需要勾选的就都勾选上， 一直next就好， 注意一点，安装位置建议安装在固态里， 或者c盘就行。<br>ps： 安装包在群里</p><h3 id="2-如何新建c-c-文件，-编译并运行"><a href="#2-如何新建c-c-文件，-编译并运行" class="headerlink" title="2. 如何新建c / c++文件， 编译并运行"></a>2. 如何新建c / c++文件， 编译并运行</h3><p>首先注明一点， 不建议汉化， 汉化很容易出bug， 你所需要的那一点东西， 完全看到懂。</p><p>安装完成打开后界面如下， 点击 <code>Create a new project</code><br><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dGw1bTJGbzZ2aFJUR2poVlJPanVHcUlHenEvWXFYMVlnPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>按照下图一直操作<br><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0cHRHemhFNzVWNDFUbTVwdHBoTU04bFpnKzdJOTFpSmR3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dlQxZG80Q0FCNXVUekRKd3hpL2JRTHJ6dUxXcFdzckR3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0a3FscE5QYzZTYkRKOVV5OUFkbFliTm9hcXVCQ2hLV0N3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0bVk1SEl1ZTV1RzdNT1Z3KzE3eTFNWmZwUUhUc3lqcWJ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>新建完成后出现以下界面， 双击 <code>Sources</code>文件夹<br><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dlc5RHVwU0ViNFppOGkzYXVsSTJJN25ZUlRsTjk3Yk5RPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>双击 <code>main.cpp or main.c</code></p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0a1h3czc2elFJMFVXZldSa1hmZGcyVlZmUUsyVm5mMHJRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0a21ldTd6Snl0bHpzUkhCVTVEYjBoeHNNM21VRVA3MHJ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>编译运行可能会等一下， 然后就会弹出命令窗了</p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0b1k5dU9haXI4VjRzckJvV2htVzNtMG5lM1NpK2RHemNRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-经常遇到的问题"><a href="#3-经常遇到的问题" class="headerlink" title="3. 经常遇到的问题"></a>3. 经常遇到的问题</h3><ol><li>若遇到无法编译， 就是点编译并运行按钮时， 右下角会弹出黄色警告， 并且命令窗也没弹出来， 一般解决方案：<br>点击<code>Setting(最上面哪一行倒数第二个) -&gt; Compiler...</code><br>然后点击， 出现什么都点yes, 最后完成后重启就好了<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNBZW9KR3NFUVM0dVJUTlpLcTQrbWFpYlF0dG95VllKdkE5ZHF6cnBCd05nPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></li></ol><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h3&gt;&lt;p&gt;直接默认走起， 需要勾选的就都勾选上， 一直next就好， 注意一点，安装位置建议安装在固态里， 或者c盘就行。&lt;br&gt;
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/tags/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
      <category term="codeblocks" scheme="https://mingfuyan.github.io/tags/codeblocks/"/>
    
  </entry>
  
  <entry>
    <title>组合数打表模板</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E7%BB%84%E5%90%88%E6%95%B0%E6%89%93%E8%A1%A8%E6%A8%A1%E6%9D%BF/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E7%BB%84%E5%90%88%E6%95%B0%E6%89%93%E8%A1%A8%E6%A8%A1%E6%9D%BF/</id>
    <published>2020-01-23T13:42:35.092Z</published>
    <updated>2019-09-05T06:25:28.452Z</updated>
    
    <content type="html"><![CDATA[<h3 id="组合数打表模板"><a href="#组合数打表模板" class="headerlink" title="组合数打表模板"></a>组合数打表模板</h3><p>组合数打表模板,适用于N&lt;=3000<br>c[i][j]表示从i个中选j个的选法。 </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> C[N][N];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_C</span><span class="params">(<span class="keyword">int</span> maxn)</span> </span>&#123;</span><br><span class="line">    C[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= maxn; i++) &#123;</span><br><span class="line">        C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">            C[i][j] = C[i - <span class="number">1</span>][j] + C[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            <span class="comment">// C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % mod;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;组合数打表模板&quot;&gt;&lt;a href=&quot;#组合数打表模板&quot; class=&quot;headerlink&quot; title=&quot;组合数打表模板&quot;&gt;&lt;/a&gt;组合数打表模板&lt;/h3&gt;&lt;p&gt;组合数打表模板,适用于N&amp;lt;=3000&lt;br&gt;c[i][j]表示从i个中选j个的选法。 &lt;/p&gt;
      
    
    </summary>
    
    
      <category term="总结" scheme="https://mingfuyan.github.io/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="组合数打表" scheme="https://mingfuyan.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>为Clion配置mingw32或mingw64</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E4%B8%BAClion%E9%85%8D%E7%BD%AEmingw32%E5%92%8Cmingw64/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E4%B8%BAClion%E9%85%8D%E7%BD%AEmingw32%E5%92%8Cmingw64/</id>
    <published>2020-01-23T13:42:35.076Z</published>
    <updated>2019-09-02T12:55:49.058Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-安装MinGW32-或者-MinGW64"><a href="#1-安装MinGW32-或者-MinGW64" class="headerlink" title="1. 安装MinGW32 或者 MinGW64"></a>1. 安装MinGW32 或者 MinGW64</h3><p>我不教怎么用官方的软件安装（我也不会， 直接交给你们一个技巧<br>MinGW32 和 MinGW64 选择其一安装即可</p><ol><li>安装 MinGW32 ： 安装codeblocks， <a href="http://www.codeblocks.org/downloads/26" target="_blank" rel="noopener">官方下载链接</a>， 在其安装目录里就有MinGW32</li><li>安装MinGW64: ： 同样， 安装devc++， <a href="https://sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener">下载链接</a> ， 在其安装目录里就有MinGW64</li></ol><h3 id="2-配置CLion-C-C-运行环境"><a href="#2-配置CLion-C-C-运行环境" class="headerlink" title="2. 配置CLion C/C++ 运行环境"></a>2. 配置CLion C/C++ 运行环境</h3><p>按照下图配置即可（若看不清就右击图片， 在新窗口打开， 或者复制图片地址在新窗口打开）<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNDeUN6R2VydkJTRlRoWk96WkN3Q1g2cTlGOTV5SkNWcEk4YXNUUVI3ZTZ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-新建项目配置文件"><a href="#3-新建项目配置文件" class="headerlink" title="3. 新建项目配置文件"></a>3. 新建项目配置文件</h3><p>在你项目的根目录下， 新建 <code>CMakeLists.txt</code>， 然后在其填入下列代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)</span><br><span class="line">project(project1) </span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 11)</span><br><span class="line"></span><br><span class="line">add_executable(project1 main.cpp)</span><br></pre></td></tr></table></figure><p>解释一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)   这个不用管</span><br><span class="line">project(project1)  括号里的是你的项目名称, 也就是你项目根文件夹的名称</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 11)  不用管</span><br><span class="line"></span><br><span class="line">add_executable(project1 main.cpp)  这句话的意思是 project1 项目下的 main.cpp 可以编译运行了</span><br><span class="line"></span><br><span class="line">add_executable(template template.cpp)  </span><br><span class="line">若是想运行多个cpp文件， 那就要这样配置， 第一个template 是另一个项目名称， 随便起（但不能和上面出现过的项目名相同）， template.cpp 是你想运行的另一个cpp文件</span><br><span class="line"></span><br><span class="line">你也可以添加很多个</span><br><span class="line">add_executable(template1 template1.cpp)  </span><br><span class="line">add_executable(template2 template2.cpp)  </span><br><span class="line">add_executable(template3 template3.cpp)</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-安装MinGW32-或者-MinGW64&quot;&gt;&lt;a href=&quot;#1-安装MinGW32-或者-MinGW64&quot; class=&quot;headerlink&quot; title=&quot;1. 安装MinGW32 或者 MinGW64&quot;&gt;&lt;/a&gt;1. 安装MinGW32 或者 Min
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="clion" scheme="https://mingfuyan.github.io/tags/clion/"/>
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/tags/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>数据结构实验12 ：排序</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C12%EF%BC%9A%20%E6%8E%92%E5%BA%8F/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AE%9E%E9%AA%8C12%EF%BC%9A%20%E6%8E%92%E5%BA%8F/</id>
    <published>2020-01-23T13:42:35.076Z</published>
    <updated>2019-06-09T13:43:30.866Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验12-：-排序"><a href="#实验12-：-排序" class="headerlink" title="实验12 ： 排序"></a>实验12 ： 排序</h2><h3 id="要求："><a href="#要求：" class="headerlink" title="要求："></a>要求：</h3><ol><li>直接插入排序；</li><li>折半插入排序；</li><li>希尔排序;</li><li>冒泡排序</li><li>简单选择排序</li><li>树型选择排序</li><li>堆排序</li></ol><p>详情见代码，注释应该比较清晰。<br>（树形排序暂时还没有， 等着补上（因为这个太费时间了））</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> b[N], a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123; <span class="comment">// 直接插入排序（升序）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - <span class="number">1</span>]) &#123;  <span class="comment">// 反之， 若a[i] &gt;= a[i - 1] ，则此时这部分数组是升序的， 则不用处理</span></span><br><span class="line">            a[<span class="number">0</span>] = a[i];  <span class="comment">// a[0] 叫监视哨</span></span><br><span class="line">            <span class="keyword">for</span> (j = i - <span class="number">1</span>; a[<span class="number">0</span>] &lt; a[j]; j--) &#123;</span><br><span class="line">                <span class="comment">// 这里的判断条件不 加等号即不是 a[0] &lt;= a[j] 有两个原因</span></span><br><span class="line">                <span class="comment">// 1. 保持排序的稳定性</span></span><br><span class="line">                <span class="comment">// 2. 如果加了等号， 那么当 i == 2 时， j == 0 ， 然后 a[0] &lt;= a[j]  此循环继续 j 变为-1 那么就变成 a[-1] 虽然这是合法的， 但会出现莫名的错误</span></span><br><span class="line">                a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            a[j + <span class="number">1</span>] = a[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BInsertSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123; <span class="comment">// 折半插入排序</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i, j, high, low, mid;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            a[<span class="number">0</span>] = a[i];</span><br><span class="line">            low = <span class="number">1</span>, high = i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">                mid = low + high &gt;&gt; <span class="number">1</span>; <span class="comment">// 二进制运算， 相当于 （low + high）/ 2</span></span><br><span class="line">                <span class="keyword">if</span> (a[<span class="number">0</span>] &lt; a[mid])</span><br><span class="line">                    high = mid - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    low = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= high + <span class="number">1</span>; j--) &#123;</span><br><span class="line">                a[j + <span class="number">1</span>] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            a[high + <span class="number">1</span>] = a[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellInsert</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> dk)</span> </span>&#123;  <span class="comment">// 一趟 增量为dk的希尔排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = dk + <span class="number">1</span>; i &lt;= n; i++) &#123; <span class="comment">// dk + 1 是最小的 单位了</span></span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - dk]) &#123;</span><br><span class="line">            a[<span class="number">0</span>] = a[i];</span><br><span class="line">            <span class="keyword">int</span> j;</span><br><span class="line">            <span class="keyword">for</span> (j = i - dk; j &gt; <span class="number">0</span> &amp;&amp; a[<span class="number">0</span>] &lt; a[j]; j -= dk) &#123;</span><br><span class="line">                a[j + dk] = a[j];</span><br><span class="line">            &#125;</span><br><span class="line">            a[j + dk] = a[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;  <span class="comment">// t 趟 希尔排序</span></span><br><span class="line">    <span class="keyword">int</span> k, t, dk[N];</span><br><span class="line">    t = <span class="keyword">int</span>(<span class="built_in">log</span>(n + <span class="number">1</span>));<span class="comment">// 书上给的</span></span><br><span class="line"><span class="comment">/*    cout &lt;&lt; "t : " &lt;&lt; t &lt;&lt; "\n";*/</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i++) &#123;</span><br><span class="line">        dk[i] = <span class="built_in">pow</span>(<span class="number">2</span>, t - i + <span class="number">1</span>) - <span class="number">1</span>;  <span class="comment">// 书上给的</span></span><br><span class="line"><span class="comment">/*        cout &lt;&lt; "dk" &lt;&lt; i &lt;&lt; ':' &lt;&lt; dk[i] &lt;&lt; "\n";*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= t; i++) &#123;</span><br><span class="line">        ShellInsert(a, dk[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;  <span class="comment">// 冒泡排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n - i + <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[j - <span class="number">1</span>] &gt; a[j]) &#123;</span><br><span class="line">                swap(a[j - <span class="number">1</span>], a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;  <span class="comment">// 简单选择排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; a[j]) &#123;</span><br><span class="line">                swap(a[i], a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapAdjust</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> s, <span class="keyword">int</span> m)</span> </span>&#123; <span class="comment">// 筛法调整堆</span></span><br><span class="line">    <span class="comment">// 假设a[s + 1..m] 已经是堆， 将a[s..m] 调整为以a[s] 为根的大根堆</span></span><br><span class="line">    <span class="keyword">int</span> rc = a[s];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span> * s; j &lt;= m; j *= <span class="number">2</span>) &#123; <span class="comment">// 从2 * s 开始</span></span><br><span class="line">        <span class="keyword">if</span> (j &lt; m &amp;&amp; a[j] &lt; a[j + <span class="number">1</span>]) <span class="comment">// 注意 莫忘j &lt; m</span></span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> (rc &gt;= a[j])</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        a[s] = a[j];</span><br><span class="line">        s = j;</span><br><span class="line">    &#125;</span><br><span class="line">    a[s] = rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatHeap</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123; <span class="comment">// 建大根堆</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n / <span class="number">2</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        HeapAdjust(a, i, n);</span><br><span class="line">        <span class="comment">//  序号大于 int (n / 2) 的节点都是叶子节点 注意 n / 2 - 1 不行  因为 n / 2 * 2 ?= n</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;</span><br><span class="line">    CreatHeap(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt; <span class="number">1</span>; i--) &#123;</span><br><span class="line">        swap(a[<span class="number">1</span>], a[i]);</span><br><span class="line">        HeapAdjust(a, <span class="number">1</span>, i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TSelect</span><span class="params">(<span class="keyword">int</span> c[], <span class="keyword">int</span> s, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> c[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = s; i &lt;= m; i += <span class="number">2</span>) &#123;</span><br><span class="line">        c[i / <span class="number">2</span>] = min(c[i], c[i + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d = m - s + <span class="number">1</span>;</span><br><span class="line">    m = s - <span class="number">1</span>;</span><br><span class="line">    s = m - d / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TSelectSort</span><span class="params">(<span class="keyword">int</span> a[])</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 因为实在不知道如何记录 value 对应的 key  我就用map写吧</span></span><br><span class="line">    <span class="keyword">int</span> c[N]; <span class="comment">// 储存树</span></span><br><span class="line">    <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; ma; <span class="comment">// 记录 value 对应key</span></span><br><span class="line">    <span class="keyword">int</span> k, nn = n;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        a[n + <span class="number">1</span>] = INF;</span><br><span class="line">        nn++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*让第 n + 1 个数变成正无穷， 叶子节点为偶数个</span></span><br><span class="line"><span class="comment">     *如果 n 为 偶数， 那就不起作用</span></span><br><span class="line"><span class="comment">     * 如果n 为奇数， 起作用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    k = nn / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        c[k] = a[i];</span><br><span class="line">        ma[a[i]] = k++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        a[i] = TSelect(c, nn / <span class="number">2</span> + <span class="number">1</span>, nn);</span><br><span class="line">        c[ma[a[i]]] = INF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入你要排序的序列中的元素个数：\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入各元素：\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; b[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            a[i] = b[i];   <span class="comment">// 复制此数组， 以便于再次利用原数组</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请选择你要排序的方法的下标：\n"</span></span><br><span class="line">            <span class="string">"1、直接插入排序；\n"</span></span><br><span class="line">            <span class="string">"2、折半插入排序；\n"</span></span><br><span class="line">            <span class="string">"3、希尔排序;\n"</span></span><br><span class="line">            <span class="string">"4、冒泡排序\n"</span></span><br><span class="line">            <span class="string">"5、简单选择排序\n"</span></span><br><span class="line">            <span class="string">"6、堆排序\n"</span>);</span><br><span class="line">        <span class="keyword">int</span> o;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; o;</span><br><span class="line">        <span class="keyword">switch</span> (o) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: InsertSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: BInsertSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>: ShellSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>: BubbleSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>: SelectSort(a); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>: HeapSort(a); <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"排序后的结果为：\n"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入你要排序的序列中的元素个数(结束请输入0)：\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;实验12-：-排序&quot;&gt;&lt;a href=&quot;#实验12-：-排序&quot; class=&quot;headerlink&quot; title=&quot;实验12 ： 排序&quot;&gt;&lt;/a&gt;实验12 ： 排序&lt;/h2&gt;&lt;h3 id=&quot;要求：&quot;&gt;&lt;a href=&quot;#要求：&quot; class=&quot;headerlink
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://mingfuyan.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://mingfuyan.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="查找" scheme="https://mingfuyan.github.io/tags/%E6%9F%A5%E6%89%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何通过学生邮箱（教育邮箱）申请Jetbrains系列软件无限期试用</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%EF%BC%88%E6%95%99%E8%82%B2%E9%82%AE%E7%AE%B1%EF%BC%89%E7%94%B3%E8%AF%B7Jetbrains%E7%B3%BB%E5%88%97%E8%BD%AF%E4%BB%B6%E6%97%A0%E9%99%90%E6%9C%9F%E8%AF%95%E7%94%A8/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%EF%BC%88%E6%95%99%E8%82%B2%E9%82%AE%E7%AE%B1%EF%BC%89%E7%94%B3%E8%AF%B7Jetbrains%E7%B3%BB%E5%88%97%E8%BD%AF%E4%BB%B6%E6%97%A0%E9%99%90%E6%9C%9F%E8%AF%95%E7%94%A8/</id>
    <published>2020-01-23T13:42:35.045Z</published>
    <updated>2019-09-04T08:05:38.561Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-获得（学生邮箱）教育邮箱"><a href="#1-获得（学生邮箱）教育邮箱" class="headerlink" title="1. 获得（学生邮箱）教育邮箱"></a>1. 获得（学生邮箱）教育邮箱</h3><p>作为山师er， 我们在入学时学校已经给了我们教育邮箱， 只是大多数人都不知道罢了，<br>邮箱为</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">账号 : 学号+@stu<span class="selector-class">.sdnu</span><span class="selector-class">.edu</span><span class="selector-class">.cn</span>  如 <span class="number">201811010121</span>@stu<span class="selector-class">.sdnu</span><span class="selector-class">.edu</span>.cn</span><br><span class="line">密码 ： 初始密码为身份证后<span class="number">8</span>位， 记住 是 后<span class="number">8</span>位！！</span><br></pre></td></tr></table></figure><p>如何登陆呢， 这里附上山师学生邮箱官网， 点击下面链接登陆即可<br><a href="http://mail.stu.sdnu.edu.cn/" target="_blank" rel="noopener">http://mail.stu.sdnu.edu.cn/</a></p><p>注意， 若是用手机端进入的同学， 一定要切换到电脑版在登陆。<br>如下图：<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFUERmb2FHY3hiMnFjeUU2WFF6K0lWS3liSlEwdGRJeEJRPT0.jpg?imageView&thumbnail=1680x0&quality=96&stripmeta=0&type=jpg" alt="1"></p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFT1k1aFNNNnA1R1FDbENSd0ljWXZETXpoU1ZTQnR6UkdBPT0.jpg?imageView&thumbnail=1680x0&quality=96&stripmeta=0&type=jpg" alt="1"></p><h3 id="2-申请试用Jetbrains试用"><a href="#2-申请试用Jetbrains试用" class="headerlink" title="2. 申请试用Jetbrains试用"></a>2. 申请试用Jetbrains试用</h3><p>当你拥有了你的学生邮箱， 就可以申请试用啦。</p><ol><li>进入Jetbrains官网 <a href="https://account.jetbrains.com/login" target="_blank" rel="noopener">https://account.jetbrains.com/login</a> ， 用自己的学生邮箱注册账号  （有时候Jetbrains官网相应的比较慢， 请耐心等待）<br>若看不清下图请右击在新窗口打开~<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFS1QzclRhUk94dVVLM1laUkowdDlselpkbzk2TStoTEVnPT0.png?imageView&thumbnail=1920y1040&type=png&quality=96&stripmeta=0" alt="1"></li></ol><p>点击sign up后，官方会发一封确认验证邮件到你的邮箱上， 有时候过好几分钟才会发过来， 请耐心等待一下吧。<br>收到邮件设置好账号密码， 然后进入下一步<br>2. 进入 <a href="https://www.jetbrains.com/shop/eform/students" target="_blank" rel="noopener">https://www.jetbrains.com/shop/eform/students</a>， 开始填写资料。（有时候Jetbrains官网相应的比较慢~请耐心等待）<br>如下图， 若看不懂请翻译…<br><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFJpKyt4UW51U1VFSDBoSS93N2FMWFU3eUlPWGNSK1czc0N0cFBmTFdsOG5nPT0.png?imageView&thumbnail=1920y1373&type=png&quality=96&stripmeta=0" alt="1"></p><p>填写完成后， 你就等着Jetbrains给你发送申请成功的邮件， 一般一星期内就可~</p><ol start="3"><li>当你收到邮件时那么恭喜你申请成功了， 接下来就是下载Jetbrains了， 进入Jetbrains官网 <a href="https://www.jetbrains.com/" target="_blank" rel="noopener">https://www.jetbrains.com/</a>， 把鼠标放在tool那一栏，  选择你要下载的工具， 比如你要下载<code>WebStorm</code>， 那就点击WebStorm， 然后中间有个大大的 <code>download</code>， 等待下载就行了， 当然有时候也会比较慢~</li></ol><p>当然你也可以安装<code>Toolbox App</code>， 在这里面可以下载Jetbrains里的一系列软件， 网速就稍微快点了， 管理更新也很方便。<br>不过它默认在c盘， 建议更改一下下载位置。<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFFPU1ZIbnlCQXp4Ukw5Vzk4U3FtVmNENVQyTVBxOS9CaUVWcjlRMGhaTWNRPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0" alt="1"></p><p><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFFPU1ZIbnlCQXp4VDdsR3Rja3ZzU3ZoelVwa1RnZ3ovc0tuUGV0NnFjVjBnPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-教育邮箱的其他用处"><a href="#3-教育邮箱的其他用处" class="headerlink" title="3. 教育邮箱的其他用处"></a>3. 教育邮箱的其他用处</h3><p>教育邮箱的妙用， 请百度或者知乎， 这里贴一个知乎<br><a href="https://www.zhihu.com/question/53297353" target="_blank" rel="noopener">https://www.zhihu.com/question/53297353</a></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-获得（学生邮箱）教育邮箱&quot;&gt;&lt;a href=&quot;#1-获得（学生邮箱）教育邮箱&quot; class=&quot;headerlink&quot; title=&quot;1. 获得（学生邮箱）教育邮箱&quot;&gt;&lt;/a&gt;1. 获得（学生邮箱）教育邮箱&lt;/h3&gt;&lt;p&gt;作为山师er， 我们在入学时学校已经给了
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/tags/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
      <category term="Jetbrains" scheme="https://mingfuyan.github.io/tags/Jetbrains/"/>
    
  </entry>
  
  <entry>
    <title>数据结构整理笔记（提纲） （数据结构 C语言版 第二版 严蔚敏）</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%94%E8%AE%B0/</id>
    <published>2020-01-23T13:42:35.045Z</published>
    <updated>2019-06-25T12:29:50.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p><strong>数据结构（这门学科）：</strong> 是一门研究数据的组织， 存储， 和运算的一般方法。  </p><p><strong>数据：</strong> 是客观事物的符号表示， 是所有能输入到计算机中并被计算机程序处理的符号的总称。  </p><p><strong>数据元素：</strong> 是数据的<strong>基本单位</strong>， 在计算机中通常作为一个整体进行考虑和处理。数据元素用于完整地描述一个对象。</p><p><strong>数据项：</strong> 组成数据元素的、 有独立含义的、 不可分割的最小单位。<em>例如</em> ：学生的姓名学号等。</p><p><strong>数据对象：</strong> 是性质相同的数据元素的集合， 是数据的一个子集。<strong>只要集合内的性质均相同， 都可称之为一个数据对象</strong>。  </p><p><strong>数据结构：</strong> 是相互之间存在一种或多种特定关系的数据元素的集合。  </p><p>数据结构  </p><ul><li>逻辑结构  <ul><li>集合结构（离散结构， 因为太简单， 所以不考虑）</li><li>线性结构</li><li>非线性结构<ul><li>树结构</li><li>图结构或网状结构</li></ul></li></ul></li><li>存储结构<ul><li>顺序存储结构</li><li>链式存储结构</li></ul></li></ul><p><strong>逻辑结构</strong><br>二元组 （D， R）  </p><ul><li>D是数据关系的集合</li><li>R是D关系上的集合<br>（） 代表无序 &lt;&gt; 代表有序</li></ul><h3 id="抽象数据类型"><a href="#抽象数据类型" class="headerlink" title="抽象数据类型"></a>抽象数据类型</h3><p><strong>抽象数据类型</strong> ： 一般指由用户定义的、 表示应用问题的数学模型， 以及定义在这个模型上的一组操作的总称。<br>具体包括三部分： 数据对象， 数据对象上关系的集合 以及 对数据对象的基本操作的集合。<br><strong>定义格式</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ADT 抽象数据类型名&#123;</span><br><span class="line">    数据对象:&lt;数据对象的定义&gt;</span><br><span class="line">    数据关系:&lt;数据关系的定义&gt;</span><br><span class="line">    基本操作:&lt;基本操作的定义&gt;</span><br><span class="line">&#125; ADT 抽象数据类型名</span><br></pre></td></tr></table></figure><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p><strong>算法</strong> ：是为了解决某类问题而规定的一个有限长的操作序列。<br><strong>重要特性</strong></p><ul><li>有穷性</li><li>确定性</li><li>可行性</li><li>输入</li><li>输出</li></ul><p><strong>评价算法优劣的基本标准</strong></p><ul><li>正确性 能在有限的运行时间内得到正确的结果。</li><li>可读性 </li><li>健壮性</li><li>高效性 时间空间</li></ul><p><strong>语句频度：</strong> 一条语句重复执行的次数</p><p><strong>算法的时间复杂度：</strong> （一般指的是最坏时间复杂度）</p><ul><li>常量阶实例  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100000000</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"我爱你啊亲！"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>此算法时间复杂度 T(n) = O(1)。</li></ul><p><strong>算法的空间复杂度</strong></p><ul><li>常量阶<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n / <span class="number">2</span>; i++)&#123;</span><br><span class="line">    t = a[i];</span><br><span class="line">    a[i] = a[n - i + <span class="number">1</span>];</span><br><span class="line">    a[n - i - <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>线性阶<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    b[i] = a[n - i + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    a[i] = b[i];</span><br></pre></td></tr></table></figure>此算法需要借助大小为n的辅助数组， 所以其空间复杂度为O(n)。</li></ul><h2 id="第二章-线性表"><a href="#第二章-线性表" class="headerlink" title="第二章 线性表"></a>第二章 线性表</h2><p><strong>线性表：</strong> 由n（n &gt;= 0）个数据特性相同的元素构成的有限序列。<br><strong>空表：</strong> n = 0的线性表。</p><p>非空的线性表或线性结构的特点：<br>（1） 存在唯一的一个被称作“第一个”的数据元素；<br>（2） 存在唯一的一个被称作“最后一个”的数据元素；<br>（3） 除第一个元素外， 结构中的每个数据元素均只有一个前驱；<br>（4） 除最后一个元素外， 结构中的每个数据元素均只有一个后继。</p><h3 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h3><p>线性表的顺序存储结构是一种<strong>随机存取</strong>的存储结构。</p><p><strong>平均查找长度：</strong> 在查找时， 为确定元素在顺序表中的位置， 需和给定的值进行比较的数据元素个数的期望值称为查找算法在查找成功时的平均查找长度（Average Search Length ASL）</p><ul><li>假设pi 是查找第i个元素的概率， Ci 为找到其中关键字与给定值相等的第i个记录时， 和给定值已进行过比较的关键字个数， 则在长度为n的线性表中， 查找成功时的平均查找长度为<code>ASL = piCi （i : 1 - n 之和）</code></li></ul><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><p>链表这东西没什么好说的， 会一些基本的操作就行。</p><h3 id="待解决的问题"><a href="#待解决的问题" class="headerlink" title="待解决的问题"></a>待解决的问题</h3><p>把链表的基本操作写一下。</p><h2 id="第三章-栈和队列"><a href="#第三章-栈和队列" class="headerlink" title="第三章 栈和队列"></a>第三章 栈和队列</h2><h3 id="栈-（后进先出的数据结构（Last-In-First-Out-LIFO））"><a href="#栈-（后进先出的数据结构（Last-In-First-Out-LIFO））" class="headerlink" title="栈 （后进先出的数据结构（Last In First Out, LIFO））"></a>栈 （后进先出的数据结构（Last In First Out, LIFO））</h3><p>栈顶， 栈底。</p><ul><li>顺序栈  </li><li>链栈</li><li><em>递归*</em>： </li></ul><ol><li>定义是递归的 比如： 阶乘，二阶Fibonacci数列<ul><li>分治法：</li><li>能将一个问题变成一个新问题， 而新问题与原问题的解法相同或类同， 不同的仅是处理的对象， 并且这些处理对象更小且变化有规律。</li><li>可以通过上述转化而使问题简化。</li><li>必须有一个明确的递归出口， 或称递归的边界。</li></ul></li><li>数据结构是递归的 比如： 链表</li><li>问题的解法是递归的 比如： Hanoi塔问题， 八皇后问题， 迷宫问题</li></ol><p><strong>递归的算法效率分析：</strong>通过迭代法求解递归方程来计算时间复杂度。</p><h3 id="队列-（先进先出的数据结构（First-In-First-Out-FIFO））"><a href="#队列-（先进先出的数据结构（First-In-First-Out-FIFO））" class="headerlink" title="队列 （先进先出的数据结构（First In First Out, FIFO））"></a>队列 （先进先出的数据结构（First In First Out, FIFO））</h3><p>队头， 队尾</p><ul><li><p>顺序队列（循环队列）<br>少用一个元素空间；<br>队空的条件： Q.front == Q.rear<br>队满的条件： (Q.rear + 1) % MAXQSIZE == Q.front</p></li><li><p>链队</p></li></ul><h3 id="遗留的问题"><a href="#遗留的问题" class="headerlink" title="遗留的问题"></a>遗留的问题</h3><p>链栈， 顺序队， 链队的代码</p><h2 id="第四章-串、数组和广义表"><a href="#第四章-串、数组和广义表" class="headerlink" title="第四章 串、数组和广义表"></a>第四章 串、数组和广义表</h2><h3 id="串（或字符串）"><a href="#串（或字符串）" class="headerlink" title="串（或字符串）"></a>串（或字符串）</h3><p><strong>串的模式匹配算法</strong></p><ol><li>BF算法（Brute-Force）<br>就是暴力、这个 太简单就不写代码了。</li><li>KMP算法<br>最主要的是如何构造next数组和nextval数组<ul><li>next数组（模式串）：</li></ul><ol><li>0    j = 1</li><li>max k(1 &lt; k &lt; j)  ‘p1 p2 … p(k - 1)’  == ‘p(j - k + 1) … p(j - 2) p(j - 1)’<br>通俗的来说 就是看 j 前面的 k - 1（1 &lt; k &lt; j）字符 和 从 1 到k - 1的字符是不是一样</li><li>1 一个字符都不匹配</li></ol><ul><li>nextval数组</li></ul><ol><li>求出next数组</li><li>根据next数组判断 s[j] ?= s[next[j]]<br>如果相等 nextval[j] = next[next[j]]<br>如果不想等(不相等) nextval[j] = next[j]</li></ol></li></ol><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组很简单就不说了</p><h3 id="广义表"><a href="#广义表" class="headerlink" title="广义表"></a>广义表</h3><p>就把一些基本的定义弄熟就行了<br>广义表一般记作<code>LS = (a1, a2, a2, ..., an)</code> 其中LS是这个广义表的名称， n为其长度。<br>ai 可以是单个元素， 也可以是广义表 分别称为 广义表LS的原子和字表。<br>习惯上， 用大写字母表示广义表的名称， 用小写字母表示原子。<br>显然， 广义表的定义是一个递归的定义， 因为在描述广义表时又用到了广义表的概念。<br><strong>例子</strong></p><ol><li>A = () —— A是一个空表， 其长度为0。</li><li>B = (e) —— B只有一个原子e，其长度为1。</li><li>C = (a, (b, c, d)) —— C的长度为2， 两个元素分别为原子a和字表(b, c, d)。</li><li>D = (A, B, C) —— D的长度为3， 三个字表都是广义表。</li><li>E = (a, E) —— 这是一个递归表， 长度为2。E 相当于一个无限的广义表 E = (a, (a, (a, …)))。</li></ol><p><strong>概念</strong></p><ul><li>表头（是一个元素）： 为非空广义表的以一个元素， 它可以是一个原子也可以是一个子表。  </li><li>表尾（是一个广义表）：除表头之外， 由其余元素构成的表。（若只有一个元素， 那么其为空表）。 </li></ul><h3 id="遗留的问题-1"><a href="#遗留的问题-1" class="headerlink" title="遗留的问题"></a>遗留的问题</h3><ol><li>KMP算法的实现</li></ol><h2 id="第五章-树和二叉树"><a href="#第五章-树和二叉树" class="headerlink" title="第五章 树和二叉树"></a>第五章 树和二叉树</h2><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><p><strong>树</strong>： 是n（n &gt;= 0）个结点的有限集， 它或为空树；或为非空树， 对于非空树T：</p><ol><li>有且仅有一个称之为根的结点。</li><li>除根结点以外的其余结点可分为m(m &gt; 0) 个互不相交的有限集T1, T2, …, TM, 其中每一个集合本身又是一棵树， 并且称之为根的子树（SubTree）。</li></ol><p><strong>树的基本术语</strong></p><ol><li><strong>结点</strong>：树中的一个独立单元。包含一个数据元素及若干指向其子树的分支 。</li><li><strong>结点的度</strong>： 结点拥有的子树数。（这个结点后继的个数）。</li><li><strong>树的度</strong>： 树内各结点度的最大值。</li><li><strong>叶子</strong>： 度为0的结点称为叶子结点或者终端结点。</li><li><strong>非终端结点</strong>： 度不为0的结点称为非终端结点或者分支结点。 除根结点以外， 非终端结点也称为内部结点。</li><li><strong>双亲和孩子</strong>： 结点的子树的根称为该结点的孩子， 相应地， 该结点称为孩子的双亲。</li><li><strong>兄弟</strong>： 同一个双亲的孩子之间互称兄弟。</li><li><strong>祖先</strong>： 从根到该结点所经分支上的所有结点。</li><li><strong>子孙</strong>： 以某结点为根的子树中的任一结点都称为该结点的子孙。</li><li><strong>层次</strong>： 结点的层次从根开始定义起， 根为第一层， 根的孩子为第二层。 树中任一结点的层次等于其双亲结点的层次加一。</li><li><strong>堂兄弟</strong>： 双亲在同一层的结点互为堂兄弟。</li><li><strong>树的深度</strong>： 树中结点的最大层次称为树的深度或高度。</li><li><strong>有序树和无序树</strong>： 如果将树中结点的各子树看成从左到右是有次序的， 则称该树为有序树， 否则称为无序树。</li><li><strong>森林</strong>： 是m(m &gt;= 0) 课互不相交的树的集合。</li></ol><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><p><strong>二叉树</strong>：是n (n &gt;= 0) 个结点所构成的集合。对于非空树T：</p><ol><li>有且仅有一个称之为根的结点。</li><li>除根结点外的其余结点分为两个互不相交的子集T1 和T2， 分别称为T的左子树和右子树。</li></ol><ul><li><strong>二叉树与树的区别</strong><ol><li>二叉树每个结点至多只有两棵子树。</li><li>二叉树是有序树。</li></ol></li><li><strong>二叉树的性质</strong><ol><li>在二叉树的第i层上至多有2 ^ (i - 1) 个结点（i &gt;= 1）。</li><li>深度为k的二叉树至多有2 ^ k - 1个结点。</li><li>对任何一棵二叉树T， 如果其终端结点数为n0， 度为2的结点数为n2， 则n0 = n2 + 1。</li></ol></li><li><em>证明*</em>：<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">设B为总分支数</span><br><span class="line">二叉树结点总数</span><br><span class="line">n = n0 + n1 + n2</span><br><span class="line">除了根结点外， 每一个结点都有一个分支进入则</span><br><span class="line">n = B + <span class="number">1</span></span><br><span class="line">由于这些分支是由度为<span class="number">1</span> 和度为<span class="number">2</span> 的结点射出的，所以</span><br><span class="line">B = n1 + <span class="number">2</span> * n2</span><br><span class="line">于是得</span><br><span class="line">n = n1 + <span class="number">2</span>* n2 + <span class="number">1</span></span><br><span class="line">所以</span><br><span class="line">n0 = n2 + <span class="number">1</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>对于任意一棵树</strong>：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">树的总结点个数为</span><br><span class="line">n = n1 + n2 + ... + nk</span><br><span class="line">除了根结点外， 每一个结点都有一个分支进入则</span><br><span class="line">n = B + <span class="number">1</span></span><br><span class="line">由于这些分支是由度为<span class="number">1</span> ， 度为<span class="number">2</span>， ...， 度为k的结点射出的， 所以</span><br><span class="line">B = n1 + <span class="number">2</span> * n2 + <span class="number">3</span> * n3 + ... + k * nk</span><br><span class="line">于是得</span><br><span class="line">n = n1 + <span class="number">2</span> * n2 + <span class="number">3</span> * n3 + ... + k * nk + <span class="number">1</span></span><br><span class="line">所以</span><br><span class="line">n0 = <span class="number">1</span> + n2 + <span class="number">2</span> * n3 + ... + (k - <span class="number">1</span>) * nk</span><br></pre></td></tr></table></figure><ul><li><strong>满二叉树</strong>： 深度为k且含有2 ^ k - 1个结点的二叉树。</li><li><strong>完全二叉树</strong>： 深度为k的， 有n个结点的二叉树， 当且仅当其每一个结点都与深度为k的满二叉树中编号从1 - n 一一对应时， 称为完全二叉树。<ul><li><strong>特点</strong> </li></ul><ol><li>叶子节点只可能在层次最大的两层上出现（第k层和第k - 1层）；</li><li>对任一结点， 若其右分支下的子孙的最大层次为l， 则其左分支下的子孙的最大层次必为l 或 l + 1 。</li></ol></li></ul><ol start="4"><li>具有n个结点的完全二叉树的深度为 (向下取整)[log2 n]  + 1。</li></ol><h3 id="遍历二叉树和线索二叉树"><a href="#遍历二叉树和线索二叉树" class="headerlink" title="遍历二叉树和线索二叉树"></a>遍历二叉树和线索二叉树</h3><h4 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h4><ul><li>前序（先序）遍历<ol><li>访问根结点</li><li>先序遍历左子树</li><li>先序遍历右子树</li></ol></li><li>中序遍历<ol><li>中序遍历左子树</li><li>访问根结点</li><li>中序遍历右子树</li></ol></li><li>后序遍历<ol><li>后序遍历左子树</li><li>后序遍历右子树</li><li>访问根结点</li></ol></li></ul><p>表达式的前缀表示：波兰式。<br>表达式的后缀表示：逆波兰式。<br>表达式的中缀表示：中缀式。  </p><p>如何根据中缀式写出波兰表达式和逆波兰表达式？<br><a href="https://solodance.top/2019/06/25/根据算数表达式（中缀式）求波兰表达式和逆波兰表达式/" target="_blank" rel="noopener">相关博客链接</a></p><h4 id="线索二叉树"><a href="#线索二叉树" class="headerlink" title="线索二叉树"></a>线索二叉树</h4><p><strong>构造中序线索二叉树</strong><br>在二叉树的线索链表上添加一个头结点，令其lchild 指向二叉树的根结点， rchild指向中序遍历时的最后一个节点；同时令二叉树中序遍历序列第一个节点的lchild和最后一个节点的rchild指向头结点。<br><strong>以结点p为根的子树中序线索化</strong>  </p><ol><li>若p非空， 左子树递归线索化</li><li>若p的左孩子为空， 则给p加上左线索， 将其LTag置为1， 让p的左孩子指针指向pre（前驱）；否则将LTag置为0。</li><li>若pre的右孩子为空，则给pre加上右线索， 将其LTag置为1， 让pre的右孩子指针指向p（后继）；否则将pre的LTag置为0；</li><li>将pre指向刚访问过的结点p， 即pre = p。</li><li>右子树递归线索化。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InThreading</span><span class="params">(BiThrTree p)</span></span>&#123;</span><br><span class="line">    <span class="comment">//pre为全局变量， 初始化时其右孩子指针为空， 便于在树的最左点开始建线索。</span></span><br><span class="line">    <span class="keyword">if</span> (p)&#123;</span><br><span class="line">        InThreading(p -&gt; lchild);</span><br><span class="line">        <span class="keyword">if</span> (!p-&gt;lchild)&#123; </span><br><span class="line">            p-&gt;LTag = <span class="number">1</span>;</span><br><span class="line">            p-&gt;lchild = pre;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            p-&gt;LTag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!pre-&gt;rchild)&#123;</span><br><span class="line">            pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">            pre-&gt;rchild = p;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">        pre = p;</span><br><span class="line">        InThreading(p-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><strong>带头结点的二叉树中序线索化</strong>  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InOrderThreading</span><span class="params">(BiThrTree &amp;Thrt, BithrTree T)</span></span>&#123;</span><br><span class="line">    <span class="comment">//中序遍历二叉树T， 并将其中序线索化。 Thrt指向头结点</span></span><br><span class="line">    Thrt = <span class="keyword">new</span> BiThrNode;</span><br><span class="line">    Thrt-&gt;LTag = <span class="number">0</span>;</span><br><span class="line">    Thrt-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">    Thrt-&gt;rchild = Thrt;</span><br><span class="line">    <span class="keyword">if</span> (!T)</span><br><span class="line">        Thrt-&gt;lchild = Thrt;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        Thrt-&gt;lchild=T;</span><br><span class="line">        pre = Thrt;</span><br><span class="line">        InThreading(T);</span><br><span class="line">        pre-&gt;rchild = Thrt;</span><br><span class="line">        pre-&gt;RTag = <span class="number">1</span>;</span><br><span class="line">        Thrt-&gt;rchild = pre;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>遍历线索二叉树</strong> </p><ol><li>在中序线索二叉树中查找<ul><li>若p-&gt;LTag=1 ，则p的左链指向其前驱；</li><li>若p-&gt;LTag=0 ，则说明p有左子树， 结点的前驱是遍历其左子树时最后访问的一个结点。</li><li>若p-&gt;RTag=1， 则p的右链指向其后继；</li><li>若p-&gt;RTag=0， 则说明p有右子树， 结点的后继是遍历其右子树时访问的第一个结点。</li></ul></li><li>在先序线索二叉树中查找<ul><li>若p-&gt;LTag=1， 则p的左链指向其前驱；</li><li>若p-&gt;LTag=0， 则说明p有左子树， 此时p的前驱有两种情况：若*p是其双亲的左孩子， 则其双亲结点为其前驱；否则应该是其双亲的左子树上先序遍历的最后一个结点。</li><li>若p-&gt;RTag=1， 则p的右链指向其后继；</li><li>若p-&gt;RTag=0， 则说明p有右子树， *p的后继必为其左子树数（若存在）或右子树根。</li></ul></li><li>在后序线索二叉树中查找<ul><li>若p-&gt;LTag=1， 则p的左链指向其前驱；</li><li>若p-&gt;LTag=0， 当p-&gt;RTag=0时， 则p的右链指示其前驱；若p-&gt;RTag=1时， 则p的左链指向其前驱；</li><li>若p-&gt;RTag=1， 则p的右链指向其后继；</li><li>查找其后继比较复杂，若<code>*p</code>是二叉树的根， 则其后继为空；若<code>*p</code>是其双亲的右孩子， 则其后继为双亲结点；若<code>*p</code>是其双亲上午左孩子， 且<code>*p</code>没有右兄弟，则其后继为双亲结点；若<code>*p</code>是其双亲的左孩子， 且<code>*p</code>有右兄弟，， 则其后继为双亲的右子树上按后序遍历列出的第一个结点。</li></ul></li></ol><h3 id="树和森林"><a href="#树和森林" class="headerlink" title="树和森林"></a>树和森林</h3><h4 id="树的存储结构"><a href="#树的存储结构" class="headerlink" title="树的存储结构"></a>树的存储结构</h4><ol><li>双亲表示法</li></ol><table><thead><tr><th>data</th><th>parent</th></tr></thead></table><ol start="2"><li><p>孩子表示法</p></li><li><p>孩子兄弟法<br>又称二叉树表示法， 或二叉链表表示法， 即以二叉链表做树的存储结构。链表中结点的两个链域分别指向该节点的第一个孩子结点和下一个兄弟结点。</p></li></ol><table><thead><tr><th>firstchild</th><th>data</th><th>nextsibling</th></tr></thead></table><h4 id="树与二叉树的转换"><a href="#树与二叉树的转换" class="headerlink" title="树与二叉树的转换"></a>树与二叉树的转换</h4><p>遵循左儿子右兄弟的原则。</p><h4 id="树和森林的遍历"><a href="#树和森林的遍历" class="headerlink" title="树和森林的遍历"></a>树和森林的遍历</h4><p><strong>树的遍历</strong>  </p><ul><li>先根遍历树：先访问数的根结点， 然后依次先根遍历根的每棵子树。</li><li>后根遍历树：先依次后根遍历每棵子树， 然后访问根结点。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一章-绪论&quot;&gt;&lt;a href=&quot;#第一章-绪论&quot; class=&quot;headerlink&quot; title=&quot;第一章 绪论&quot;&gt;&lt;/a&gt;第一章 绪论&lt;/h2&gt;&lt;h3 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://mingfuyan.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://mingfuyan.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="笔记" scheme="https://mingfuyan.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>求n边形的面积</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E6%B1%82n%E8%BE%B9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E6%B1%82n%E8%BE%B9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF/</id>
    <published>2020-01-23T13:42:35.045Z</published>
    <updated>2019-12-02T05:11:12.100Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="http://www.acmicpc.sdnu.edu.cn/problem/show/1334" target="_blank" rel="noopener">题目链接</a></p><p>给出正n边形n个点的坐标， 求n变形面积的2倍， <code>3&lt;=N&lt;=100000</code>，<code>0&lt;=xi,yi&lt;=10^9</code>，  <code>mod = 1000000007</code></p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">4557430888798830399</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll x, y;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[i].x = read(), a[i].y = read();</span><br><span class="line">        a[n] = a[<span class="number">0</span>];</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            ans = (ans + (a[i - <span class="number">1</span>].x * a[i].y - a[i].x * a[i - <span class="number">1</span>].y) % mod + mod) % mod;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.acmicpc.sdnu.edu.cn/problem/show/1334&quot; tar
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://mingfuyan.github.io/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="小知识" scheme="https://mingfuyan.github.io/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>判断一个数是不是2的整数次幂</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E4%B8%8D%E6%98%AF2%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E5%B9%82/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E4%B8%8D%E6%98%AF2%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E5%B9%82/</id>
    <published>2020-01-23T13:42:35.029Z</published>
    <updated>2019-07-23T01:43:57.686Z</updated>
    
    <content type="html"><![CDATA[<p>判断一个数是不是2的整数次幂</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (!(n &amp; (n<span class="number">-1</span>))) &amp;&amp; n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;判断一个数是不是2的整数次幂&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://mingfuyan.github.io/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="小知识" scheme="https://mingfuyan.github.io/tags/%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
      <category term="数学方法" scheme="https://mingfuyan.github.io/tags/%E6%95%B0%E5%AD%A6%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>强连通算法-tarjan</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E5%BC%BA%E8%BF%9E%E9%80%9A%E7%AE%97%E6%B3%95-tarjan/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E5%BC%BA%E8%BF%9E%E9%80%9A%E7%AE%97%E6%B3%95-tarjan/</id>
    <published>2020-01-23T13:42:35.029Z</published>
    <updated>2019-11-03T11:50:11.119Z</updated>
    
    <content type="html"><![CDATA[<h3 id="强连通算法-tarjan"><a href="#强连通算法-tarjan" class="headerlink" title="强连通算法-tarjan"></a>强连通算法-tarjan</h3><p>先贴两篇比较好的博客<br><a href="https://blog.csdn.net/qq_34374664/article/details/77488976" target="_blank" rel="noopener">https://blog.csdn.net/qq_34374664/article/details/77488976</a></p><p><a href="https://blog.csdn.net/mengxiang000000/article/details/51672725" target="_blank" rel="noopener">https://blog.csdn.net/mengxiang000000/article/details/51672725</a></p><a id="more"></a><p><a href="https://baike.baidu.com/item/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/7448759?fr=aladdin" target="_blank" rel="noopener">强连通分量</a> ：有向图强连通分量：在有向图G中，如果两个顶点vi,vj间（vi&gt;vj）有一条从vi到vj的有向路径，同时还有一条从vj到vi的有向路径，则称两个顶点强连通(strongly connected)。如果有向图G的每两个顶点都强连通，称G是一个强连通图。有向图的极大强连通子图，称为强连通分量(strongly connected components)。</p><p>直接贴模板了， 以后真正理解了在回来补。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = (<span class="keyword">int</span>)<span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>)  &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u, v, ne;</span><br><span class="line">&#125;ed[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[N], dis[N], vis[N], cnt, n, m, tot;</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N]; </span><br><span class="line"><span class="keyword">int</span> s[N], ind;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">ms(head, <span class="number">-1</span>);</span><br><span class="line">ms(dis, INF);</span><br><span class="line">ms(vis, <span class="number">0</span>);</span><br><span class="line">ind = tot = cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">ed[cnt] = &#123;u, v, head[u]&#125;;</span><br><span class="line">head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++tot;</span><br><span class="line">s[++ind] = x;</span><br><span class="line">vis[x] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[x]; ~i; i = ed[i].ne)&#123;</span><br><span class="line"><span class="keyword">int</span> v = ed[i].v;</span><br><span class="line"><span class="keyword">if</span> (!dfn[v])&#123;</span><br><span class="line">tarjan(v); low[x] = min(low[x], low[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[v])&#123;</span><br><span class="line">low[x] = min(low[x], dfn[v]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 下面输出强连通块</span></span><br><span class="line"><span class="keyword">if</span> (low[x] == dfn[x])&#123;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, s[ind]);</span><br><span class="line">vis[s[ind]] = <span class="number">0</span>;</span><br><span class="line">ind--;</span><br><span class="line">&#125;<span class="keyword">while</span>(x != s[ind + <span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v);</span><br><span class="line">add(u, v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 避免有漏的</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line"><span class="keyword">if</span> (!dfn[i]) tarjan(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;强连通算法-tarjan&quot;&gt;&lt;a href=&quot;#强连通算法-tarjan&quot; class=&quot;headerlink&quot; title=&quot;强连通算法-tarjan&quot;&gt;&lt;/a&gt;强连通算法-tarjan&lt;/h3&gt;&lt;p&gt;先贴两篇比较好的博客&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/qq_34374664/article/details/77488976&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qq_34374664/article/details/77488976&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/mengxiang000000/article/details/51672725&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/mengxiang000000/article/details/51672725&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="tarjan" scheme="https://mingfuyan.github.io/categories/tarjan/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="tarjan" scheme="https://mingfuyan.github.io/tags/tarjan/"/>
    
      <category term="强连通分量" scheme="https://mingfuyan.github.io/tags/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>困时， 累时， 找些句子， 换一种方式思考</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E5%9B%B0%E6%97%B6%EF%BC%8C%20%E7%B4%AF%E6%97%B6%EF%BC%8C%20%E6%89%BE%E4%BA%9B%E5%8F%A5%E5%AD%90%EF%BC%8C%20%E6%8D%A2%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%80%9D%E8%80%83/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E5%9B%B0%E6%97%B6%EF%BC%8C%20%E7%B4%AF%E6%97%B6%EF%BC%8C%20%E6%89%BE%E4%BA%9B%E5%8F%A5%E5%AD%90%EF%BC%8C%20%E6%8D%A2%E4%B8%80%E7%A7%8D%E6%96%B9%E5%BC%8F%E6%80%9D%E8%80%83/</id>
    <published>2020-01-23T13:42:35.014Z</published>
    <updated>2019-09-05T06:17:27.676Z</updated>
    
    <content type="html"><![CDATA[<h3 id="十年一品温如言，-只羡温言不羡仙"><a href="#十年一品温如言，-只羡温言不羡仙" class="headerlink" title="十年一品温如言， 只羡温言不羡仙"></a>十年一品温如言， 只羡温言不羡仙</h3><p>谁是谁非，不过，呵呵一笑，十年含烟，梦醒时，揉揉眼睛，少年此间，哪个曾经温如言。<br>                                                                                                            ——《十年一品温如言》<br>回过头来看以前自己写的东西，才记得，原来自己曾经看过这么一本书，被这样一个句子所感动。<br>一切，都物是人非。<br>新的东西不断再取代旧的事物。<br>记忆如是。<br>第一次牵着你的手小鹿乱跳的样子，第一次亲吻幸福地要飞起来的感觉，第一次对你说那三个字信誓旦旦的模样。<br>都已然凝结成片段，随风飘散在来时的路上了。<br>时至今日，都已然找不回当时的纯粹了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这句话是出自一部小说<span class="tag">&lt;<span class="name">十年一品温如言</span>&gt;</span> 男主叫言希 女主叫温衡 所以叫只羡温言不羡仙。  ——百度知道</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">豆瓣内容简介</span><br><span class="line"></span><br><span class="line">温衡笑眯眯，讲了个十年的故事。</span><br><span class="line"></span><br><span class="line">第一年，她从江南小镇的乌鸦变成了金光闪闪的凤凰，撞到一男一女接吻，此男长得甚是可口，心喜。</span><br><span class="line"></span><br><span class="line">第二年，他生了怪病，她趁乱，鸠占鹊巢，赖在他家。</span><br><span class="line"></span><br><span class="line">第三年，他的奸夫从维也纳飞回，她，鸡飞蛋打，灰溜溜逃窜。</span><br><span class="line"></span><br><span class="line">第四年，她奉父命，当了别人家的童养媳，他几乎忘了她。</span><br><span class="line"></span><br><span class="line">第五年，准未婚夫瞧不上她，跟别的女人跑了，他幸灾乐祸。</span><br><span class="line"></span><br><span class="line">第六年，没印象。</span><br><span class="line"></span><br><span class="line">第七年，一对奸夫淫夫，奶奶的，继续没印象！</span><br><span class="line"></span><br><span class="line">第八年，她出国留学，他为了别的男人跟家中彻底决裂。</span><br><span class="line"></span><br><span class="line">第九年，他被逼无奈，和她结婚生子。</span><br><span class="line"></span><br><span class="line">第十年，孩子出生，他干了囧事，一家三口，被驱逐出境。</span><br><span class="line"></span><br><span class="line">言希泪，颤巍巍地指，媳妇儿，你撒谎，故事明明是酱紫的。</span><br><span class="line"></span><br><span class="line">第一年，她做排骨很好吃呀很好吃。</span><br><span class="line"></span><br><span class="line">第二年，生病，没有印象。</span><br><span class="line"></span><br><span class="line">第三年，他出国度假，她被赶出温家。</span><br><span class="line"></span><br><span class="line">第四年，她失踪整整一年，他生她的气，不去找就是不去找。</span><br><span class="line"></span><br><span class="line">第五年，他躲在墙角，跟踪了她整整一年。</span><br><span class="line"></span><br><span class="line">第六年，她一生中最在意的那个男人出现。</span><br><span class="line"></span><br><span class="line">第七年，没印象。</span><br><span class="line"></span><br><span class="line">第八年，他出了车祸，她出了国。</span><br><span class="line"></span><br><span class="line">第九年，他追到法国，她背着他在雪地里走了一个冬季。</span><br><span class="line"></span><br><span class="line">第十年，情敌一号出生，回国。</span><br><span class="line"></span><br><span class="line">媳妇儿，这才是完整真实的故事，知道了吗？</span><br><span class="line"></span><br><span class="line">这是他们的故事，一种爱，两个轻转流年，谁是谁非，不过，呵呵一笑。十年含烟，梦醒时，揉揉眼睛，少年此间，哪个曾经温如言。</span><br></pre></td></tr></table></figure><p><code>一种爱，两个轻转流年，谁是谁非，不过，呵呵一笑。十年含烟，梦醒时，揉揉眼睛，少年此间，哪个曾经温如言。</code></p><p><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFJKVmo2Qjk1dDVNUy9Va2ZhNW5UL3F1dmtzeWlGbmx6K2dadHNUK3g4UnZnPT0.jpeg?imageView&thumbnail=1680x0&quality=96&stripmeta=0&type=jpg" alt="十年一品温如言"></p><h3 id="多数人25岁就死了，一直到75岁才埋。可我不愿意这样"><a href="#多数人25岁就死了，一直到75岁才埋。可我不愿意这样" class="headerlink" title="多数人25岁就死了，一直到75岁才埋。可我不愿意这样"></a>多数人25岁就死了，一直到75岁才埋。可我不愿意这样</h3><h3 id="“只要有想见的人，就不是孤身一人”-——《夏目友人帐》"><a href="#“只要有想见的人，就不是孤身一人”-——《夏目友人帐》" class="headerlink" title="“只要有想见的人，就不是孤身一人” ——《夏目友人帐》"></a>“只要有想见的人，就不是孤身一人” ——《夏目友人帐》</h3><h3 id="不喜欢什么“乾坤未定，你我皆是黑马。”-总要为慵懒买单。"><a href="#不喜欢什么“乾坤未定，你我皆是黑马。”-总要为慵懒买单。" class="headerlink" title="不喜欢什么“乾坤未定，你我皆是黑马。” 总要为慵懒买单。"></a>不喜欢什么“乾坤未定，你我皆是黑马。” 总要为慵懒买单。</h3><h3 id="“心有不甘，却无以为继”"><a href="#“心有不甘，却无以为继”" class="headerlink" title="“心有不甘，却无以为继”"></a>“心有不甘，却无以为继”</h3><h3 id="因为喜欢你-所以想借着你的光-去看一看从未见过的世界"><a href="#因为喜欢你-所以想借着你的光-去看一看从未见过的世界" class="headerlink" title="因为喜欢你 所以想借着你的光 去看一看从未见过的世界"></a>因为喜欢你 所以想借着你的光 去看一看从未见过的世界</h3><h3 id="2019-8-16-20-13-58"><a href="#2019-8-16-20-13-58" class="headerlink" title="2019-8-16 20:13:58"></a>2019-8-16 20:13:58</h3><p>  有时候我就在想， 我自己想要的到底是什么，  我自己最终要变成什么样子， 能给我真正的快乐的人， 事， 物， 究竟是什么。自己究竟喜欢什么样的女生， 什么样的歌， 什么样的游戏。<br>哪有什么困时， 不过是自己作息不正罢了， 那有什么累时， 你那还叫累？<br>发现自己真可悲， 对自己亲近的人不怎么用心， 还整天觉得自己很牛逼是的， 其实就是一个***， 有一群人真正的在一起学习的感觉是真的好呀， 有个看得过去的女生更好咯（在没找对象之前）嘻嘻。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;十年一品温如言，-只羡温言不羡仙&quot;&gt;&lt;a href=&quot;#十年一品温如言，-只羡温言不羡仙&quot; class=&quot;headerlink&quot; title=&quot;十年一品温如言， 只羡温言不羡仙&quot;&gt;&lt;/a&gt;十年一品温如言， 只羡温言不羡仙&lt;/h3&gt;&lt;p&gt;谁是谁非，不过，呵呵一笑，十
      
    
    </summary>
    
    
      <category term="Solo_Dance" scheme="https://mingfuyan.github.io/categories/Solo-Dance/"/>
    
    
      <category term="Solo_Dance" scheme="https://mingfuyan.github.io/tags/Solo-Dance/"/>
    
  </entry>
  
  <entry>
    <title>快速算出一个数有多少种因子</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E5%BF%AB%E9%80%9F%E7%AE%97%E5%87%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E5%9B%A0%E5%AD%90/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E5%BF%AB%E9%80%9F%E7%AE%97%E5%87%BA%E4%B8%80%E4%B8%AA%E6%95%B0%E6%9C%89%E5%A4%9A%E5%B0%91%E7%A7%8D%E5%9B%A0%E5%AD%90/</id>
    <published>2020-01-23T13:42:35.014Z</published>
    <updated>2019-07-25T02:31:44.061Z</updated>
    
    <content type="html"><![CDATA[<p>快速算出一个数有多少种因子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n % i == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(n % i == <span class="number">0</span>)&#123;</span><br><span class="line">                n /= i;</span><br><span class="line">                a++;</span><br><span class="line">            &#125;</span><br><span class="line">            s = s * (a + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; <span class="number">1</span>) s = s * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;快速算出一个数有多少种因子&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://mingfuyan.github.io/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="数学" scheme="https://mingfuyan.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>解决ShadowsocksR 1080 端口被占用问题</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E8%A7%A3%E5%86%B3ShadowsocksR%201080%20%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E8%A7%A3%E5%86%B3ShadowsocksR%201080%20%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98/</id>
    <published>2020-01-23T13:42:35.014Z</published>
    <updated>2019-10-16T08:03:58.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解决ShadowsocksR-1080-端口被占用问题"><a href="#解决ShadowsocksR-1080-端口被占用问题" class="headerlink" title="解决ShadowsocksR 1080 端口被占用问题"></a>解决ShadowsocksR 1080 端口被占用问题</h3><p>除了系统补丁会保留端口外，开启win10的<code>hyper-v</code>也会保留端口，比如我自己。</p><p>最简单的方法， 找到ssr根目录。 打开 <code>gui-config.json</code>， <img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFFRS09XcGs2V0VOaVEwejNlUW5HU25QYTNmU1FnenZlUHZrNXdFdk9mcHVRPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><p>将 localPort 1080  随便弄一个没保留的端口即可。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;解决ShadowsocksR-1080-端口被占用问题&quot;&gt;&lt;a href=&quot;#解决ShadowsocksR-1080-端口被占用问题&quot; class=&quot;headerlink&quot; title=&quot;解决ShadowsocksR 1080 端口被占用问题&quot;&gt;&lt;/a&gt;解决Sha
      
    
    </summary>
    
    
      <category term="零碎小知识" scheme="https://mingfuyan.github.io/categories/%E9%9B%B6%E7%A2%8E%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="ssr" scheme="https://mingfuyan.github.io/tags/ssr/"/>
    
  </entry>
  
  <entry>
    <title>矩形相交问题</title>
    <link href="https://mingfuyan.github.io/2020/01/23/%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%BA%A4%E9%97%AE%E9%A2%98/"/>
    <id>https://mingfuyan.github.io/2020/01/23/%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%BA%A4%E9%97%AE%E9%A2%98/</id>
    <published>2020-01-23T13:42:35.014Z</published>
    <updated>2019-06-10T10:27:25.761Z</updated>
    
    <content type="html"><![CDATA[<p>给出矩形的 对角线上的两个点的坐标 (x11, y11)， (x12, y12)， (x21, y21), (x22, y22)。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x01 = max(min(x11, x12), min(x21, x22));</span><br><span class="line"><span class="keyword">int</span> x02 = min(max(x11, x12), max(x21, x22));</span><br><span class="line"><span class="keyword">int</span> y01 = max(min(y11, y12), min(y21, y22));</span><br><span class="line"><span class="keyword">int</span> y02 = min(max(y11, y12), max(y21, y22));</span><br><span class="line"><span class="keyword">if</span> (x01 &lt; x02 &amp;&amp; y01 &lt; y02)&#123;</span><br><span class="line">    <span class="comment">// 说明这两个矩形相交</span></span><br><span class="line">    <span class="keyword">int</span> s = (x02 - x01) * (y02 - y01); <span class="comment">// 相交的面积</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123; <span class="comment">// 这两个不相交</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题-："><a href="#例题-：" class="headerlink" title="例题 ："></a>例题 ：</h2><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJVTmRISHoxTnJ1QlI0VDhQSjE1cjlmRWV0Mlh0bVVaOTk4V2FySDg4amN3PT0.jpg?imageView&thumbnail=2339y1653&type=jpg&quality=96&stripmeta=0&type=jpg" alt="题目页面1"><br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFJVTmRISHoxTnJ1S1F6eUMyZTJKTnZoeWF0NlRhb1ViZ1dHZkF0Y1RZNjRnPT0.jpg?imageView&thumbnail=2339y1653&type=jpg&quality=96&stripmeta=0&type=jpg" alt="题目页面2"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x1, y1, x2, y2;</span><br><span class="line">    ll sum, s;</span><br><span class="line">&#125;arc[<span class="number">5005</span>];</span><br><span class="line"><span class="keyword">int</span> x01, x02, y01, y02;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t, n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            arc[i].sum= <span class="number">0</span>;</span><br><span class="line">            arc[i].s = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; arc[i].x1 &gt;&gt; arc[i].y1 &gt;&gt; arc[i].x2 &gt;&gt; arc[i].y2;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++)&#123;</span><br><span class="line">                x01 = max(min(arc[i].x1, arc[i].x2), min(arc[j].x1, arc[j].x2));</span><br><span class="line">                x02 = min(max(arc[i].x1, arc[i].x2), max(arc[j].x1, arc[j].x2));</span><br><span class="line">                y01 = max(min(arc[i].y1, arc[i].y2), min(arc[j].y1, arc[j].y2));</span><br><span class="line">                y02 = min(max(arc[i].y1, arc[i].y2), max(arc[j].y1, arc[j].y2));</span><br><span class="line">                <span class="keyword">if</span> (x01 &lt; x02 &amp;&amp; y01 &lt; y02)&#123;</span><br><span class="line">                    arc[i].sum++;</span><br><span class="line">                    arc[i].s += (x02 - x01) * (y02 - y01);</span><br><span class="line">                    arc[j].sum++;</span><br><span class="line">                    arc[j].s += (x02 - x01) * (y02 - y01);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; arc[i].sum &lt;&lt; <span class="string">' '</span> &lt;&lt; arc[i].s &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给出矩形的 对角线上的两个点的坐标 (x11, y11)， (x12, y12)， (x21, y21), (x22, y22)。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s
      
    
    </summary>
    
    
      <category term="acm小知识" scheme="https://mingfuyan.github.io/categories/acm%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="acm" scheme="https://mingfuyan.github.io/tags/acm/"/>
    
      <category term="小技巧" scheme="https://mingfuyan.github.io/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
      <category term="矩形相交" scheme="https://mingfuyan.github.io/tags/%E7%9F%A9%E5%BD%A2%E7%9B%B8%E4%BA%A4/"/>
    
  </entry>
  
</feed>
