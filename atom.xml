<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Solo_Dance的博客</title>
  
  <subtitle>欢迎访问 Solo_Dance的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://solodance.top/"/>
  <updated>2020-03-05T13:57:54.072Z</updated>
  <id>https://solodance.top/</id>
  
  <author>
    <name>Mingfu Yan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CodeForces - 1305E Kuroni and the Score Distribution（思维， 构造）.md</title>
    <link href="https://solodance.top/2020/03/05/CodeForces%20-%201305E%20Kuroni%20and%20the%20Score%20Distribution%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%8C%20%E6%9E%84%E9%80%A0%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/05/CodeForces%20-%201305E%20Kuroni%20and%20the%20Score%20Distribution%EF%BC%88%E6%80%9D%E7%BB%B4%EF%BC%8C%20%E6%9E%84%E9%80%A0%EF%BC%89/</id>
    <published>2020-03-05T13:58:13.355Z</published>
    <updated>2020-03-05T13:57:54.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1305E" target="_blank" rel="noopener">题目链接</a></p><p>给你两个数n(&lt;= 5000)， m(&lt;= 1e9)， n为你要构造的序列长度， m下面会用到。该序列满足</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 序列递增</span><br><span class="line"><span class="number">2.</span> <span class="number">1</span> &lt;= ai &lt;= <span class="number">1e9</span></span><br><span class="line"><span class="number">3.</span> 有恰好m组 i, j, k (<span class="number">1</span> &lt;= i &lt; j &lt; k &lt;= n) 满足 ai + aj = ak</span><br></pre></td></tr></table></figure><p>如果存在这样的序列， 输出这个序列， 不存在输出-1、</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><a href="https://www.cnblogs.com/BakaCirno/p/12409554.html" target="_blank" rel="noopener">转自此</a></p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFNjTlE5aGkyLzd2TEdSRkVuU2N5WURtcjR0WVlCZzkxQjd3QUphT1dEbTFBPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read(), m = read();</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k &lt; n &amp;&amp; sum + k / <span class="number">2</span> &lt;= m) sum += k / <span class="number">2</span>, k++;</span><br><span class="line">    <span class="keyword">if</span> (k == n &amp;&amp; sum &lt; m) <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>), <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; ++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>, i);</span><br><span class="line">    <span class="keyword">if</span> (k == n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, k - <span class="number">2</span> * (m - sum) + <span class="number">1</span> + k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k + <span class="number">2</span>; i &lt;= n; ++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>, <span class="keyword">int</span>(<span class="number">1e8</span> + (i - k - <span class="number">2</span>) * <span class="number">1e4</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1305E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你两个数n(&amp;lt;= 5000)， m(&amp;lt;= 1e9)， n为你要构造的序列长度， m下面会用到。该序列满足&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt; 序列递增&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;= ai &amp;lt;= &lt;span class=&quot;number&quot;&gt;1e9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt; 有恰好m组 i, j, k (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;= i &amp;lt; j &amp;lt; k &amp;lt;= n) 满足 ai + aj = ak&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;如果存在这样的序列， 输出这个序列， 不存在输出-1、&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4/"/>
    
    
      <category term="思维" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="构造" scheme="https://solodance.top/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1305D Kuroni and the Celebration（交互题， 思维题）.md</title>
    <link href="https://solodance.top/2020/03/04/CodeForces%20-%201305D%20Kuroni%20and%20the%20Celebration%EF%BC%88%E4%BA%A4%E4%BA%92%E9%A2%98%EF%BC%8C%20%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/04/CodeForces%20-%201305D%20Kuroni%20and%20the%20Celebration%EF%BC%88%E4%BA%A4%E4%BA%92%E9%A2%98%EF%BC%8C%20%E6%80%9D%E7%BB%B4%E9%A2%98%EF%BC%89/</id>
    <published>2020-03-04T06:57:05.339Z</published>
    <updated>2020-03-04T06:55:54.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1305D" target="_blank" rel="noopener">题目链接</a></p><p>给你一棵n个节点的树， 找出他的根结点。</p><p>交互(不懂交互题的百度搜例题就明白了)</p><p>最多可以交互 n / 2次<br>输出 <code>? u v</code> 返回 <code>lca(u, v)</code> .<br>输出答案 <code>! root</code></p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>最多询问n / 2 次， 如果保证每次都能淘汰两个点的话， 肯定能找到根结点，如果n为奇数并且 在n / 2次内没找到根结点， 那么剩下的那个节点就是根结点。<br>就是自己搞一搞。<br>我选择的是每次选择叶子节点， 如果 <code>lca(u, v) == u || lca(u, c) == v</code> 那么 <code>lca(u, v)</code> 就是根结点。如果不是， 那么就把这两个叶子节点删除， 这样有可能会有新的叶子节点， 再把它放到队列中。</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> du[<span class="number">1003</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ma[<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> a, b;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        ma[a].push_back(b);</span><br><span class="line">        ma[b].push_back(a);</span><br><span class="line">        du[a]++, du[b]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    <span class="keyword">int</span> sum = n / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">if</span> (du[i] == <span class="number">1</span>) q.push(i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.empty() &amp;&amp; sum--)&#123;</span><br><span class="line">        <span class="keyword">int</span> c1 = q.front();q.pop();</span><br><span class="line">        <span class="keyword">if</span> (q.empty()) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> c2 = q.front();q.pop();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"? "</span> &lt;&lt; c1 &lt;&lt; <span class="string">" "</span> &lt;&lt; c2 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> lca;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; lca;</span><br><span class="line">        <span class="keyword">if</span> (lca == c1 || lca == c2)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"! "</span> &lt;&lt; lca &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        du[c1] = du[c2] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : ma[c1]) &#123;</span><br><span class="line">            du[c]--;</span><br><span class="line">            <span class="keyword">if</span> (du[c] == <span class="number">1</span>) q.push(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> c : ma[c2]) &#123;</span><br><span class="line">            du[c]--;</span><br><span class="line">            <span class="keyword">if</span> (du[c] == <span class="number">1</span>) q.push(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (du[i] &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"! "</span> &lt;&lt; i &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1305D&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一棵n个节点的树， 找出他的根结点。&lt;/p&gt;
&lt;p&gt;交互(不懂交互题的百度搜例题就明白了)&lt;/p&gt;
&lt;p&gt;最多可以交互 n / 2次&lt;br&gt;输出 &lt;code&gt;? u v&lt;/code&gt; 返回 &lt;code&gt;lca(u, v)&lt;/code&gt; .&lt;br&gt;输出答案 &lt;code&gt;! root&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="思维题" scheme="https://solodance.top/categories/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
    
      <category term="思维题" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="交互题" scheme="https://solodance.top/tags/%E4%BA%A4%E4%BA%92%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1305C Kuroni and Impossible Calculation（数学）.md</title>
    <link href="https://solodance.top/2020/03/04/CodeForces%20-%201305C%20Kuroni%20and%20Impossible%20Calculation%EF%BC%88%E6%95%B0%E5%AD%A6%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/04/CodeForces%20-%201305C%20Kuroni%20and%20Impossible%20Calculation%EF%BC%88%E6%95%B0%E5%AD%A6%EF%BC%89/</id>
    <published>2020-03-04T05:07:42.139Z</published>
    <updated>2020-03-04T05:07:31.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1305C" target="_blank" rel="noopener">题目链接</a></p><p>calculate (∏1≤i&lt;j≤n|ai−aj|) % m.<br>其中 <code>2 &lt;= n &lt;= 2e5 | 1 &lt;= m &lt;= 1000 | 0 &lt;= ai &lt;= 1e9</code></p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>由<a href="https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776?fr=aladdin" target="_blank" rel="noopener">抽屉原理</a>可知， 当n &gt; m 时， 肯定会有 两个数和m同余。</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m, a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[i] = read();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n &gt; m)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ll ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; ++j)&#123;</span><br><span class="line">                ans = ans * <span class="built_in">abs</span>(a[i] - a[j]) % m;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1305C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;calculate (∏1≤i&amp;lt;j≤n|ai−aj|) % m.&lt;br&gt;其中 &lt;code&gt;2 &amp;lt;= n &amp;lt;= 2e5 | 1 &amp;lt;= m &amp;lt;= 1000 | 0 &amp;lt;= ai &amp;lt;= 1e9&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="https://solodance.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="抽屉原理" scheme="https://solodance.top/tags/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>CodeForces - 1321C Remove Adjacent（贪心）</title>
    <link href="https://solodance.top/2020/03/02/CodeForces%20-%201321C%20Remove%20Adjacent%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
    <id>https://solodance.top/2020/03/02/CodeForces%20-%201321C%20Remove%20Adjacent%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</id>
    <published>2020-03-02T10:34:09.684Z</published>
    <updated>2020-03-02T10:33:43.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/CodeForces-1321C" target="_blank" rel="noopener">题目链接</a></p><p>给你一个字符串， 如果相邻的两个字母s[i], s[j] 满足 <code>abs(s[i] - s[j]) == 1</code>， 那么就能删除较大的那个字符， 问最多能删多少个。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>贪心， 先把字母z删掉， 然后在删y， 以此类推。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> ans, n;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">f</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = s.length();</span><br><span class="line">    <span class="built_in">string</span> tmp = <span class="string">""</span>;</span><br><span class="line">    <span class="comment">// 找到字符c 的连续的区间</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == c)&#123;</span><br><span class="line">            <span class="keyword">int</span> j = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(j &lt; l &amp;&amp; s[j] == c)++j;</span><br><span class="line">            <span class="comment">// 判断可不可删</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; s[i - <span class="number">1</span>] == c - <span class="number">1</span> || j &lt; l &amp;&amp; s[j] == c - <span class="number">1</span>)&#123;</span><br><span class="line">                ans += j - i;</span><br><span class="line">                i = j - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 不能删的被保留</span></span><br><span class="line">        tmp += s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 去除被删的字符, 返回</span></span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c = <span class="string">'z'</span>; c &gt; <span class="string">'a'</span>; --c)</span><br><span class="line">        s = f(s, c);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/CodeForces-1321C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一个字符串， 如果相邻的两个字母s[i], s[j] 满足 &lt;code&gt;abs(s[i] - s[j]) == 1&lt;/code&gt;， 那么就能删除较大的那个字符， 问最多能删多少个。&lt;/p&gt;
    
    </summary>
    
    
      <category term="贪心" scheme="https://solodance.top/categories/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="贪心" scheme="https://solodance.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>2020牛客寒假算法基础集训营6_A 配对（贪心）</title>
    <link href="https://solodance.top/2020/02/16/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A56_A%20%E9%85%8D%E5%AF%B9%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
    <id>https://solodance.top/2020/02/16/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A56_A%20%E9%85%8D%E5%AF%B9%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</id>
    <published>2020-02-16T04:10:22.039Z</published>
    <updated>2020-02-16T04:09:16.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://ac.nowcoder.com/acm/contest/3007/A" target="_blank" rel="noopener">题目链接</a></p><p>现在有两个正整数集合， 每个集合n个数， 最大化第k大的 两两配对的和。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>具体怎么归纳不好说， 纯手工发现， 分别将前k大的数， 一个集合第i小的和另一个集合第i大的， 配对， 得出k个数最后最小的那个数就是答案。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(), k = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[<span class="number">0</span>][i] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) a[<span class="number">1</span>][i] = read();</span><br><span class="line">    sort(a[<span class="number">0</span>], a[<span class="number">0</span>] + n, greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">    sort(a[<span class="number">1</span>], a[<span class="number">1</span>] + n, greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = k - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(r &gt;= <span class="number">0</span>)&#123; <span class="comment">//倒序配对</span></span><br><span class="line">        a[<span class="number">2</span>][l] = a[<span class="number">0</span>][l] + a[<span class="number">1</span>][r];</span><br><span class="line">        r--;l++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a[<span class="number">2</span>], a[<span class="number">2</span>] + k, greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a[<span class="number">2</span>][k - <span class="number">1</span>] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/3007/A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;现在有两个正整数集合， 每个集合n个数， 最大化第k大的 两两配对的和。&lt;/p&gt;
    
    </summary>
    
    
      <category term="贪心" scheme="https://solodance.top/categories/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="贪心" scheme="https://solodance.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>2020牛客寒假算法基础集训营6_C 汉诺塔（思维、dp）</title>
    <link href="https://solodance.top/2020/02/16/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A56_C%20%E6%B1%89%E8%AF%BA%E5%A1%94%EF%BC%88%E6%80%9D%E7%BB%B4%E3%80%81dp%EF%BC%89/"/>
    <id>https://solodance.top/2020/02/16/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A56_C%20%E6%B1%89%E8%AF%BA%E5%A1%94%EF%BC%88%E6%80%9D%E7%BB%B4%E3%80%81dp%EF%BC%89/</id>
    <published>2020-02-16T00:10:44.036Z</published>
    <updated>2020-02-15T23:18:57.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://ac.nowcoder.com/acm/contest/3007/C" target="_blank" rel="noopener">题目链接</a></p><p>跟你n个<code>(x, y)</code> 每一组， 都满足<code>x_i &lt; x_i + 1 &amp;&amp; y_i &lt; y_i + 1</code>，问如何尽可能分更少的组， 输出每一个分到第几组（组号从1开始）</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>按x从小到大排序。</p><p>Dilworth定理： 最小组数等于y的最长下降子序列长度</p><p>最长下降子序列 用二分优化的dp求法中， <code>dp[i]表示长度为i的最长下降子序列的最后一个数</code>， 显然， 我们dp[i]越大越好， 当前为a[i] 所以我们就用二分找到dp数组中第一个比a[i]小的数(位置为cnt)， 如果有， 就把<code>dp[cnt] = a[i]</code> ，， 如果没有， <code>cnt = ++len</code> <code>dp[cnt] = a[i]</code> 同时， a[i]所对应的原下标对应的组数  就是  cnt.</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;<span class="keyword">bool</span> f = <span class="number">0</span>;<span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;<span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x, y, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;c) &#123;<span class="keyword">return</span> x &lt; c.x;&#125;  <span class="comment">// 按x从小到大排序</span></span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> f[N], ans[N], n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i].x = read(), a[i].y = read(), a[i].id = i;</span><br><span class="line">    sort(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">1</span>, high = len, mid;</span><br><span class="line">        <span class="keyword">while</span>(low &lt; high)&#123;</span><br><span class="line">            mid = low + (high - low) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (f[mid] &lt; a[i].y) high = mid;</span><br><span class="line">            <span class="keyword">else</span> low = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (f[low] &gt;= a[i].y) low = ++len; <span class="comment">// 如果没有找到 </span></span><br><span class="line">        f[low] = a[i].y;</span><br><span class="line">        ans[a[i].id] = low;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; len &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">cout</span> &lt;&lt; ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/3007/C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;跟你n个&lt;code&gt;(x, y)&lt;/code&gt; 每一组， 都满足&lt;code&gt;x_i &amp;lt; x_i + 1 &amp;amp;&amp;amp; y_i &amp;lt; y_i + 1&lt;/code&gt;，问如何尽可能分更少的组， 输出每一个分到第几组（组号从1开始）&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
  </entry>
  
  <entry>
    <title>2020牛客寒假算法基础集训营3 I-牛牛的汉诺塔（记忆化搜索）</title>
    <link href="https://solodance.top/2020/02/10/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A53%20I-%E7%89%9B%E7%89%9B%E7%9A%84%E6%B1%89%E8%AF%BA%E5%A1%94%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89/"/>
    <id>https://solodance.top/2020/02/10/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A53%20I-%E7%89%9B%E7%89%9B%E7%9A%84%E6%B1%89%E8%AF%BA%E5%A1%94%EF%BC%88%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%EF%BC%89/</id>
    <published>2020-02-10T04:09:50.160Z</published>
    <updated>2020-02-10T04:11:37.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>汉诺塔， 伪代码为</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Function <span class="constructor">Hanoi(<span class="params">n</span>,<span class="params">a</span>,<span class="params">b</span>,<span class="params">c</span>)</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span> <span class="keyword">then</span></span><br><span class="line">        print(a+'-&gt;'+c)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="constructor">Hanoi(<span class="params">n</span>-1,<span class="params">a</span>,<span class="params">c</span>,<span class="params">b</span>)</span></span><br><span class="line">        print(a+'-&gt;'+c)</span><br><span class="line">        <span class="constructor">Hanoi(<span class="params">n</span>-1,<span class="params">b</span>,<span class="params">a</span>,<span class="params">c</span>)</span></span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span></span><br><span class="line"><span class="keyword">end</span> Function</span><br></pre></td></tr></table></figure><p>统计以下信息：A-&gt;B,A-&gt;C,B-&gt;A,B-&gt;C,C-&gt;A,C-&gt;B的次数，以及所有移动的总步数。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一开始硬生生找规律， 呜呜呜呜呜， 找的心态爆炸最后终于找出来了。最后会贴出我自己找的规律的代码。</p><p>这里介绍另一种方法， 记忆化搜索。 当我看到题解有记忆化搜索的字样时， 突然间恍然大悟， 想尝试着自己写一下但是失败了， 呜呜，看着std才写出来的。</p><p>普通递归时间复杂度太高， 本质原因就是重复搜索了好多。记忆化搜索就是想办法让重复搜索的次数减少， 具体详见百度。</p><p>如果你明白记忆化搜索了， 那就直接看代码就行了， 不明白的话， 那就再去学！</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>记忆化搜索</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> _(<span class="keyword">char</span> a, <span class="keyword">char</span> b)&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">'a'</span> &amp;&amp; b == <span class="string">'b'</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">'a'</span> &amp;&amp; b == <span class="string">'c'</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">'b'</span> &amp;&amp; b == <span class="string">'a'</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">'b'</span> &amp;&amp; b == <span class="string">'c'</span>) <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">'c'</span> &amp;&amp; b == <span class="string">'a'</span>) <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="string">'c'</span> &amp;&amp; b == <span class="string">'b'</span>) <span class="keyword">return</span> <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    ll sum[<span class="number">7</span>];</span><br><span class="line">    node()&#123;ms(sum, <span class="number">0</span>);&#125;;</span><br><span class="line">    node <span class="keyword">operator</span> + (<span class="keyword">const</span> node &amp; x)<span class="keyword">const</span>&#123;</span><br><span class="line">        node tmp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; ++i) tmp.sum[i] = sum[i] + x.sum[i];</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">getsum</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ll tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">6</span>; ++i) tmp += sum[i];</span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;ans;</span><br><span class="line"><span class="keyword">using</span> tu = tuple&lt;<span class="keyword">int</span>, <span class="keyword">char</span>, <span class="keyword">char</span>, <span class="keyword">char</span>&gt;;</span><br><span class="line"><span class="built_in">map</span>&lt;tu, <span class="keyword">int</span>&gt;vis; <span class="comment">//表示这个 组合(int, char, char, char) 是否已经搜索到.</span></span><br><span class="line"><span class="built_in">map</span>&lt;tu, node&gt;ma; <span class="comment">// 储存这个组合下的 node值是多少</span></span><br><span class="line"><span class="function">node <span class="title">Hanoi</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> a, <span class="keyword">char</span> b, <span class="keyword">char</span> c)</span></span>&#123; <span class="comment">// 注意返回值是node, 这个太妙了</span></span><br><span class="line">    tu p = make_tuple(n, a, b, c);</span><br><span class="line">    <span class="keyword">if</span> (vis[p]) <span class="keyword">return</span> ma[p]; <span class="comment">// 如果访问过这个元组, 直接return这个元组的值就行</span></span><br><span class="line">    node tmp;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">        tmp.sum[_(a, c)]++; <span class="comment">// a c 这步++</span></span><br><span class="line">        <span class="keyword">return</span> tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    tmp = tmp + Hanoi(n - <span class="number">1</span>, a, c, b);</span><br><span class="line">    tmp.sum[_(a, c)]++;</span><br><span class="line">    tmp = tmp + Hanoi(n - <span class="number">1</span>, b, a, c);</span><br><span class="line">    vis[p] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> ma[p] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line">    ans = Hanoi(n, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A-&gt;B:%lld\n"</span>,ans.sum[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A-&gt;C:%lld\n"</span>,ans.sum[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"B-&gt;A:%lld\n"</span>,ans.sum[<span class="number">3</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"B-&gt;C:%lld\n"</span>,ans.sum[<span class="number">4</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"C-&gt;A:%lld\n"</span>,ans.sum[<span class="number">5</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"C-&gt;B:%lld\n"</span>,ans.sum[<span class="number">6</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"SUM:%lld\n"</span>, ans.getsum());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我自己找的规律， 找了一个多小时， 心态在爆炸的边缘疯狂试探。不过没什么参考价值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll sum[<span class="number">7</span>][<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// B -&gt; A  C -&gt; B</span></span><br><span class="line">    sum[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    sum[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    sum[<span class="number">3</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    sum[<span class="number">3</span>][<span class="number">5</span>] = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">30</span>; ++i) &#123;</span><br><span class="line">        sum[<span class="number">3</span>][<span class="number">2</span> * i + <span class="number">1</span>] = sum[<span class="number">3</span>][<span class="number">2</span> * i - <span class="number">1</span>] * <span class="number">4</span> + i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; ++i)</span><br><span class="line">        sum[<span class="number">3</span>][i * <span class="number">2</span>] = sum[<span class="number">3</span>][i * <span class="number">2</span> - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A -&gt; B B -&gt; C</span></span><br><span class="line">    sum[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    sum[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    sum[<span class="number">1</span>][<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    sum[<span class="number">1</span>][<span class="number">4</span>] = <span class="number">4</span>;</span><br><span class="line">    sum[<span class="number">1</span>][<span class="number">6</span>] = <span class="number">15</span>;</span><br><span class="line">    sum[<span class="number">1</span>][<span class="number">8</span>] = <span class="number">58</span>;</span><br><span class="line">    ll tmp = <span class="number">4</span> * <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">30</span>; ++i) &#123;</span><br><span class="line">        sum[<span class="number">1</span>][<span class="number">2</span> * i] = tmp - sum[<span class="number">3</span>][(i - <span class="number">1</span>) * <span class="number">2</span>];</span><br><span class="line">        tmp *= <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; ++i)</span><br><span class="line">        sum[<span class="number">1</span>][i * <span class="number">2</span> + <span class="number">1</span>] = sum[<span class="number">1</span>][i * <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A -&gt; C</span></span><br><span class="line">    sum[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    sum[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">    sum[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">30</span>; ++i) &#123;</span><br><span class="line">        sum[<span class="number">2</span>][<span class="number">2</span> * i] = sum[<span class="number">2</span>][<span class="number">2</span> * (i - <span class="number">1</span>)] * <span class="number">4</span> - (<span class="number">2</span> * (i - <span class="number">1</span>) - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">30</span>; ++i)</span><br><span class="line">        sum[<span class="number">2</span>][<span class="number">2</span> * i - <span class="number">1</span>] = sum[<span class="number">2</span>][<span class="number">2</span> * i];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// C -&gt; A</span></span><br><span class="line"></span><br><span class="line">    sum[<span class="number">5</span>][<span class="number">1</span>] = sum[<span class="number">5</span>][<span class="number">2</span>] = sum[<span class="number">5</span>][<span class="number">3</span>] = <span class="number">0</span>;</span><br><span class="line">    sum[<span class="number">5</span>][<span class="number">4</span>] = sum[<span class="number">5</span>][<span class="number">5</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= <span class="number">30</span>; ++i)</span><br><span class="line">        sum[<span class="number">5</span>][i * <span class="number">2</span>] = sum[<span class="number">1</span>][i * <span class="number">2</span>] - i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; ++i)</span><br><span class="line">        sum[<span class="number">5</span>][<span class="number">2</span> * i + <span class="number">1</span>] = sum[<span class="number">5</span>][<span class="number">2</span> * i];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 总步数</span></span><br><span class="line">    sum[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">60</span>; ++i) sum[<span class="number">0</span>][i] = sum[<span class="number">0</span>][i - <span class="number">1</span>] * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A-&gt;B:%lld\n"</span></span><br><span class="line">           <span class="string">"A-&gt;C:%lld\n"</span></span><br><span class="line">           <span class="string">"B-&gt;A:%lld\n"</span></span><br><span class="line">           <span class="string">"B-&gt;C:%lld\n"</span></span><br><span class="line">           <span class="string">"C-&gt;A:%lld\n"</span></span><br><span class="line">           <span class="string">"C-&gt;B:%lld\n"</span></span><br><span class="line">           <span class="string">"SUM:%lld\n"</span>, sum[<span class="number">1</span>][n], sum[<span class="number">2</span>][n], sum[<span class="number">3</span>][n], sum[<span class="number">1</span>][n], sum[<span class="number">5</span>][n], sum[<span class="number">3</span>][n], sum[<span class="number">0</span>][n] - <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;汉诺塔， 伪代码为&lt;/p&gt;
&lt;figure class=&quot;highlight reasonml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Function &lt;span class=&quot;constructor&quot;&gt;Hanoi(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;b&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;c&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n==&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(a+&#39;-&amp;gt;&#39;+c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;constructor&quot;&gt;Hanoi(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;-1,&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;c&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;b&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(a+&#39;-&amp;gt;&#39;+c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;constructor&quot;&gt;Hanoi(&lt;span class=&quot;params&quot;&gt;n&lt;/span&gt;-1,&lt;span class=&quot;params&quot;&gt;b&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;,&lt;span class=&quot;params&quot;&gt;c&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; Function&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;统计以下信息：A-&amp;gt;B,A-&amp;gt;C,B-&amp;gt;A,B-&amp;gt;C,C-&amp;gt;A,C-&amp;gt;B的次数，以及所有移动的总步数。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://solodance.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="记忆化搜索" scheme="https://solodance.top/tags/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>C++ STL 中unique详解</title>
    <link href="https://solodance.top/2020/02/10/C++%20STL%20%E4%B8%ADunique%E8%AF%A6%E8%A7%A3/"/>
    <id>https://solodance.top/2020/02/10/C++%20STL%20%E4%B8%ADunique%E8%AF%A6%E8%A7%A3/</id>
    <published>2020-02-10T03:17:34.220Z</published>
    <updated>2020-02-10T03:17:05.653Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-概念"><a href="#一-概念" class="headerlink" title="一. 概念"></a>一. 概念</h2><p>unique的作用是去重。即<strong>“删除”序列中重复的相邻元素</strong>， 此处的删除不是真正的删除， 而是让不重复元素替换掉重复元素所在的位置。由于它是”删除”相邻的元素， 所以在使用<code>unique</code>之前， 一般要给序列排序。</p><a id="more"></a><h2 id="二-函数原型"><a href="#二-函数原型" class="headerlink" title="二. 函数原型"></a>二. 函数原型</h2><ol><li>只有两个参数且都是迭代器。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">iterator <span class="title">unique</span><span class="params">(iterator it_1,iterator it_2)</span></span>;</span><br></pre></td></tr></table></figure><p>这种类型的unique函数是我们最常用的形式。其中这两个参数表示对容器中[it_1，it_2)范围的元素进行去重(注：区间是<strong>前闭后开</strong>，即不包含it_2所指的元素),返回值是一个迭代器，它指向的是<strong>去重后容器中不重复序列的最后一个元素的下一个元素</strong>。</p><ol start="2"><li>有三个参数， 除了两个迭代器之外还有个自定义函数。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">iterator <span class="title">unique</span><span class="params">(iterator it_1,iterator it_2,<span class="keyword">bool</span> MyFunc)</span></span>;</span><br></pre></td></tr></table></figure><p>第三个参数是自定义元素相等。关于第三个参数的介绍， 可参考<a href="http://www.cplusplus.com/reference/algorithm/unique/" target="_blank" rel="noopener">http://www.cplusplus.com/reference/algorithm/unique/</a></p><h2 id="三-用法实例"><a href="#三-用法实例" class="headerlink" title="三. 用法实例"></a>三. 用法实例</h2><p>上面介绍了unique函数的功能和原型，那么，它到底是如何进行去重的呢？即“删除”的具体操作是怎样的呢？</p><p>关于这个问题，<a href="http://www.cplusplus.com/reference/algorithm/unique/" target="_blank" rel="noopener">http://www.cplusplus.com/reference/algorithm/unique/</a>给了我们一种解释，即unique函数是完全等价于下面这个函数的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">iterator <span class="title">My_Unique</span> <span class="params">(iterator first, iterator last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (first==last) <span class="keyword">return</span> last;</span><br><span class="line"> </span><br><span class="line">  iterator result = first;</span><br><span class="line">  <span class="keyword">while</span> (++first != last)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (!(*result == *first)) </span><br><span class="line">      *(++result)=*first;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ++result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析这段代码，我们可以知道，unique函数的去重过程实际上就是不停的把<strong>后面不重复的元素移到前面来</strong>，也可以说是用不重复的元素占领重复元素的位置。</p><h2 id="四-注"><a href="#四-注" class="headerlink" title="四. 注"></a>四. 注</h2><ol><li><p>有很多文章说的是，unique去重的过程是将重复的元素移到容器的后面去，实际上这种说法并不正确，应该是把不重复的元素移到前面来。</p></li><li><p>一定不要忘记的是，unique函数在使用前需要对容器中的元素进行排序(当然不是必须的，但我们绝大数情况下需要这么做)。</p></li><li><p>unique函数通常和erase函数一起使用，来达到删除重复元素的目的。</p></li></ol><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-概念&quot;&gt;&lt;a href=&quot;#一-概念&quot; class=&quot;headerlink&quot; title=&quot;一. 概念&quot;&gt;&lt;/a&gt;一. 概念&lt;/h2&gt;&lt;p&gt;unique的作用是去重。即&lt;strong&gt;“删除”序列中重复的相邻元素&lt;/strong&gt;， 此处的删除不是真正的删除， 而是让不重复元素替换掉重复元素所在的位置。由于它是”删除”相邻的元素， 所以在使用&lt;code&gt;unique&lt;/code&gt;之前， 一般要给序列排序。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://solodance.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="stl" scheme="https://solodance.top/tags/stl/"/>
    
      <category term="unique" scheme="https://solodance.top/tags/unique/"/>
    
  </entry>
  
  <entry>
    <title>2020牛客寒假算法基础集训营1_F maki和tree（并查集）</title>
    <link href="https://solodance.top/2020/02/08/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A51_F%20maki%E5%92%8Ctree%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/"/>
    <id>https://solodance.top/2020/02/08/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A51_F%20maki%E5%92%8Ctree%EF%BC%88%E5%B9%B6%E6%9F%A5%E9%9B%86%EF%BC%89/</id>
    <published>2020-02-08T11:14:52.720Z</published>
    <updated>2020-02-08T11:14:36.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://ac.nowcoder.com/acm/contest/3002/F" target="_blank" rel="noopener">题目链接</a></p><p>给你一颗n个节点的树， 每个节点有黑白两种颜色， 问有多少条不同的简单路径， 恰好只经过一个黑点。</p><p>注： 1. <code>&lt;u, v&gt;</code> 和 <code>&lt;v, u&gt;</code> 视为相同取法。<br>2. 简单路径为两点的最短路。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>两种情况， 一种是以黑点为端点， 另一种黑点不为端点。</p><p>可以先求出白点连通块以及每个连通块的点的数量<code>sum[cnt]</code>。</p><p>然后，以黑点为端点的情况是 <code>ans += sum[i] | 1 &lt;= i &lt;= cnt</code>， 黑点不为端点的情况<code>ans += sum[i] * sum[j] | 1 &lt;= i &lt;= cnt | i + 1 &lt;= j &lt;= cnt</code>。<br>第二种情况可以考虑用前缀和， 用<code>O(cnt)</code>求出。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line">ll sum[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">tofind</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (f[x] != x) f[x] = tofind(f[x]);</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">tojoin</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    a = tofind(a), b = tofind(b);</span><br><span class="line">    <span class="keyword">if</span> (a != b) &#123;</span><br><span class="line">        f[a] = b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ve[N];</span><br><span class="line"><span class="keyword">int</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) f[i] = i;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        a = read(), b = read();</span><br><span class="line">        ve[a].push_back(b);</span><br><span class="line">        ve[b].push_back(a);</span><br><span class="line">        <span class="keyword">if</span> (s[a - <span class="number">1</span>] == s[b - <span class="number">1</span>] &amp;&amp; s[a - <span class="number">1</span>] == <span class="string">'W'</span>) tojoin(a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) ++sum[tofind(i)];</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; tmp;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt; ms;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">'B'</span>) &#123;</span><br><span class="line">            tmp.clear();</span><br><span class="line">            ms.clear();</span><br><span class="line">            ms(vis, <span class="number">0</span>);</span><br><span class="line">            ms.push_back(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> c : ve[i + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[c - <span class="number">1</span>] == <span class="string">'W'</span>) &#123;</span><br><span class="line">                    <span class="keyword">int</span> x = tofind(c);</span><br><span class="line">                    <span class="keyword">if</span> (!vis[x]) &#123;</span><br><span class="line">                        tmp.push_back(sum[x]);</span><br><span class="line">                        ms.push_back(ms.back() + sum[x]);</span><br><span class="line">                        vis[x] = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; tmp.size(); ++j)&#123;</span><br><span class="line">                ans += tmp[j];</span><br><span class="line">                ans += tmp[j] * (ms.back() - ms[j + <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/3002/F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;给你一颗n个节点的树， 每个节点有黑白两种颜色， 问有多少条不同的简单路径， 恰好只经过一个黑点。&lt;/p&gt;
&lt;p&gt;注： 1. &lt;code&gt;&amp;lt;u, v&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;v, u&amp;gt;&lt;/code&gt; 视为相同取法。&lt;br&gt;2. 简单路径为两点的最短路。&lt;/p&gt;
    
    </summary>
    
    
      <category term="图论" scheme="https://solodance.top/categories/%E5%9B%BE%E8%AE%BA/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="连通块" scheme="https://solodance.top/tags/%E8%BF%9E%E9%80%9A%E5%9D%97/"/>
    
      <category term="并查集" scheme="https://solodance.top/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>2020牛客寒假算法基础集训营2_H 施魔法（dp）</title>
    <link href="https://solodance.top/2020/02/07/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A52_H%20%E6%96%BD%E9%AD%94%E6%B3%95%EF%BC%88dp%EF%BC%89/"/>
    <id>https://solodance.top/2020/02/07/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A52_H%20%E6%96%BD%E9%AD%94%E6%B3%95%EF%BC%88dp%EF%BC%89/</id>
    <published>2020-02-07T06:57:35.224Z</published>
    <updated>2020-02-07T06:57:14.546Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://ac.nowcoder.com/acm/contest/3003/H" target="_blank" rel="noopener">题目链接</a></p><p>有n个元素（1-n）， 第i个元素能量值为ai， 可以选择至少k的元素施法， 消耗为选择的k个元素所组成的极值的差，每个元素当且仅当被用1次的最小消耗，</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>首先排序。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f[<span class="built_in">i</span>] 表示使用前<span class="built_in">i</span>（包括第<span class="built_in">i</span>）个元素的最小消耗</span><br></pre></td></tr></table></figure><p><img src="http://imglf4.nosdn0.126.net/img/T0t4Z3Z5a254aFJKOUVEQVhXZzJEL0xwNkM0RzYzcHNFaW9yNmkxVFBjdUZ2Zmk1TU8zWERnPT0.png" alt="1"></p><p>然后维护<code>min(f[j - 1] - a[j])</code> 即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll f[N], a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read(), k = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = read();</span><br><span class="line">    sort(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line">    ms(f, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; k; ++i) f[i] = INF;</span><br><span class="line">    ll tmp = INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k; i &lt;= n; ++i) &#123;</span><br><span class="line">        tmp = min(tmp, f[i - k] - a[i - k + <span class="number">1</span>]);</span><br><span class="line">        f[i] = tmp + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; f[n] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/3003/H&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有n个元素（1-n）， 第i个元素能量值为ai， 可以选择至少k的元素施法， 消耗为选择的k个元素所组成的极值的差，每个元素当且仅当被用1次的最小消耗，&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="dp" scheme="https://solodance.top/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>2020牛客寒假算法基础集训营2_F 拿物品（贪心）</title>
    <link href="https://solodance.top/2020/02/07/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A52_F%20%E6%8B%BF%E7%89%A9%E5%93%81%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/"/>
    <id>https://solodance.top/2020/02/07/2020%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A52_F%20%E6%8B%BF%E7%89%A9%E5%93%81%EF%BC%88%E8%B4%AA%E5%BF%83%EF%BC%89/</id>
    <published>2020-02-07T04:58:39.331Z</published>
    <updated>2020-02-07T05:12:35.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://ac.nowcoder.com/acm/contest/3003/F" target="_blank" rel="noopener">题目链接</a></p><p>有n个物品， 每个物品有a，b两个属性， A， B两人一人一次拿一个（A获得a属性， B获得b属性）， A先拿， 求A如何拿能使 sumA - sumB越大， B如何拿能使 sumB - sumA越大， 求出最优策略下， A， B分别拿哪些物品。</p><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>贪心， 比赛的时候试了两个策略不对（这两个策略是我猜的）， 没有找到理论依据。</p><p>假设A拿B的物品1， B拿A的物品2</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sumA<span class="string">' = sumA - a2 + a1</span></span><br><span class="line"><span class="string">sumB'</span> = sumB - <span class="keyword">b1 </span>+ <span class="keyword">b2</span></span><br><span class="line"><span class="keyword">使得sumA' </span>- sumB<span class="string">' &gt;= sumA - sumB</span></span><br><span class="line"><span class="string">sumA - a2 + a1 + b1 - b2 - sumB &gt;= sumA - sumB</span></span><br><span class="line"><span class="string">a1 + b1 &gt;= a2 + b2</span></span><br></pre></td></tr></table></figure><p>所以对A来说， 要拿<code>a+b</code>大的， 同理对B来说， 也是要<code>a+b</code>大的。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">power by Solo_Dance</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b, id;</span><br><span class="line">&#125; x[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.a + a.b &gt; b.b + b.a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) x[i].a = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) x[i].b = read(), x[i].id = i + <span class="number">1</span>;</span><br><span class="line">    sort(x, x + n, cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; x[i].id &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i += <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; x[i].id &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/3003/F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有n个物品， 每个物品有a，b两个属性， A， B两人一人一次拿一个（A获得a属性， B获得b属性）， A先拿， 求A如何拿能使 sumA - sumB越大， B如何拿能使 sumB - sumA越大， 求出最优策略下， A， B分别拿哪些物品。&lt;/p&gt;
    
    </summary>
    
    
      <category term="贪心" scheme="https://solodance.top/categories/%E8%B4%AA%E5%BF%83/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="贪心" scheme="https://solodance.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>HYSBZ - 1098 bzoj - 1098 办公楼biu</title>
    <link href="https://solodance.top/2020/01/31/HYSBZ%20-%201098%20bzoj%20-%201098%20%E5%8A%9E%E5%85%AC%E6%A5%BCbiu/"/>
    <id>https://solodance.top/2020/01/31/HYSBZ%20-%201098%20bzoj%20-%201098%20%E5%8A%9E%E5%85%AC%E6%A5%BCbiu/</id>
    <published>2020-01-31T11:05:00.853Z</published>
    <updated>2020-01-31T11:04:53.715Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p><a href="https://vjudge.net/problem/HYSBZ-1098" target="_blank" rel="noopener">题目链接</a></p><p>求补图连通块的个数以及各个连通块的大小。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>参照了<a href="https://blog.csdn.net/ww140142/article/details/49025519" target="_blank" rel="noopener">ww140142</a>的做法。</p><p>每次枚举一个未在连通块的点，然后从它开始宽搜出它所在的连通块；</p><p>具体是枚举它的所有原图的边，标记起来，枚举边之后再枚举所有的点，将未标记的点加入该连通块，并加入队列继续宽搜；</p><p>为了节约无用的枚举，我们还需要对所有点构建链表，将已经在某个块内的点删除；</p><p>这个算法的复杂度是O(n+m)的；</p><p>原因是每一个点仅进行了一次宽搜的拓展；</p><p>并且在每次拓展中，枚举边表总复杂度是O(m)；</p><p>而之后的枚举剩下的点，我们将点分为两部分：已标记的点的复杂度计在O(m)之内，而未标记的点将会被加入队列，这个过程对每个点也仅有一次；</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, cnt, u, v, lst[N], nxt[N], vis[N], ans[N];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ve[N]; <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; nxt[lst[x]] = nxt[x]; lst[nxt[x]] = lst[x]; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;v), ve[u].push_back(v), ve[v].push_back(u);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) lst[i + <span class="number">1</span>] = i, nxt[i] = i + <span class="number">1</span>;</span><br><span class="line">    nxt[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (vis[i]) <span class="keyword">continue</span>;</span><br><span class="line">        ans[++cnt] = vis[i] = <span class="number">1</span>; q.push(i);del(i);</span><br><span class="line">        <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">            <span class="keyword">int</span> u = q.front();q.pop();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ve[u].size(); ++j) <span class="keyword">if</span> (!vis[ve[u][j]]) vis[ve[u][j]] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = nxt[<span class="number">0</span>]; j; j = nxt[j])</span><br><span class="line">                <span class="keyword">if</span> (!vis[j]) &#123;vis[j] = <span class="number">1</span>;++ans[cnt];del(j);q.push(j);&#125;</span><br><span class="line">                <span class="keyword">else</span> vis[j] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ans + <span class="number">1</span>, ans + <span class="number">1</span> + cnt);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; cnt; ++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>, ans[i]); <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[cnt]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;solve();<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="后继"><a href="#后继" class="headerlink" title="后继"></a>后继</h2><p>相关题目</p><p><a href="https://vjudge.net/problem/CodeForces-920E" target="_blank" rel="noopener">CodeForces - 920E</a></p><p><a href="https://vjudge.net/problem/CodeForces-1242B" target="_blank" rel="noopener">CodeForces-1242B</a></p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://vjudge.net/problem/HYSBZ-1098&quot; target=&quot;_blank
      
    
    </summary>
    
    
      <category term="模板题" scheme="https://solodance.top/categories/%E6%A8%A1%E6%9D%BF%E9%A2%98/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="补图" scheme="https://solodance.top/tags/%E8%A1%A5%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>SDNU_ACM_ICPC_2020_Winter_Practice_3rd【解题报告】</title>
    <link href="https://solodance.top/2020/01/31/SDNU_ACM_ICPC_2020_Winter_Practice_3rd%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/"/>
    <id>https://solodance.top/2020/01/31/SDNU_ACM_ICPC_2020_Winter_Practice_3rd%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/</id>
    <published>2020-01-31T08:05:44.317Z</published>
    <updated>2020-01-31T08:05:22.951Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎评论提问， 纠错</p><p>文章篇幅较长， 请参考右侧<strong>文章目录</strong>食用。</p><p>专题链接： <a href="https://vjudge.net/contest/354344" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_3rd</a></p><a id="more"></a><h2 id="A-HDU-1364-lzwの玩耍"><a href="#A-HDU-1364-lzwの玩耍" class="headerlink" title="A HDU 1364 lzwの玩耍"></a>A HDU 1364 lzwの玩耍</h2><h3 id="1-题目大意"><a href="#1-题目大意" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>题意超级超级超级恶心。！！！！</p><p>大意就是， 给你一个01 图， 问机器人能从那些点开始， 进行一系列操作之后， 不撞墙也不跑出图， 问开始点的个数。</p><h3 id="2-分析"><a href="#2-分析" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>dfs暴力暴力！！</p><h3 id="3-AC代码"><a href="#3-AC代码" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ma[<span class="number">102</span>][<span class="number">102</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> x1, x2;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">&#125; a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> cntt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> cnt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cnt == cntt) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (a[cnt].c == <span class="string">'R'</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a[cnt].x1; ++i)</span><br><span class="line">            <span class="keyword">if</span> (y + i &gt;= m || ma[x][y + i]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = a[cnt].x1; i &lt;= a[cnt].x2; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (y + i &gt;= m || ma[x][y + i]) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (dfs(x, y + i, cnt + <span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[cnt].c == <span class="string">'L'</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a[cnt].x1; ++i)</span><br><span class="line">            <span class="keyword">if</span> (y - i &lt; <span class="number">0</span> || ma[x][y - i]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = a[cnt].x1; i &lt;= a[cnt].x2; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (y - i &lt; <span class="number">0</span> || ma[x][y - i]) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (dfs(x, y - i, cnt + <span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[cnt].c == <span class="string">'U'</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a[cnt].x1; ++i)</span><br><span class="line">            <span class="keyword">if</span> (x - i &lt; <span class="number">0</span> || ma[x - i][y]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = a[cnt].x1; i &lt;= a[cnt].x2; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x - i &lt; <span class="number">0</span> || ma[x - i][y]) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (dfs(x - i, y, cnt + <span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[cnt].c == <span class="string">'D'</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a[cnt].x1; ++i)</span><br><span class="line">            <span class="keyword">if</span> (x + i &gt;= n || ma[x + i][y]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = a[cnt].x1; i &lt;= a[cnt].x2; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x + i &gt;= n || ma[x + i][y]) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (dfs(x + i, y, cnt + <span class="number">1</span>)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t, x, y;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        cntt = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j) &#123;</span><br><span class="line">                <span class="built_in">cin</span> &gt;&gt; ma[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class="line">            <span class="keyword">if</span> (!x &amp;&amp; !y) <span class="keyword">break</span>;</span><br><span class="line">            a[cntt].x1 = x;</span><br><span class="line">            a[cntt].x2 = y;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a[cntt++].c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!ma[i][j] &amp;&amp; dfs(i, j, <span class="number">0</span>)) ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继"><a href="#4-后继" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>读题能力有待提升QAQ。</li></ol><h2 id="B-CodeForces-1242B-lzwの作业"><a href="#B-CodeForces-1242B-lzwの作业" class="headerlink" title="B CodeForces 1242B lzwの作业"></a>B CodeForces 1242B lzwの作业</h2><h3 id="1-题目大意-1"><a href="#1-题目大意-1" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>完全图， 给出权值为1的边， 其余边都是0， 求最小生成树。</p><h3 id="2-分析-1"><a href="#2-分析-1" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>求补图连通块的个数-1。</p><p>待补~</p><p>先贴上一个题解 <a href="https://www.cnblogs.com/NaVi-Awson/p/11823608.html" target="_blank" rel="noopener">Codeforces 1242B0-1 MST</a></p><h2 id="C-UVA-12879-lzwの高尔夫"><a href="#C-UVA-12879-lzwの高尔夫" class="headerlink" title="C UVA 12879 lzwの高尔夫"></a>C UVA 12879 lzwの高尔夫</h2><h3 id="1-题目大意-2"><a href="#1-题目大意-2" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>先给你n个能行走的距离， 再给你m个距离， 问最多走两次（不能向回走）能走到的数量。</p><h3 id="2-分析-2"><a href="#2-分析-2" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>看着有求卷积， 还有个位运算， 卷积不先搞， 位运算看不懂。</p><p><a href="https://blog.csdn.net/u014137295/article/details/90372754" target="_blank" rel="noopener">卷积</a></p><p><a href="https://www.cnblogs.com/tigerisland/p/10229534.html" target="_blank" rel="noopener">位运算</a></p><p>待补~</p><h2 id="D-UVA-806-lzwの图片"><a href="#D-UVA-806-lzwの图片" class="headerlink" title="D UVA 806    lzwの图片"></a>D UVA 806    lzwの图片</h2><p>待补~</p><h2 id="E-CodeForces-489C-lzwの数值"><a href="#E-CodeForces-489C-lzwの数值" class="headerlink" title="E CodeForces 489C lzwの数值"></a>E CodeForces 489C lzwの数值</h2><h3 id="1-题目大意-3"><a href="#1-题目大意-3" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个数的位数n， 和所有位数的和s，输出满足要求的最小的数和最大的数。没有输出-1 -1</p><h3 id="2-分析-3"><a href="#2-分析-3" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>水题<br>先说3种特殊情况</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">1</span> &amp;&amp; s = <span class="number">0</span>  答案 <span class="number">0</span> <span class="number">0</span></span><br><span class="line">n &gt; <span class="number">1</span> &amp;&amp; s = <span class="number">0</span>  答案 <span class="number">-1</span> <span class="number">-1</span></span><br><span class="line">n * <span class="number">9</span> &lt; s       答案 <span class="number">-1</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><p>最小值就是先确定首位是1， 从末尾开始向前， 每个都补9， 不足9补剩下的， 全补完了还有剩的加在首位。<br>最大值就是从前向后， 每个都补9 ， 不足9补剩下的</p><h3 id="3-AC代码-1"><a href="#3-AC代码-1" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span> &amp;&amp; m == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0 0"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!m || n * <span class="number">9</span> &lt; m)&#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1 -1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> s1 = m;</span><br><span class="line">    a[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    s1 -= a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= <span class="number">2</span>; --i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s1 &gt;= <span class="number">9</span>)&#123;</span><br><span class="line">            a[i] = <span class="number">9</span>;</span><br><span class="line">            s1 -= <span class="number">9</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            a[i] = s1;</span><br><span class="line">            s1 = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        cout &lt;&lt; s1 &lt;&lt; "\n";</span></span><br><span class="line">    &#125;</span><br><span class="line">    a[<span class="number">1</span>] += s1;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a[i];</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">    s1 = m;</span><br><span class="line">    ms(a, <span class="number">0</span>);</span><br><span class="line">    a[<span class="number">1</span>] = min(<span class="number">9</span>, s1);</span><br><span class="line">    s1 -= a[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s1 &gt;= <span class="number">9</span>)&#123;</span><br><span class="line">            a[i] = <span class="number">9</span>;</span><br><span class="line">            s1 -= <span class="number">9</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            a[i] = s1;</span><br><span class="line">            s1 = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a[i];</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-1"><a href="#4-后继-1" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>当时忘了 n = 1 s = 0 的情况， wa了一发，。。</li></ol><h2 id="F-POJ-1364-lzwの王座"><a href="#F-POJ-1364-lzwの王座" class="headerlink" title="F POJ 1364 lzwの王座"></a>F POJ 1364 lzwの王座</h2><h3 id="1-题目大意-4"><a href="#1-题目大意-4" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>题意巨巨巨巨巨巨巨恶心， 翻译都看不懂题意， 只能看题解才知道的题意，英语好差QAQ</p><p>输入4个东东， si, ni, oi, ki， 即  <code>a[si] + ... + a[si + ni] &gt; ki || a[si] + ... + a[si + ni] &lt; ki</code> ， oi是gt为大于， lt为小于。</p><h3 id="2-分析-4"><a href="#2-分析-4" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>差分约束， spfa判负环即可， 因为可能不连通需要一个超级源点。</p><h3 id="3-AC代码-2"><a href="#3-AC代码-2" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, w, ne;</span><br><span class="line">&#125; ed[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[N], vis[N], dis[N];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="keyword">int</span> tim[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ms(head, <span class="number">-1</span>);</span><br><span class="line">    ms(vis, <span class="number">0</span>);</span><br><span class="line">    ms(dis, INF);</span><br><span class="line">    ms(tim, <span class="number">0</span>);</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    ed[cnt] = &#123;v, w, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    q.push(u);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        u = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        vis[u] = <span class="number">0</span>;</span><br><span class="line">        tim[u]++;</span><br><span class="line">        <span class="keyword">if</span> (tim[u] &gt; n + <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 注意这里是大于点的个数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                <span class="keyword">if</span> (!vis[v])&#123;</span><br><span class="line">                    q.push(v), vis[v] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b, d;</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n) &#123;</span><br><span class="line">        m = read();</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">            a = read(), b = read();</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, c);</span><br><span class="line">            d = read();</span><br><span class="line">            <span class="keyword">if</span> (c[<span class="number">0</span>] == <span class="string">'g'</span>)</span><br><span class="line">                add(b + a, a - <span class="number">1</span>, - d - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c[<span class="number">0</span>] == <span class="string">'l'</span>) add(a - <span class="number">1</span>, b + a, d - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            add(n + <span class="number">1</span>, i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (spfa(n + <span class="number">1</span>)) <span class="built_in">puts</span>(<span class="string">"lamentable kingdom"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"successful conspiracy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-2"><a href="#4-后继-2" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>超级恶心恶心恶心的题意呜呜呜了。</li></ol><h2 id="G-CodeForces-787D-lzwの穿越"><a href="#G-CodeForces-787D-lzwの穿越" class="headerlink" title="G CodeForces 787D lzwの穿越"></a>G CodeForces 787D lzwの穿越</h2><h3 id="1-题目大意-5"><a href="#1-题目大意-5" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你3种操作。</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. 给你一条 <span class="function"><span class="title">u</span>-&gt;</span>v的单向边</span><br><span class="line"><span class="number">2</span>. 给你<span class="function"><span class="title">v</span> -&gt;</span> [l, r]的单向边</span><br><span class="line"><span class="number">3</span>. 给你 [<span class="function"><span class="title">l</span>, r] -&gt;</span> v 的单向边</span><br></pre></td></tr></table></figure><p>求s到t的最短路</p><h3 id="2-分析-5"><a href="#2-分析-5" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>线段树建图+最短路</p><p>待补</p><h2 id="H-UVA-12118-lzwの交通"><a href="#H-UVA-12118-lzwの交通" class="headerlink" title="H UVA 12118 lzwの交通"></a>H UVA 12118 lzwの交通</h2><h3 id="1-题目大意-6"><a href="#1-题目大意-6" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个n个点的完全图，每条边的长度都为t，  再给你m条边， 求经过这m条边的最短路， 起点任意。</p><h3 id="2-分析-6"><a href="#2-分析-6" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>经过m条边的最短路， 这样想到了欧拉路， 把每个连通块补成欧拉路， 然后把两连通块用一条边相连，每个连通块奇度顶点的数肯定为偶数， 欧拉路要求奇度顶点个数为2 或者0， 所以需要补边数为<code>max(0, (sum - 2) / 2)</code>， 两个奇度顶点用一条边。</p><h3 id="3-AC代码-3"><a href="#3-AC代码-3" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, t, a, b, cnt;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ve[<span class="number">1003</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans, vis[<span class="number">1003</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ve[x].size() &amp; <span class="number">1</span>) ans += <span class="number">1</span>;</span><br><span class="line">    vis[x] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> c : ve[x])&#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[c]) dfs(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;t))&#123;</span><br><span class="line">        <span class="keyword">if</span> (!n &amp;&amp; !m &amp;&amp; !t) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            ve[i].clear();</span><br><span class="line">            vis[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            a = read(), b = read();</span><br><span class="line">            ve[a].push_back(b);</span><br><span class="line">            ve[b].push_back(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="comment">// 对每个连通块求需要的边数</span></span><br><span class="line">            <span class="keyword">if</span> (!ve[i].empty() &amp;&amp; !vis[i])&#123;</span><br><span class="line">                ans = <span class="number">0</span>;</span><br><span class="line">                dfs(i);</span><br><span class="line">                <span class="comment">// +1 是因为 n个连通块需要n - 1条边， 所以我为每个连通块都加1</span></span><br><span class="line">                res += max(<span class="number">0</span>, (ans - <span class="number">2</span>) / <span class="number">2</span>) + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 这个我万万没想到， 边数可以是0.。。。</span></span><br><span class="line">        <span class="keyword">if</span> (res) res--;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, ++cnt, (res + m) * t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-3"><a href="#4-后继-3" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>万万没想到， m可以为0 。。</li><li>一开始我想着直接把所有奇度顶点求出来直接计算不就好了嘛， 才发现，这样做最后的图可能是不连通滴！</li></ol><h2 id="I-CodeForces-479C-lzwの试炼"><a href="#I-CodeForces-479C-lzwの试炼" class="headerlink" title="I CodeForces 479C lzwの试炼"></a>I CodeForces 479C lzwの试炼</h2><h3 id="1-题目大意-7"><a href="#1-题目大意-7" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给出n组(a, b)， <code>b &lt; a</code>， a为出成绩的时间， a， b为可以参加考试的时间， 问怎么安排考试顺序能使得他尽早完成考试并且 出成绩的顺序和考试的顺序要一样。</p><h3 id="2-分析-7"><a href="#2-分析-7" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>水题， 结构体排序， 按照a从小到大排序， 如果a一样b从小到大排序， 初始化<code>last = 0</code> 每次取 (a , b)中小的切大于等于last的， 最后last就是答案。</p><h3 id="3-AC代码-4"><a href="#3-AC代码-4" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">&#125;m[<span class="number">5003</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.a != y.a)</span><br><span class="line">        <span class="keyword">return</span> x.a &lt; y.a;</span><br><span class="line">    <span class="keyword">return</span> x.b &lt; y.b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        m[i].a = read(), m[i].b = read();</span><br><span class="line">    &#125;</span><br><span class="line">    sort(m + <span class="number">1</span>, m + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="keyword">int</span> last = min(m[<span class="number">1</span>].a, m[<span class="number">1</span>].b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (m[i].b &gt;= last)</span><br><span class="line">            last = m[i].b;</span><br><span class="line">        <span class="keyword">else</span> last = m[i].a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; last &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-4"><a href="#4-后继-4" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>没按b从小到大排序， wa了一发， 呜呜呜</li></ol><h2 id="J-UVA-10410-lzwの建造"><a href="#J-UVA-10410-lzwの建造" class="headerlink" title="J UVA 10410 lzwの建造"></a>J UVA 10410 lzwの建造</h2><h3 id="1-题目大意-8"><a href="#1-题目大意-8" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你树节点的个数以及 bfs和dfs的遍历顺序， 每一层先遍历节点编号小的。</p><h3 id="2-分析-8"><a href="#2-分析-8" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>通过bfs可以知道每个节点到根结点的距离。<br>遍历dfs， 可以发现， 如果<strong>后面节点的到根结点的距离</strong>大于<strong>前面节点到根结点的距离</strong>， 那么后面节点就是前面节点的子节点， 有个特殊情况就是 <strong>后面节点的到根结点的距离</strong>等于<strong>前面节点到根结点的距离</strong>， 那么说明这两个节点就是同级节点。所以上面的描述换为  如果<strong>后面节点的到根结点的距离</strong>大于<strong>前面节点到根结点的距离 + 1</strong>， 那么后面节点就是前面节点的子节点。 否则， 在 和前面节点的前面节点比较， …</p><p>看出来了， 咱们用栈处理比较好。</p><h3 id="3-AC代码-5"><a href="#3-AC代码-5" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">bool</span> f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123;</span><br><span class="line">        res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~res + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> bs[<span class="number">1003</span>], ds[<span class="number">1003</span>], st[<span class="number">1003</span>];</span><br><span class="line"><span class="keyword">int</span> n, x;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ve[<span class="number">1003</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n))&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            bs[read()] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            ds[i] = read();</span><br><span class="line">        <span class="keyword">int</span> po = <span class="number">1</span>;</span><br><span class="line">        st[po] = ds[<span class="number">1</span>];</span><br><span class="line">        st[++po] = ds[<span class="number">2</span>];</span><br><span class="line">        ve[ds[<span class="number">1</span>]].push_back(ds[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">while</span>(cnt &lt;= n)&#123;</span><br><span class="line">            <span class="keyword">if</span> (bs[ds[cnt]] &gt; bs[st[po]] + <span class="number">1</span>)&#123;</span><br><span class="line">                ve[st[po]].push_back(ds[cnt]);</span><br><span class="line">                st[++po] = ds[cnt];</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> po--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">": "</span>;</span><br><span class="line">            <span class="keyword">if</span> (!ve[i].empty())&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ve[i].size() - <span class="number">1</span>; ++j)&#123;</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; ve[i][j] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; ve[i].back();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">            ve[i].clear();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-5"><a href="#4-后继-5" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>比赛的时候前面思想都想到了， 就是没想到用栈处理， 难受qaq</li></ol><h2 id="K-HYSBZ-1036-lzwの树"><a href="#K-HYSBZ-1036-lzwの树" class="headerlink" title="K HYSBZ 1036    lzwの树"></a>K HYSBZ 1036    lzwの树</h2><h3 id="1-题目大意-9"><a href="#1-题目大意-9" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>一棵树上有n个节点，编号分别为1到n，每个节点都有一个权值w。我们将以下面的形式来要求你对这棵树完成一些操作：<br>I. CHANGE u t : 把结点u的权值改为t<br>II. QMAX u v: 询问从点u到点v的路径上的节点的最大权值<br>III. QSUM u v: 询问从点u到点v的路径上的节点的权值和<br>注意：从点u到点v的路径上的节点包括u和v本身</p><h3 id="2-分析-9"><a href="#2-分析-9" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>树剖裸题？ 待补~</p><h2 id="L-HYSBZ-1935-lzwの花园"><a href="#L-HYSBZ-1935-lzwの花园" class="headerlink" title="L HYSBZ 1935    lzwの花园"></a>L HYSBZ 1935    lzwの花园</h2><h3 id="1-题目大意-10"><a href="#1-题目大意-10" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>第一行有两个整数n，m（0≤n≤500000，1≤m≤500000）。n代表的树木的总数，m代表询问的次数。 接下来的n行，每行都有两个整数xi，yi，代表第i棵树的坐标（0≤xi，yi≤10000000）。 最后m行，每行都有四个整数aj，bj，cj，dj，表示第j次询问，其中所问的矩形以（aj，bj）为左下坐标，以（cj，dj）为右上坐标。 输出每次询问矩形内树木的数量。</p><h3 id="2-分析-10"><a href="#2-分析-10" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>待补。</p><h2 id="M-CodeForces-50A-lzwの广场"><a href="#M-CodeForces-50A-lzwの广场" class="headerlink" title="M CodeForces 50A lzwの广场"></a>M CodeForces 50A lzwの广场</h2><h3 id="1-题目大意-11"><a href="#1-题目大意-11" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个矩形长宽， 问最多能放下多少个 <code>1 * 2 或者 2 * 1</code> 的矩阵。</p><h3 id="2-分析-11"><a href="#2-分析-11" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>水题， 先求最多能放多少 1 * 2 的， 最后可能会剩一列， 都放 2 * 1的</p><h3 id="3-AC代码-6"><a href="#3-AC代码-6" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof(a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll ll_max = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll res = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="number">0</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">'0'</span> || ch &gt; <span class="string">'9'</span>) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) f = <span class="number">1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt;= <span class="string">'9'</span> &amp;&amp; ch &gt;= <span class="string">'0'</span>) &#123; res = (res &lt;&lt; <span class="number">3</span>) + (res &lt;&lt; <span class="number">1</span>) + ch - <span class="string">'0'</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? (~ res  + <span class="number">1</span>) : res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    n = read(), m = read();</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    ans += m / <span class="number">2</span> * n;</span><br><span class="line">    <span class="keyword">if</span> (m &amp; <span class="number">1</span>)&#123;</span><br><span class="line">        ans += n / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎评论提问， 纠错&lt;/p&gt;
&lt;p&gt;文章篇幅较长， 请参考右侧&lt;strong&gt;文章目录&lt;/strong&gt;食用。&lt;/p&gt;
&lt;p&gt;专题链接： &lt;a href=&quot;https://vjudge.net/contest/354344&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_3rd&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://solodance.top/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
  </entry>
  
  <entry>
    <title>SDNU_ACM_ICPC_2020_Winter_Practice_2nd【解题报告】</title>
    <link href="https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_2nd%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/"/>
    <id>https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_2nd%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/</id>
    <published>2020-01-29T02:54:43.243Z</published>
    <updated>2020-01-29T03:10:30.172Z</updated>
    
    <content type="html"><![CDATA[<p>部分参照 <a href="https://blog.csdn.net/The___Flash/article/details/103939876" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_2nd【解题报告】– The__Flash</a>。<br>欢迎评论提问， 纠错</p><p>文章篇幅较长， 请参考右侧<strong>文章目录</strong>食用。</p><p>专题链接： <a href="https://vjudge.net/contest/352473" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_2nd</a></p><a id="more"></a><h2 id="A-HDU-1559-【The-Flash】的矩阵"><a href="#A-HDU-1559-【The-Flash】的矩阵" class="headerlink" title="A HDU 1559 【The__Flash】的矩阵"></a>A HDU 1559 【The__Flash】的矩阵</h2><h3 id="1-题目大意"><a href="#1-题目大意" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个<code>m×n</code>的整数矩阵，在上面找一个<code>x×y</code>的子矩阵，使子矩阵中所有元素的和最大。</p><h3 id="2-分析"><a href="#2-分析" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>一开始我以为是最大子矩阵和,  做了几个题回来发现就是个二维前缀和.</p><h3 id="3-AC代码"><a href="#3-AC代码" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1003</span>][<span class="number">1003</span>];</span><br><span class="line"><span class="keyword">int</span> m, n, x, y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    read(t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        read(m), read(n), read(x), read(y);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)&#123;</span><br><span class="line">                read(a[i][j]);</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span> &amp;&amp; j != <span class="number">0</span>)&#123;</span><br><span class="line">                    a[i][j] += a[i][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; j == <span class="number">0</span>)&#123;</span><br><span class="line">                    a[i][j] += a[i - <span class="number">1</span>][j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; j != <span class="number">0</span>)&#123;</span><br><span class="line">                    a[i][j] += a[i - <span class="number">1</span>][j] + a[i][j - <span class="number">1</span>] - a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>, temp;</span><br><span class="line">        x--, y--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - x; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - y; ++j)&#123;</span><br><span class="line">                temp = a[i + x][j + y];</span><br><span class="line">                <span class="keyword">if</span> (i)</span><br><span class="line">                    temp -= a[i - <span class="number">1</span>][j + y];</span><br><span class="line">                <span class="keyword">if</span> (j)</span><br><span class="line">                    temp -= a[i + x][j - <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (i &amp;&amp; j)</span><br><span class="line">                    temp += a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                ans = max(ans, temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-HDU-3790-【The-Flash】的疑惑"><a href="#B-HDU-3790-【The-Flash】的疑惑" class="headerlink" title="B HDU 3790 【The__Flash】的疑惑"></a>B HDU 3790 【The__Flash】的疑惑</h2><h3 id="1-题目大意-1"><a href="#1-题目大意-1" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你n个点，m条无向边，每条边都有长度d和花费p，给你起点s终点t，要求输出起点到终点的最短距离及其花费，如果最短距离有多条路线，则输出花费最少的。</p><h3 id="2-分析-1"><a href="#2-分析-1" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>就是个最短路, 需要维护两个东西, 最短距离和花费.</p><h3 id="3-AC代码-1"><a href="#3-AC代码-1" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, w, c, ne;</span><br><span class="line">&#125;ed[<span class="number">200005</span>];</span><br><span class="line"><span class="keyword">int</span> head[N], dis[N], dis1[N], vis[N], cnt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ms(head, <span class="number">-1</span>);</span><br><span class="line">    ms(dis, INF);</span><br><span class="line">    ms(dis1, INF);</span><br><span class="line">    ms(vis, <span class="number">0</span>);</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w, <span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    ed[cnt] = &#123;v, w, c, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    dis1[u] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, u));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">         u = q.top().second;</span><br><span class="line">         q.pop();</span><br><span class="line">         <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">         vis[u] = <span class="number">1</span>;</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">             <span class="keyword">int</span> v = ed[i].v, w = ed[i].w, c = ed[i].c;</span><br><span class="line">             <span class="comment">// 维护dis 和 dis1</span></span><br><span class="line">             <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                 dis[v] = dis[u] + w;</span><br><span class="line">                 dis1[v] = dis1[u] + c;</span><br><span class="line">                 q.push(P(dis[v], v));</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span> <span class="keyword">if</span> (dis[v] == dis[u] + w)&#123;</span><br><span class="line">                 dis1[v] = min(dis1[v], dis1[u] + c);</span><br><span class="line">                 q.push(P(dis[v], v));</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, u, v, w, c, s, t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m))&#123;</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="number">0</span> &amp;&amp; n == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)&#123;</span><br><span class="line">            read(u), read(v), read(w), read(c);</span><br><span class="line">            add(u, v, w, c);</span><br><span class="line">            add(v, u, w, c);</span><br><span class="line">        &#125;</span><br><span class="line">        read(s), read(t);</span><br><span class="line">        dijk(s);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; dis[t] &lt;&lt; <span class="string">' '</span> &lt;&lt; dis1[t] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-CodeForces-670C-【The-Flash】的电影"><a href="#C-CodeForces-670C-【The-Flash】的电影" class="headerlink" title="C CodeForces 670C 【The__Flash】的电影"></a>C CodeForces 670C 【The__Flash】的电影</h2><h3 id="1-题目大意-2"><a href="#1-题目大意-2" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>有n个人， 每个人只会一种语言， 然后有m场电影， 电影的声音和字幕是两种不同的语言， 问 选择哪一场电影， 使得能听懂的人最多， 如果能听懂的一样多， 那么就使能看懂的人最多， 如果听懂的和看懂的都一样多，  输出其中任何一场电影都行。</p><h3 id="2-分析-2"><a href="#2-分析-2" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>比较直观的想法， 统计每个语言会的人数， 遍历m场电影， 选择能听懂的最大的， 如果能听懂的一样多， 选择能看懂的最大的。（由于数据太大进行离散化处理）</p><p>我当时没直接离散化，偷懒用的map， wa了两次，最后 还是用map， set卡过了<code>(*^▽^*)</code></p><p>下面贴离散化的做法</p><h3 id="3-AC代码-2"><a href="#3-AC代码-2" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">10007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[N], b[N], c[N], d[N * <span class="number">3</span>], num[N];</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> lower_bound(d + <span class="number">1</span>, d + len + <span class="number">1</span>, x) - d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) a[i] = read();</span><br><span class="line">    m = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) b[i] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) c[i] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) d[++len] = a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) d[++len] = b[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) d[++len] = c[i];</span><br><span class="line">    sort(d + <span class="number">1</span>, d + len + <span class="number">1</span>);</span><br><span class="line">    len = unique(d + <span class="number">1</span>, d + len + <span class="number">1</span>) - (d + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) num[f(a[i])]++;</span><br><span class="line">    <span class="keyword">int</span> mx1 = <span class="number">-1</span>, mx2 = <span class="number">-1</span>, id;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)&#123;</span><br><span class="line">        b[i] = f(b[i]) ,c[i] = f(c[i]);</span><br><span class="line">        <span class="keyword">if</span> (mx1 &lt; num[b[i]] || mx1 == num[b[i]] &amp;&amp; mx2 &lt; num[c[i]])&#123;</span><br><span class="line">            mx1 = num[b[i]];</span><br><span class="line">            mx2 = num[c[i]];</span><br><span class="line">            id = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; id &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继"><a href="#4-后继" class="headerlink" title="4. 后继"></a>4. 后继</h3><p>打算写一篇关于 unique 用法的博客， 写完了回来补上。</p><h2 id="D-UVA-10305-【The-Flash】的排序"><a href="#D-UVA-10305-【The-Flash】的排序" class="headerlink" title="D UVA 10305 【The__Flash】的排序"></a>D UVA 10305 【The__Flash】的排序</h2><h3 id="1-题目大意-3"><a href="#1-题目大意-3" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>拓扑排序裸题</p><h3 id="2-分析-3"><a href="#2-分析-3" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>拓扑排序裸题</p><h3 id="3-AC代码-3"><a href="#3-AC代码-3" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, a, b, in[<span class="number">102</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ve[N];</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        ve[i].clear();</span><br><span class="line">        in[i] = <span class="number">0</span>;</span><br><span class="line">        ans.clear();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m) &amp;&amp; (m || n))&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            read(a), read(b);</span><br><span class="line">            ve[a].push_back(b);</span><br><span class="line">            in[b]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (in[i] == <span class="number">0</span>) q.push(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">            <span class="keyword">int</span> u = q.front();</span><br><span class="line">            q.pop();</span><br><span class="line">            ans.push_back(u);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ve[u].size(); ++i)&#123;</span><br><span class="line">                <span class="keyword">int</span> v = ve[u][i];</span><br><span class="line">                in[v]--;</span><br><span class="line">                <span class="keyword">if</span>(in[v] == <span class="number">0</span>) q.push(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans.size() - <span class="number">1</span>; ++i)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans.back() &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-HDU-4578-【The-Flash】的操作"><a href="#E-HDU-4578-【The-Flash】的操作" class="headerlink" title="E HDU 4578 【The__Flash】的操作"></a>E HDU 4578 【The__Flash】的操作</h2><h3 id="1-题目大意-4"><a href="#1-题目大意-4" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>裸线段树， 就是有些许麻烦。4个操作</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>x y c 将[x, y]区间的数加c</span><br><span class="line"><span class="symbol">2 </span>x y c 将[x, y]区间的数乘c</span><br><span class="line"><span class="symbol">3 </span>x y c 将[x, y]区间的数重置为c</span><br><span class="line"><span class="symbol">4 </span>x y p 输出[x, y]区间的数的 p次方和</span><br></pre></td></tr></table></figure><h3 id="2-分析-4"><a href="#2-分析-4" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>两种做法， 先说第一种也是通俗易懂的一种但是代码写起来很抓狂。。。<br>3个lazy数组， 3个存值数组</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">add</span><span class="selector-attr">[i]</span> 加标记</span><br><span class="line"><span class="selector-tag">mul</span><span class="selector-attr">[i]</span> 乘标记</span><br><span class="line"><span class="selector-tag">sett</span><span class="selector-attr">[i]</span> 重置标记</span><br><span class="line"><span class="selector-tag">sum</span><span class="selector-attr">[i]</span> 1次方和</span><br><span class="line"><span class="selector-tag">sum2</span><span class="selector-attr">[i]</span> 2次方和</span><br><span class="line"><span class="selector-tag">sum3</span><span class="selector-attr">[i]</span> 3次方和</span><br></pre></td></tr></table></figure><p>难弄的是add[i] 的 二、三次方和 怎么求。酱紫</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sum2[rt] = (a + add) ^ <span class="number">2</span> + (b + add) ^ <span class="number">2</span> + (c + add) ^ <span class="number">2</span></span><br><span class="line">= (a^<span class="number">2</span> + b^<span class="number">2</span> + c^<span class="number">2</span>) + <span class="number">2</span> * add * (a + b + c) + <span class="number">3</span> * val ^ <span class="number">2</span></span><br><span class="line">= sum2[rt] + <span class="number">2</span> * add[rt] * <span class="built_in">sum</span>[rt] + (r - l + <span class="number">1</span>) * add[rt] * add[rt]</span><br><span class="line"></span><br><span class="line">sum3[rt] = (a + add) ^ <span class="number">3</span> + (b + add) ^ <span class="number">3</span> + (c + add) ^ <span class="number">3</span></span><br><span class="line">= (a^<span class="number">3</span> + b^<span class="number">3</span> + c ^ <span class="number">3</span>) + <span class="number">3</span> * add * (a^<span class="number">2</span> + b^<span class="number">2</span> + c^<span class="number">2</span>) + <span class="number">3</span> * add * add * (a + b + c) + <span class="number">3</span> * add * add * add</span><br><span class="line"> = sum3[rt] + <span class="number">3</span> * add[rt] * sum2[rt] + <span class="number">3</span> * add[rt] * add[rt] + <span class="built_in">sum</span>[rt] + (r - l + <span class="number">1</span>) * add[rt] * add[rt] * add[rt]</span><br></pre></td></tr></table></figure><p>然后就是快乐了写代码时间了， 记得注意取余（因为取余我debug了2小时+ <code>o(╥﹏╥)o</code>）</p><p>第二种， 只用一个lazy数组， 太妙了， 它是以区间里的数是否相等作为lazy数组</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag[<span class="built_in">i</span>] <span class="built_in">i</span>表示的区间里的数是否相等</span><br><span class="line">val[<span class="built_in">i</span>] <span class="built_in">i</span>表示的区间里的数的值</span><br></pre></td></tr></table></figure><h3 id="3-AC代码-4"><a href="#3-AC代码-4" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><p>第一种方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">10007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mul[N &lt;&lt; <span class="number">2</span>], sett[N &lt;&lt; <span class="number">2</span>], add[N &lt;&lt; <span class="number">2</span>], sum[N &lt;&lt; <span class="number">2</span>], sum2[N &lt;&lt; <span class="number">2</span>], sum3[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    sum3[rt] = (sum3[rt &lt;&lt; <span class="number">1</span>] + sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">    sum2[rt] = (sum2[rt &lt;&lt; <span class="number">1</span>] + sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">    sum[rt] = (sum[rt &lt;&lt; <span class="number">1</span>] + sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    sett[rt] = add[rt] = <span class="number">0</span>;</span><br><span class="line">    mul[rt] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">        sum[rt] = sum2[rt] = sum3[rt] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    build(l, m, rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    build(m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sett[rt]) &#123;</span><br><span class="line">        sett[rt &lt;&lt; <span class="number">1</span>] = sett[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = sett[rt];</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span>] = add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">0</span>;    <span class="comment">//注意这个也要下放</span></span><br><span class="line">        mul[rt &lt;&lt; <span class="number">1</span>] = mul[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = ((sett[rt] * sett[rt]) % mod) * sett[rt] % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span>] = ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * (sett[rt]) % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = ((len &gt;&gt; <span class="number">1</span>) % mod) * (sett[rt]) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span>] = ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * ((sett[rt] * sett[rt]) % mod) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = ((len &gt;&gt; <span class="number">1</span>) % mod) * ((sett[rt] * sett[rt]) % mod) % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span>] = ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * tmp % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = ((len &gt;&gt; <span class="number">1</span>) % mod) * tmp % mod;</span><br><span class="line">        sett[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mul[rt] != <span class="number">1</span>) &#123;    <span class="comment">//这个就是mul[rt] != 1 ， 当时我这里没注意所以TLE了</span></span><br><span class="line">        mul[rt &lt;&lt; <span class="number">1</span>] = (mul[rt &lt;&lt; <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        mul[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (mul[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        <span class="keyword">int</span> tmp = (((mul[rt] * mul[rt]) % mod * mul[rt]) % mod);</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * mul[rt]) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span>] % mod) * ((mul[rt] * mul[rt]) % mod) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] % mod) * ((mul[rt] * mul[rt]) % mod) % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span>] % mod) * tmp % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] % mod) * tmp % mod;</span><br><span class="line">        mul[rt] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (add[rt]) &#123;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span>] + add[rt]) % mod;</span><br><span class="line">        add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (add[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + add[rt]) % mod;</span><br><span class="line">        <span class="keyword">int</span> tmp = (add[rt] * add[rt] % mod) * add[rt] % mod;        <span class="comment">//注意sum3 , sum2 , sum的先后顺序</span></span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span>] + tmp * (len - (len &gt;&gt; <span class="number">1</span>) % mod) % mod + <span class="number">3</span> * add[rt] * sum2[rt &lt;&lt; <span class="number">1</span>] % mod +</span><br><span class="line">                 <span class="number">3</span> * add[rt] * add[rt] % mod * sum[rt &lt;&lt; <span class="number">1</span>]) % mod;</span><br><span class="line">        sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum3[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + tmp * ((len &gt;&gt; <span class="number">1</span>) % mod) % mod + <span class="number">3</span> * add[rt] * sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] % mod +</span><br><span class="line">                         <span class="number">3</span> * add[rt] * add[rt] % mod * sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span>] + ((add[rt] * add[rt] % mod) * ((len - (len &gt;&gt; <span class="number">1</span>)) % mod)) % mod +</span><br><span class="line">                         (<span class="number">2</span> * sum[rt &lt;&lt; <span class="number">1</span>] * add[rt] % mod)) % mod;</span><br><span class="line">        sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum2[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + (((add[rt] * add[rt] % mod) * ((len &gt;&gt; <span class="number">1</span>)) % mod)) % mod +</span><br><span class="line">                             (<span class="number">2</span> * sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] * add[rt] % mod)) % mod;</span><br><span class="line"></span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span>] + ((len - (len &gt;&gt; <span class="number">1</span>)) % mod) * add[rt] % mod) % mod;</span><br><span class="line">        sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = (sum[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] + ((len &gt;&gt; <span class="number">1</span>) % mod) * add[rt] % mod) % mod;</span><br><span class="line">        add[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> c, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R) &#123;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">3</span>) &#123;</span><br><span class="line">            sett[rt] = c;</span><br><span class="line">            add[rt] = <span class="number">0</span>;</span><br><span class="line">            mul[rt] = <span class="number">1</span>;</span><br><span class="line">            sum[rt] = ((r - l + <span class="number">1</span>) % mod * c) % mod;</span><br><span class="line">            sum2[rt] = ((r - l + <span class="number">1</span>) % mod * ((c * c) % mod)) % mod;</span><br><span class="line">            sum3[rt] = ((r - l + <span class="number">1</span>) % mod * (((c * c) % mod) * c % mod)) % mod;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>) &#123;</span><br><span class="line">            mul[rt] = (mul[rt] * c) % mod;</span><br><span class="line">            add[rt] = (add[rt] * c) % mod;</span><br><span class="line">            sum[rt] = (sum[rt] * c) % mod;</span><br><span class="line">            sum2[rt] = sum2[rt] * (c * c % mod) % mod;</span><br><span class="line">            sum3[rt] = sum3[rt] * ((c * c % mod) * c % mod) % mod;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line">            add[rt] = (add[rt] + c) % mod;</span><br><span class="line">            <span class="keyword">int</span> tmp = (((c * c) % mod * c) % mod * (r - l + <span class="number">1</span>) % mod) % mod;</span><br><span class="line">            sum3[rt] = (sum3[rt] + tmp + <span class="number">3</span> * c * sum2[rt] % mod + <span class="number">3</span> * c * c % mod * sum[rt]) % mod;</span><br><span class="line">            sum2[rt] = (sum2[rt] + (c * c % mod * ((r - l + <span class="number">1</span>) % mod)) % mod + <span class="number">2</span> * sum[rt] * c % mod) % mod;</span><br><span class="line">            sum[rt] = (sum[rt] + (r - l + <span class="number">1</span>) % mod * c % mod) % mod;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt, r - l + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L) update(op, L, R, c, l, m, rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R) update(op, L, R, c, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    pushup(rt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> sum[rt];</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> sum2[rt];</span><br><span class="line">        <span class="keyword">if</span> (p == <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> sum3[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(rt, r - l + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> m = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L)</span><br><span class="line">        ans = (ans + query(L, R, p, l, m, rt &lt;&lt; <span class="number">1</span>)) % mod;</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R)</span><br><span class="line">        ans = (ans + query(L, R, p, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>)) % mod;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, op, x, y, c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!m &amp;&amp; !n) <span class="keyword">break</span>;</span><br><span class="line">        build(<span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">while</span> (m--) &#123;</span><br><span class="line">            op = read(), x = read(), y = read(), c = read();</span><br><span class="line">            <span class="keyword">if</span> (op &lt;= <span class="number">3</span>)</span><br><span class="line">                update(op, x, y, c, <span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, query(x, y, c, <span class="number">1</span>, n, <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种方法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">10007</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> flag[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> val[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ms(flag, <span class="literal">true</span>);</span><br><span class="line">    ms(val, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> op, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> c, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R &amp;&amp; flag[rt])&#123;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">            val[rt] = (val[rt] + c) % mod;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>)</span><br><span class="line">            val[rt] = (val[rt] * c) % mod;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>)</span><br><span class="line">            val[rt] = c;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag[rt])&#123; <span class="comment">// pushdown</span></span><br><span class="line">        flag[rt &lt;&lt; <span class="number">1</span>] = flag[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        flag[rt] = <span class="number">0</span>;</span><br><span class="line">        val[rt &lt;&lt; <span class="number">1</span>] = val[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = val[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L)</span><br><span class="line">        update(op, L, R, c, l, m, rt &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R)</span><br><span class="line">        update(op, L, R, c, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag[rt &lt;&lt; <span class="number">1</span>] &amp;&amp; flag[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span> (val[rt &lt;&lt; <span class="number">1</span>] == val[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])&#123;</span><br><span class="line">            flag[rt] = <span class="number">1</span>;</span><br><span class="line">            val[rt] = val[rt &lt;&lt; <span class="number">1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> flag[rt] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> flag[rt] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> p, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> rt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= L &amp;&amp; r &lt;= R &amp;&amp; flag[rt])&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; ++i)&#123;</span><br><span class="line">            ans = (ans * val[rt]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = ans * (r - l + <span class="number">1</span>) % mod;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag[rt])&#123;</span><br><span class="line">        flag[rt &lt;&lt; <span class="number">1</span>] = flag[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        flag[rt] = <span class="number">0</span>;</span><br><span class="line">        val[rt &lt;&lt; <span class="number">1</span>] = val[rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = val[rt];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> m = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (m &gt;= L)</span><br><span class="line">        ans += query(L, R, p, l, m, rt &lt;&lt; <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">if</span> (m &lt; R)</span><br><span class="line">        ans += query(L, R, p, m + <span class="number">1</span>, r, rt &lt;&lt; <span class="number">1</span> | <span class="number">1</span>) % mod;</span><br><span class="line">    <span class="keyword">return</span> ans % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m))&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span> &amp;&amp; m == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> x, y, op, c;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            op = read(), x = read(), y = read(), c = read();</span><br><span class="line">            <span class="keyword">if</span> (op &lt;= <span class="number">3</span>)</span><br><span class="line">                update(op, x, y, c, <span class="number">1</span>, n, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, query(x, y, c, <span class="number">1</span>, n, <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-1"><a href="#4-后继-1" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>线段树要开4倍空间, <a href="https://www.baidu.com/s?ie=UTF-8&wd=%E4%B8%BA%E4%BB%80%E4%B9%88%E7%BA%BF%E6%AE%B5%E6%A0%91%E8%A6%81%E5%BC%804%E5%80%8D%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">为什么</a></li><li>传lazy数组时， 不仅值要更新， lazy数组也要更新</li><li>update， build操作完， 别忘了pushup</li><li>uodate操作更新lazy数组时， 别忘了更新值。</li><li>左子树的区间长度<code>(len - (len &gt;&gt; 1))</code>&gt;= 右子树的区间长度 <code>(len &gt;&gt; 1)</code></li></ol><h2 id="F-CodeForces-797B-【The-Flash】的序列"><a href="#F-CodeForces-797B-【The-Flash】的序列" class="headerlink" title="F CodeForces 797B 【The__Flash】的序列"></a>F CodeForces 797B 【The__Flash】的序列</h2><h3 id="1-题目大意-5"><a href="#1-题目大意-5" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个序列， 找出一个子序列， 使得其和为奇数且最大。</p><h3 id="2-分析-5"><a href="#2-分析-5" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>先求出最大和， 也就是把大于0的数都加起来， 如果是奇数就输出， 如果是偶数就减去绝对值最小的奇数。</p><h3 id="3-AC代码-5"><a href="#3-AC代码-5" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">100000</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            sum += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &amp; <span class="number">1</span>)</span><br><span class="line">            flag = min(flag, <span class="built_in">abs</span>(a[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &amp; <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; sum - flag &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-CodeForces-1223B-【The-Flash】的水题"><a href="#G-CodeForces-1223B-【The-Flash】的水题" class="headerlink" title="G CodeForces 1223B 【The__Flash】的水题"></a>G CodeForces 1223B 【The__Flash】的水题</h2><h3 id="1-题目大意-6"><a href="#1-题目大意-6" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>字符串可以进行这样一个操作， 将相邻的字符（a ， b）变成（a， a）或者 （b， b）<br>可以进行任意次这种操作</p><h3 id="2-分析-6"><a href="#2-分析-6" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>进行任意次操作后， 字符串里的字符就全一样了， 所以只需要判断两个字符串中是否有相同的字符即可。<br>把第一个字符串所有字符塞到<code>set&lt;char&gt;</code>里， 然后遍历第二个字符串， 看看能不能从里面找出一样的。</p><h3 id="3-AC代码-6"><a href="#3-AC代码-6" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a, b;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt;se;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    read(t);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        se.clear();</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length(); ++i) se.insert(a[i]);</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b.length(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (se.find(b[i]) != se.end())&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H-CodeForces-960B-【The-Flash】的赠予"><a href="#H-CodeForces-960B-【The-Flash】的赠予" class="headerlink" title="H CodeForces 960B 【The__Flash】的赠予"></a>H CodeForces 960B 【The__Flash】的赠予</h2><h3 id="1-题目大意-7"><a href="#1-题目大意-7" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你两个序列a, b， 定义<code>E = (ai - bi) ^ 2 | i : 1 - n</code> , 每一次操作可以使序列中的某个数加1或者减1， 问对序列a进行k1次操作， b进行k2次操作后E的最小值。</p><h3 id="2-分析-7"><a href="#2-分析-7" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>每一次操作就是使 <code>|ai - bi|</code>的值减小1， 因为要求最小值， 所以对<code>|ai - bi|</code>的值越大的 操作 越值得。 例如： 对9 减1后， 实际减小的值为 <code>9 ^ 2 - 8 ^ 2 = 17</code>, 对8 减1后， 实际减小的值为 <code>8 ^ 2 - 7 ^ 2 = 15</code>, 可见对<code>|ai - bi|</code>的值越大的 操作 越值得。<br>然后就是把<code>|ai  - bi|</code>塞进优先队列里， 每次取top 对其减一， 执行k1 + k2次即可。</p><h3 id="3-AC代码-7"><a href="#3-AC代码-7" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1003</span>], b[<span class="number">1003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k1, k2;</span><br><span class="line">    read(n), read(k1), read(k2);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        read(a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        read(b[i]);</span><br><span class="line">        q.push(<span class="built_in">abs</span>(a[i] - b[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k = k1 + k2;</span><br><span class="line">    <span class="keyword">while</span>(k--)&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        q.push(<span class="built_in">abs</span>(u - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        ans += <span class="number">1l</span>l * u * u; <span class="comment">// 注意会爆long long</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-2"><a href="#4-后继-2" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>会爆ll， 前面 <code>* 1ll</code>。</li></ol><h2 id="I-SCU-4444-【The-Flash】的旅行"><a href="#I-SCU-4444-【The-Flash】的旅行" class="headerlink" title="I SCU 4444 【The__Flash】的旅行"></a>I SCU 4444 【The__Flash】的旅行</h2><h3 id="1-题目大意-8"><a href="#1-题目大意-8" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>n个城市<code>（1 - n）</code>， 有<code>n * (n - 1) / 2</code>条路， 其中有m条路权值为a（具体哪m条已给出）， 剩下的权值为b， 无向图， 问城市1到城市n的最短路。</p><h3 id="2-分析-8"><a href="#2-分析-8" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>打比赛的时候想的有点多， 其中有一个情况没想出来，<code>o(╥﹏╥)o</code></p><p>肯定要分为 <code>a &lt;= b</code> 和  <code>a &gt; b</code></p><p>当<code>a &lt;= b</code>时， 如果dis[1][n] == a, 那就是a。 否则跑a的最短路dis[1][n], 答案就是<code>min(dis[1][n], b)</code>。<br>当<code>a &gt; b</code>时， 如果dis[1][n] == b , 那就是b。<br>否则， 判断m条a边是不是把 城市1 或 城市n 堵上， 换句话说， 判断城市1 或者城市n所连的所有边是不是都是权值为a的边， 如果 城市1 或者城市n全是， 那么答案就是a， 因为 如果被全堵上， 走两条边的话， 其中一条边肯定是a边， 那就不如直接走1-n了。 如果都没被堵上， 答案就是走一条a边和走2条b边的最小值 <code>min(a, 2 * b)</code>。</p><p>如果不会自定义优先队列优先级， 请戳 <a href="https://solodance.top/2020/01/27/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%AE%9A%E4%B9%89%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/">优先队列定义优先级的方法</a></p><h3 id="3-AC代码-8"><a href="#3-AC代码-8" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> v, w, ne;</span><br><span class="line">&#125;ed[M];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[N], vis[N], cnt;</span><br><span class="line">ll dis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, a, b;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        head[i] = <span class="number">-1</span>, vis[i] = <span class="number">0</span>, dis[i] = llINF;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">    ed[cnt] = &#123;v, w, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt; , greater&lt;P&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijk</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    q.push(P(<span class="number">0</span>, u));</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        u = q.top().second;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v, w = ed[i].w;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + w)&#123;</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                q.push(P(dis[v], v));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u, v, dis1n, in1, in2;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;a, &amp;b))&#123;</span><br><span class="line">        init();</span><br><span class="line">        dis1n = b;</span><br><span class="line">        in1 = in2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            read(u), read(v);</span><br><span class="line">            <span class="keyword">if</span> (u &gt; v) swap(u, v);</span><br><span class="line">            add(u, v, a);</span><br><span class="line">            add(v, u, a);</span><br><span class="line">            <span class="keyword">if</span> (u == <span class="number">1</span>) in1++;</span><br><span class="line">            <span class="keyword">if</span> (v == n) in2++;</span><br><span class="line">            <span class="keyword">if</span> (u == <span class="number">1</span> &amp;&amp; v == n) dis1n = a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a &lt;= b)&#123;</span><br><span class="line">            <span class="keyword">if</span> (dis1n == a) <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                dijk(<span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (dis[n] &lt;= b) <span class="built_in">cout</span> &lt;&lt; dis[n] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (dis1n == b)&#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; b &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (in1 == n - <span class="number">1</span>) sum++;</span><br><span class="line">            <span class="keyword">if</span> (in2 == n - <span class="number">1</span>) sum++;</span><br><span class="line">            <span class="keyword">if</span> (sum &gt;= <span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; a &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; min(a, <span class="number">2</span> * b) &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J-HDU-1556-【The-Flash】的球球"><a href="#J-HDU-1556-【The-Flash】的球球" class="headerlink" title="J HDU 1556 【The__Flash】的球球"></a>J HDU 1556 【The__Flash】的球球</h2><h3 id="1-题目大意-9"><a href="#1-题目大意-9" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>中文题， qaq<br>N个气球排成一排，从左到右依次编号为1,2,3….N.每次给定2个整数a b(a &lt;= b),lele便为骑上他的“小飞鸽”牌电动车从气球a开始到气球b依次给每个气球涂一次颜色。但是N次以后lele已经忘记了第I个气球已经涂过几次颜色了，你能帮他算出每个气球被涂过几次颜色吗？</p><h3 id="2-分析-9"><a href="#2-分析-9" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>差分模板题。</p><h3 id="3-AC代码-9"><a href="#3-AC代码-9" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, l, r;</span><br><span class="line"><span class="keyword">int</span> diff[N], ans[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)&#123;</span><br><span class="line">        ms(diff, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            read(l), read(r);</span><br><span class="line">            diff[l] ++;</span><br><span class="line">            diff[r + <span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> add = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            add += diff[i];</span><br><span class="line">            ans[i] = add;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; ans[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans[n] &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K-POJ-2018-【The-Flash】的牛牛"><a href="#K-POJ-2018-【The-Flash】的牛牛" class="headerlink" title="K POJ 2018 【The__Flash】的牛牛"></a>K POJ 2018 【The__Flash】的牛牛</h2><h3 id="1-题目大意-10"><a href="#1-题目大意-10" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你一个长为n（<code>n &lt;= 1e5</code>）的序列， 求其长度至少为F区间， 其平均值*1000的最大值。</p><h3 id="2-分析-10"><a href="#2-分析-10" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>一开始以为是dp， 然后没思路qaq</p><p>二分答案qaq， tql</p><p>没想到居然是二分答案， qaq。</p><p>关键是如何以更小的时间判断二分出来的值 （mid）是不是符合要求的，也就是 判断 长度至少为F的区间的平均值， 有没有大于mid的。</p><p>先说二分， 我要求最大的满足条件的数， 所以就是从后向前查询。 从后向前详情请点击 <a href="https://solodance.top/2020/01/23/%E4%BA%8C%E5%88%86%E6%80%BB%E7%BB%93/">二分总结</a></p><p>然后如何判断呢， 那就把区间都减去mid， 就变成找一段区间[l, r]， 使 <code>sum[r] - sum[l - 1] &gt;= 0</code> , 这样记录 sum[l - 1]的最小值即可。</p><p>还有一种做法， 请参考 <a href="https://www.cnblogs.com/liucongyu/p/6357610.html" target="_blank" rel="noopener">POJ2018 Best Cow Fences (二分答案+类前缀和)</a></p><h3 id="3-AC代码-10"><a href="#3-AC代码-10" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><p>第一种做法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">double</span> sum[N];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        sum[i] = a[i] - x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        sum[i] += sum[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">double</span> mi = INF * <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = k; i &lt;= n; ++i)&#123;</span><br><span class="line">        mi = min(mi, sum[i - k]);</span><br><span class="line">        <span class="keyword">if</span> (sum[i] - mi &gt;= -eps) <span class="comment">// 特别注意这里。。</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n), read(k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">2000000</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        m = l + (r - l + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (is(<span class="number">1.0</span> * m / <span class="number">1000</span>))</span><br><span class="line">            l = m;</span><br><span class="line">        <span class="keyword">else</span> r = m - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; l &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二种做法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">double</span> rsum[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">is</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">    rsum[n] = a[n] - x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">        rsum[i] = a[i] - x;</span><br><span class="line">        <span class="keyword">if</span> (rsum[i + <span class="number">1</span>] &gt; <span class="number">0</span>) rsum[i] += rsum[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n - k + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum[i + k - <span class="number">1</span>] - sum[i - <span class="number">1</span>] &gt;= x * k)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (sum[i + k - <span class="number">1</span>] - sum[i - <span class="number">1</span>] - x * k + rsum[i + k] &gt;= <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    read(n), read(k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">2000000</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        m = l + (r - l + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (is(<span class="number">1.0</span> * m / <span class="number">1000</span>))</span><br><span class="line">            l = m;</span><br><span class="line">        <span class="keyword">else</span> r = m - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; l &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-3"><a href="#4-后继-3" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>知道如何在O(n)求 长度至少为k的 区间和的最大值</li></ol><h2 id="L-CodeForces-621B-【The-Flash】的鲨鲨"><a href="#L-CodeForces-621B-【The-Flash】的鲨鲨" class="headerlink" title="L CodeForces 621B 【The__Flash】的鲨鲨"></a>L CodeForces 621B 【The__Flash】的鲨鲨</h2><h3 id="1-题目大意-11"><a href="#1-题目大意-11" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>1000 * 1000 的网格中， 处于对角线上的鲨鲨会互相打架， 求有对少对鲨鲨会打架。</p><h3 id="2-分析-11"><a href="#2-分析-11" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>画图可分析， 处于对角线上的鲨鲨满足   <code>x + y = t (0&lt;= t &lt;= 2000)</code> 或者满足 <code>x - y = t (-1000 &lt;= t &lt;= 1000)</code>， 分别用两个数组储存在每一条对角线上的个数， 然后<code>n * (n - 1) / 2</code> 计算即可， 注意<code>x - y</code>的范围， 可以化成 <code>x - y + 1000 = t (0 &lt;= t &lt;= 2000)</code> ， 因为这个我re了两次QAQ</p><h3 id="3-AC代码-11"><a href="#3-AC代码-11" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> hp, atk;</span><br><span class="line">    <span class="keyword">double</span> v;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(x.v - y.v) &lt;= eps)</span><br><span class="line">        <span class="keyword">return</span> x.hp &gt; y.hp;</span><br><span class="line">    <span class="keyword">return</span> x.v &gt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a1[<span class="number">10003</span>], a2[<span class="number">10003</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, x, y;</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">        read(x), read(y);</span><br><span class="line">        a1[x + y]++;</span><br><span class="line">        a2[x - y + <span class="number">1000</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">2000</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a1[i] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            ans += ll(a1[i]) * ll(a1[i] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a2[i] &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            ans += ll(a2[i]) * ll(a2[i] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-4"><a href="#4-后继-4" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>注意数组下标是不是负数 <code>o(╥﹏╥)o</code></li></ol><h2 id="M-Gym-102222H-【The-Flash】的达拉崩吧斑得贝迪卜多比鲁翁"><a href="#M-Gym-102222H-【The-Flash】的达拉崩吧斑得贝迪卜多比鲁翁" class="headerlink" title="M Gym 102222H 【The__Flash】的达拉崩吧斑得贝迪卜多比鲁翁"></a>M Gym 102222H 【The__Flash】的达拉崩吧斑得贝迪卜多比鲁翁</h2><h3 id="1-题目大意-12"><a href="#1-题目大意-12" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">很久很久以前</span><br><span class="line"></span><br><span class="line">巨龙突然出现</span><br><span class="line"></span><br><span class="line">带来灾难带走了公主又消失不见</span><br><span class="line"></span><br><span class="line">王国十分危险</span><br><span class="line"></span><br><span class="line">世间谁最勇敢</span><br><span class="line"></span><br><span class="line">一位勇者赶来大声喊</span><br><span class="line"></span><br><span class="line">“我要带上最好的剑</span><br><span class="line"></span><br><span class="line">翻过最高的山</span><br><span class="line"></span><br><span class="line">闯进最深的森林</span><br><span class="line"></span><br><span class="line">把公主带回到面前”</span><br><span class="line"></span><br><span class="line">国王非常高兴忙问他的姓名</span><br><span class="line"></span><br><span class="line">年轻人想了想</span><br><span class="line"></span><br><span class="line">他说</span><br><span class="line"></span><br><span class="line">“陛下我叫达拉崩吧斑得贝迪卜多比鲁翁</span><br><span class="line"></span><br><span class="line">再来一次</span><br><span class="line"></span><br><span class="line">达拉崩巴斑得贝迪卜多比鲁翁”</span><br><span class="line"></span><br><span class="line">“是不是达拉崩吧斑得贝迪卜多比鲁翁”</span><br><span class="line"></span><br><span class="line">“对对达拉崩巴斑得贝迪卜多比鲁翁”</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">幽幽小路上，英雄达拉崩吧遇到 <span class="keyword">n</span> 只怪兽</span><br><span class="line"></span><br><span class="line">每只怪兽有其相应的体力值 HP 和 攻击值 ATK</span><br><span class="line"></span><br><span class="line">达拉崩吧每次可对怪物造成一次伤害，伤害值为 K（其中，K 在数值上为达拉崩吧攻击这只怪兽的次数）</span><br><span class="line"></span><br><span class="line">然鹅，每次存活的怪兽都可以攻击我们的英雄达拉崩吧</span><br><span class="line"></span><br><span class="line">当怪兽的体力值小于等于时，怪兽死亡.</span><br><span class="line"></span><br><span class="line">现请你选择一种打怪兽的顺序，使得达拉崩吧收到的伤害和最小，并输出收到最小的伤害和.</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「The___Flash」的原创文章，遵循 <span class="keyword">CC</span> 4.0 <span class="keyword">BY</span>-<span class="keyword">SA</span> 版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:<span class="comment">//blog.csdn.net/The___Flash/article/details/103939876</span></span><br></pre></td></tr></table></figure><h3 id="2-分析-12"><a href="#2-分析-12" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>显而易见， 贪心， 但是当时没会用理解的思维推理， 而是臆测， 不过差一点（很多）就猜对了QAQ</p><p>最优情况肯定是把一只怪兽打到死。先只考虑攻击两只怪兽的优先级问题。</p><p>设t[i] 是把第i只怪兽打死需要的次数， sum是所有怪兽的总攻击力和</p><p>先进攻第一只 所受的攻击 是 <code>sum * t[1] + (sum - atk[1]) * t[2]</code><br>先进攻第二只 所受的攻击 是 <code>sum * t[2] + (sum - atk[2]) * t[1]</code></p><p>如果要先攻击第二只</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum * t[<span class="number">1</span>] + (sum - atk[<span class="number">1</span>]) * t[<span class="number">2</span>] &gt;= sum * t[<span class="number">2</span>] + (sum - atk[<span class="number">2</span>]) * t[<span class="number">1</span>]</span><br><span class="line">sum * t[<span class="number">1</span>] + sum * t[<span class="number">2</span>] - atk[<span class="number">1</span>] * t[<span class="number">2</span>] &gt;= sum * t[<span class="number">2</span>] + sum * t[<span class="number">1</span>] - atk[<span class="number">2</span>] * t[<span class="number">1</span>]</span><br><span class="line">atk[<span class="number">2</span>] * t[<span class="number">1</span>] &gt;= atk[<span class="number">1</span>] * t[<span class="number">2</span>]</span><br><span class="line">atk[<span class="number">2</span>] / t[<span class="number">2</span>] &gt;= atk[<span class="number">1</span>] / t[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>所以按照 <code>atk[i] / t[i]</code>排序就行。</p><p>那么怎么求把第i只怪兽打死需要的次数呢， 二分次数就行了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">4611686018427387903</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> hp, atk;</span><br><span class="line">    <span class="keyword">double</span> v;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">fabs</span>(x.v - y.v) &lt;= eps)</span><br><span class="line">        <span class="keyword">return</span> x.hp &gt; y.hp;</span><br><span class="line">    <span class="keyword">return</span> x.v &gt; y.v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> low = <span class="number">0</span>, high = <span class="number">500</span>, m;</span><br><span class="line">    <span class="keyword">while</span>(low &lt; high)&#123;</span><br><span class="line">        m = low + (high - low) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (m * (m + <span class="number">1</span>) / <span class="number">2</span> &gt;= x)</span><br><span class="line">            high = m;</span><br><span class="line">        <span class="keyword">else</span> low = m + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> low;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t, n;</span><br><span class="line">    ll ans, sum;</span><br><span class="line">    read(t);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> tt = <span class="number">1</span>; tt &lt;= t; ++tt)&#123;</span><br><span class="line">        read(n);</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            read(a[i].hp), read(a[i].atk);</span><br><span class="line">            a[i].hp = search(a[i].hp);</span><br><span class="line">            a[i].v = <span class="number">1.0</span> * a[i].atk / a[i].hp; <span class="comment">// 这里也可以不用v ， 而直接用 atk[2] * search(hp[1]) &gt;= atk[1] * search(hp[2]) 也行</span></span><br><span class="line">            sum += a[i].atk;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        sort(a, a + n, cmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)&#123;</span><br><span class="line">            ans += sum * (a[i].hp);</span><br><span class="line">            sum -= a[i].atk;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %lld\n"</span>, tt, ans);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-5"><a href="#4-后继-5" class="headerlink" title="4. 后继"></a>4. 后继</h3><p>常见贪心证明手段：</p><ol><li>临项交换：</li></ol><p>证明在任何局面下，任何对局部最优策略的微小改变都会造成整体结果变差，经常用于以“排序”为贪心策略的证明.</p><ol start="2"><li>范围缩放：</li></ol><p>证明任何对局面最优策略作用范围的拓展都不会造成整体结果变差.</p><ol start="3"><li>决策包容性：</li></ol><p>证明在任意局面下，作出局部最优决策以后，在问题状态空间中的可达集合包含了作出其他任何决策后的可达集合。换言之，这个局部最优策略提供的可能性包含其他所有策略提供的可能性.</p><ol start="4"><li><p>反证法</p></li><li><p>数学归纳法</p></li></ol><p>例题：</p><p><a href="https://vjudge.net/problem/POJ-3614" target="_blank" rel="noopener">POJ-3614</a></p><p><a href="https://vjudge.net/problem/POJ-3190" target="_blank" rel="noopener">POJ-3190</a></p><p><a href="https://vjudge.net/problem/POJ-1328" target="_blank" rel="noopener">POJ-1328</a></p><p><a href="https://ac.nowcoder.com/acm/contest/1003/D" target="_blank" rel="noopener">国王游戏</a></p><p><a href="https://vjudge.net/problem/POJ-2054" target="_blank" rel="noopener">POJ-2054</a></p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;部分参照 &lt;a href=&quot;https://blog.csdn.net/The___Flash/article/details/103939876&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_2nd【解题报告】– The__Flash&lt;/a&gt;。&lt;br&gt;欢迎评论提问， 纠错&lt;/p&gt;
&lt;p&gt;文章篇幅较长， 请参考右侧&lt;strong&gt;文章目录&lt;/strong&gt;食用。&lt;/p&gt;
&lt;p&gt;专题链接： &lt;a href=&quot;https://vjudge.net/contest/352473&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_2nd&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://solodance.top/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="贪心" scheme="https://solodance.top/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="最短路" scheme="https://solodance.top/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
      <category term="拓扑排序" scheme="https://solodance.top/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
      <category term="二维前缀和" scheme="https://solodance.top/tags/%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
      <category term="离散化" scheme="https://solodance.top/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
      <category term="线段树" scheme="https://solodance.top/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="差分" scheme="https://solodance.top/tags/%E5%B7%AE%E5%88%86/"/>
    
      <category term="二分" scheme="https://solodance.top/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>SDNU_ACM_ICPC_2020_Winter_Practice_1st【解题报告】</title>
    <link href="https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_1st%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/"/>
    <id>https://solodance.top/2020/01/29/SDNU_ACM_ICPC_2020_Winter_Practice_1st%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91/</id>
    <published>2020-01-29T02:51:58.191Z</published>
    <updated>2020-01-30T10:27:03.087Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎评论提问， 纠错</p><p>文章篇幅较长， 请参考右侧<strong>文章目录</strong>食用。</p><p>专题链接： <a href="https://vjudge.net/contest/352426" target="_blank" rel="noopener">SDNU_ACM_ICPC_2020_Winter_Practice_1st</a></p><a id="more"></a><h2 id="A-CodeForces-854A"><a href="#A-CodeForces-854A" class="headerlink" title="A CodeForces 854A"></a>A CodeForces 854A</h2><h3 id="1-题目大意"><a href="#1-题目大意" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>把一个数n分成两个互质的数(a, b, a &lt; b)， 使 a / b 最大。</p><h3 id="2-分析"><a href="#2-分析" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>从 i = n / 2 –&gt; 1遍历， 如果 <code>gcd(i, n - i) == 1</code> ， 输出i 和 n - i。</p><h3 id="3-AC代码"><a href="#3-AC代码" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod =  <span class="number">998244353</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;<span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123; x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>); ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = read();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n / <span class="number">2</span>; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line"><span class="keyword">if</span> (__gcd(i, n - i) == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i &lt;&lt; <span class="string">" "</span> &lt;&lt; n - i &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继"><a href="#4-后继" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>QAQ， 当时没看到要两个数互质， wa了一发</li></ol><h2 id="B-CodeForces-854B"><a href="#B-CodeForces-854B" class="headerlink" title="B CodeForces 854B"></a>B CodeForces 854B</h2><h3 id="1-题目大意-1"><a href="#1-题目大意-1" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>公寓编号 1 - n ， 其中k间已经有人入住（不知道具体是哪k间）， 如果这个人入住了一间房子并且他的邻居有人入住， 他就会感到快乐， 问能让他感到快乐的位置数量的 最小值， 最大值。</p><h3 id="2-分析-1"><a href="#2-分析-1" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>最小值的情况肯定是 1-k入住， 答案为0 （住满）或 1（没住满） 。<br>最大值的情况是 入住一个人 会有两个位置使他感到愉悦的，但总位置不能超过 n-k， 答案就是<code>min(2 * k, n - k)</code>。</p><h3 id="3-AC代码-1"><a href="#3-AC代码-1" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod =  <span class="number">998244353</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;<span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123; x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>); ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line">n = read(), k = read();</span><br><span class="line"><span class="keyword">if</span> (n == k || k == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"0 0\n"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">2</span> * k;</span><br><span class="line">mx = min(mx, n - k);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"1 "</span> &lt;&lt; mx &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-1"><a href="#4-后继-1" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>当时以为 2 4 6 这种空一个是最优的， 其实 2 5 8  这种空两个才是最优的， 然后就wa了两发。</li></ol><h2 id="C-CodeForces-854C"><a href="#C-CodeForces-854C" class="headerlink" title="C CodeForces 854C"></a>C CodeForces 854C</h2><h3 id="1-题目大意-2"><a href="#1-题目大意-2" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你n个飞机的花费和开始时间k， 第i个飞机的最早起飞时间是i， 要求飞机从 k + 1 到 k + n， 全都飞完， 求什么顺序能使总花费最小， 输出最小花费和n个飞机实际起飞的时间， 起飞花费的计算公式为 <code>(实际起飞时间 - 要求起飞时间) * 这个飞机的花费</code></p><h3 id="2-分析-2"><a href="#2-分析-2" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>实际上就是求 <code>[1, i] | k + 1 &lt;= i &lt;= k + n</code> 区间内， 飞机花费的最大值， 就是第i时间应该起飞的飞机。 为什么不是求  <code>(实际起飞时间 - 要求起飞时间) * 这个飞机的花费</code>这个最大的呢， 因为， 第i + 1 下， 飞机的 花费大的 涨的多， 所以 应当取飞机花费的最大值。</p><p>用优先队列， 现在为cnt时， 把<code>1-cnt</code>的飞机都加进去， 然后取top为时间为cnt时应该起飞的飞机，pop（）， 再把cnt + 1的飞机加进去。</p><h3 id="3-AC代码-2"><a href="#3-AC代码-2" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod =  <span class="number">998244353</span>;</span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;<span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123; <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>; ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123; x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>); ch = getchar(); &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> c, j; <span class="comment">// c 是花费， j 是起飞时间</span></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;x) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> c &lt; x.c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="keyword">int</span> ans[N]; <span class="comment">// 第i个飞机的实际起飞时间</span></span><br><span class="line">ll res;</span><br><span class="line">priority_queue &lt;node&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, k;</span><br><span class="line">    n = read(), k = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        a[i].c = read();</span><br><span class="line">        a[i].j = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k + <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; n) <span class="keyword">break</span>;</span><br><span class="line">        q.push(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt = k + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        res += (ll)(q.top().c) * (cnt - q.top().j);  <span class="comment">// 计算总花费</span></span><br><span class="line">        ans[q.top().j] = cnt++; <span class="comment">// 第q.top().j个飞机的实际起飞时间</span></span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (cnt &lt;= n)</span><br><span class="line">            q.push(a[cnt]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans[i];</span><br><span class="line">        <span class="keyword">if</span> (i != n) <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="D-CodeForces-854D"><a href="#D-CodeForces-854D" class="headerlink" title="D CodeForces 854D"></a>D CodeForces 854D</h2><h3 id="1-题目大意-3"><a href="#1-题目大意-3" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>一共有n+1个城市（0 - n）， 然后 1 - n 城市每个城市一个人， 要到0号城市去会晤， 这n个人至少要一起在0号城市待k天， 现给出  1 - n 城市到0号城市以及 0号城市到 1- n 城市的机票价钱，以及航班开始时间， 并且这一天一定能到达，  问如何安排能使总花费最少。</p><h3 id="2-分析-3"><a href="#2-分析-3" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>维护两个数组， sum1[i] 表示前i个（包括第i个）航班 能使 1 - n 号城市 到 0 号城市 的最小花费， sum2[i] 表示后i个（包括第i个）航班 能使 0 号城市 到 1 - n 号城市 的最小花费。</p><p>就是维护这两个数组有点小小麻烦。</p><p>全都求出来， 暴力求 <code>sum1[i] + sum2[i + k + 1]</code>的最小值即可。</p><p>具体如何维护。请看代码注释</p><h3 id="3-AC代码-3"><a href="#3-AC代码-3" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> M = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d, f, t, c; <span class="comment">// 题意中的d, f, t, c</span></span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x, node y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.d &lt; y.d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ll sum1[M], sum2[M];</span><br><span class="line">ll val[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, k, d, f, t, c, en = <span class="number">0</span>;</span><br><span class="line">    n = read(), m = read(), k = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)&#123;</span><br><span class="line">        d = read(), f = read(), t = read(), c = read();</span><br><span class="line">        a[i] = &#123;d, f, t, c&#125;;</span><br><span class="line">        en = max(en, d);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a + <span class="number">1</span>, a + m + <span class="number">1</span>, cmp); <span class="comment">// 先按照飞机起飞时间排序</span></span><br><span class="line">    ms(sum1, llINF);</span><br><span class="line">    ms(sum2, llINF);</span><br><span class="line">    <span class="comment">// 下面3个是辅助维护的</span></span><br><span class="line">    ms(val, llINF);</span><br><span class="line">    ll sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 下面是维护sum1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].f == <span class="number">0</span>) <span class="keyword">continue</span>;  <span class="comment">// 剔除出发地是0号城市的</span></span><br><span class="line">        <span class="comment">// val[i]是储存，出发地是i的飞机票的最小价值</span></span><br><span class="line">        <span class="keyword">if</span> (val[a[i].f] == llINF)&#123;</span><br><span class="line">            val[a[i].f] = a[i].c;</span><br><span class="line">            sum += a[i].c; <span class="comment">//  总价值</span></span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (val[a[i].f] &gt; a[i].c)&#123;</span><br><span class="line">            sum += -val[a[i].f] + a[i].c;</span><br><span class="line">            val[a[i].f] = a[i].c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (len == n)&#123; <span class="comment">// 如果n个城市都有航班飞向0城市了， 那就可以安排了</span></span><br><span class="line">            sum1[a[i].d] = sum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 由于上面循环并没有照顾到每一天的航班， 就是有的天， 没有航班， 不是真正的 sum1， 下面就是维护没有航班的天</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= en; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum1[i - <span class="number">1</span>] != llINF)&#123;</span><br><span class="line">            sum1[i] = min(sum1[i - <span class="number">1</span>], sum1[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 维护sum2， 同理</span></span><br><span class="line">    len = <span class="number">0</span>;</span><br><span class="line">    ms(val, llINF);</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i].t == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (val[a[i].t] == llINF)&#123;</span><br><span class="line">            val[a[i].t] = a[i].c;</span><br><span class="line">            sum += a[i].c;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (val[a[i].t] &gt; a[i].c)&#123;</span><br><span class="line">            sum += -val[a[i].t] + a[i].c;</span><br><span class="line">            val[a[i].t] = a[i].c;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (len == n)&#123;</span><br><span class="line">            sum2[a[i].d] = sum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = en - <span class="number">1</span>; i &gt;= <span class="number">1</span>; --i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (sum2[i + <span class="number">1</span>] != llINF)&#123;</span><br><span class="line">            sum2[i] = min(sum2[i + <span class="number">1</span>], sum2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll ans = llINF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= en - k - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">        ans = min(ans, sum1[i] + sum2[i + k + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ans == llINF) <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-2"><a href="#4-后继-2" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>这代码是我后来写的， 刚刚补题时的代码是用set维护的， 没用val， 感觉没这个好用， 也没这个简洁。</li><li>维护sum1/sum2 的时候别忘了照顾到没有航班的天， 最后的for循环至关重要。总之最后补题的时候debug de了一小时。<a href="https://h5.qzone.qq.com/ugc/share/833ED75CE5DE28022EA485F08BC4D767?uw=1521189989&subtype=0&jumptoqzone=1&blog_photo=0&appid=311&ciphertext=833ED75CE5DE28022EA485F08BC4D767&g_f=&_wv=1" target="_blank" rel="noopener">详见</a>哭<code>o(╥﹏╥)o</code></li></ol><h2 id="E-CodeForces-705B"><a href="#E-CodeForces-705B" class="headerlink" title="E CodeForces 705B"></a>E CodeForces 705B</h2><h3 id="1-题目大意-4"><a href="#1-题目大意-4" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>n轮游戏， 第i轮游戏有前i个数， 没一轮一个人可以把一个大于2的数x拆成 p(p &gt;= 1) ,x - p (x - p &gt;= 1)， 如果最后没得拆， 就算那个人输。</p><h3 id="2-分析-4"><a href="#2-分析-4" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>博弈， 每个数被拆多少次是固定的， qaq， 这一轮的所有数能被拆的次数统计下， 奇数先手赢， 偶数先手输。</p><h3 id="3-AC代码-4"><a href="#3-AC代码-4" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line">    ll sum = <span class="number">0</span>, a;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        a = read();</span><br><span class="line">        sum += a - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (sum &amp; <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-CodeForces-705C"><a href="#F-CodeForces-705C" class="headerlink" title="F CodeForces 705C"></a>F CodeForces 705C</h2><h3 id="1-题目大意-5"><a href="#1-题目大意-5" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>一共有n个app， 有q次操作。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">1 </span>x  app-x 产生一条通知</span><br><span class="line"><span class="symbol">2 </span>x  把所有 app-x 产生的通知标记为已读</span><br><span class="line"><span class="symbol">3 </span>t  把前t个产生的通知（不论已读未读）标记为已读</span><br></pre></td></tr></table></figure><p>输出每一次操作后， 未读通知的数量</p><h3 id="2-分析-5"><a href="#2-分析-5" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>一开始真的是毫无头绪， 想着大暴力铁定超时， 后来看题解， 只想大喊一声 stlnb！</p><p>思想， 通知用cnt编号， 每次都放进<code>set&lt;int&gt;se</code>里， x产生的通知放进<code>vector&lt;int&gt;ve[i]</code> 里</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 操作一</span></span><br><span class="line">ve[x].push_back(cnt);</span><br><span class="line">se.insert(cnt++);</span><br><span class="line"><span class="comment">// 操作二</span></span><br><span class="line">se.erase(ve[x][i]);</span><br><span class="line">ve[x].clear();</span><br><span class="line"><span class="comment">// 操作三 做一个小优化， 否则会tle</span></span><br><span class="line">last = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = last; i &lt;= t; ++i)</span><br><span class="line">    se.erase(i);</span><br><span class="line">last = max(last, t);</span><br></pre></td></tr></table></figure><h3 id="3-AC代码-5"><a href="#3-AC代码-5" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ve[N];</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; se;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, q, op, x;</span><br><span class="line">    n = read(), q = read();</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">1</span>, last = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= q; ++i) &#123;</span><br><span class="line">        op = read();</span><br><span class="line">        x = read();</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>) &#123;</span><br><span class="line">            ve[x].push_back(cnt);</span><br><span class="line">            se.insert(cnt++);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ve[x].size(); ++j)</span><br><span class="line">                se.erase(ve[x][j]);</span><br><span class="line">            ve[x].clear();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 此处可以换成后继部分优化代码， 稍微更优哦~</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = last; j &lt;= x; ++j)</span><br><span class="line">                se.erase(j);</span><br><span class="line">            last = max(last, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, se.size());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-3"><a href="#4-后继-3" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>在优化部分， 为什么我令<code>last = *se.begin()</code>， 他就会超时呢？ 求解决<code>o(╥﹏╥)o</code></li></ol><p>解决了QAQ， 原来当 se 为空时， 取 <code>se.begin()</code>会出错， QAQ， 优化部分代码， 这样更优化一点点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!se.empty()) last = *se.begin();</span><br><span class="line"><span class="keyword">else</span> last = x + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = last; j &lt;= x; ++j)</span><br><span class="line">    se.erase(j);</span><br></pre></td></tr></table></figure><h2 id="G-CodeForces-706C"><a href="#G-CodeForces-706C" class="headerlink" title="G CodeForces 706C"></a>G CodeForces 706C</h2><h3 id="1-题目大意-6"><a href="#1-题目大意-6" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你n个字符串， 以及翻转字符串所需要的花费， 问要使得这n个字符串按字典序排序， 最小花费是多少， 如果没有， 输出-1.</p><h3 id="2-分析-6"><a href="#2-分析-6" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>简单的dp， 但我打比赛的时候没敢想。但也就4中情况， 前 翻转/没翻转 ，后 翻转/没翻转 ， 设f[i][0] / f[i][1] 没翻转， 翻转的最小花费。</p><h3 id="3-AC代码-6"><a href="#3-AC代码-6" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">string</span> s[N], ds[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[N];</span><br><span class="line">ll f[N][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) c[i] = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s[i];</span><br><span class="line">        ds[i] = s[i];</span><br><span class="line">        reverse(ds[i].begin(), ds[i].end());</span><br><span class="line">    &#125;</span><br><span class="line">    ms(f, llINF);</span><br><span class="line">    f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>, f[<span class="number">1</span>][<span class="number">1</span>] = c[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt;= s[i - <span class="number">1</span>])</span><br><span class="line">            f[i][<span class="number">0</span>] = f[i - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (s[i] &gt;= ds[i - <span class="number">1</span>])</span><br><span class="line">            f[i][<span class="number">0</span>] = min(f[i][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">if</span> (ds[i] &gt;= s[i - <span class="number">1</span>])</span><br><span class="line">            f[i][<span class="number">1</span>] = min(f[i][<span class="number">1</span>], f[i - <span class="number">1</span>][<span class="number">0</span>] + c[i]);</span><br><span class="line">        <span class="keyword">if</span> (ds[i] &gt;= ds[i - <span class="number">1</span>])</span><br><span class="line">            f[i][<span class="number">1</span>] = min(f[i][<span class="number">1</span>], f[i - <span class="number">1</span>][<span class="number">1</span>] + c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = min(f[n][<span class="number">1</span>], f[n][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">if</span> (ans == llINF) <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H-HYSBZ-4337"><a href="#H-HYSBZ-4337" class="headerlink" title="H HYSBZ 4337"></a>H HYSBZ 4337</h2><p>树哈希， 还没补，QAQ， 我打算把比较普通的哈希学完再来补这个题</p><h2 id="I-HDU-6638"><a href="#I-HDU-6638" class="headerlink" title="I HDU 6638"></a>I HDU 6638</h2><p>最大字段和， 还没补， QAQ， 打算把线段树专题做一遍在补这个题</p><h2 id="J-HDU-6514"><a href="#J-HDU-6514" class="headerlink" title="J HDU 6514"></a>J HDU 6514</h2><h3 id="1-题目大意-7"><a href="#1-题目大意-7" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给一个n * m的矩阵， 然后给p个矩阵， 然后再给q个矩阵， 问着q个矩阵之一， 是否被那p个矩阵全覆盖。</p><h3 id="2-分析-7"><a href="#2-分析-7" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>把p个矩阵覆盖的区域全赋值1， 问题就转化成 q个矩阵之一 覆盖区域的和 是不是等于矩阵的面积。</p><p>如何把p个矩阵全赋值1， 二维差分。</p><p>如何求q个矩阵之一 覆盖区域之和， 二维前缀和。</p><p>对了， 这题特坑， 要把二维矩阵转化为一维。。</p><h3 id="3-AC代码-7"><a href="#3-AC代码-7" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e7</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m, n, p, q;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> _(<span class="keyword">int</span> x, <span class="keyword">int</span> y)&#123;  <span class="comment">//二维矩阵转化为一维</span></span><br><span class="line">    <span class="keyword">return</span> (x - <span class="number">1</span>) * m + y - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> diff[N];</span><br><span class="line"><span class="keyword">int</span> x1, x2, y, y2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m))&#123;</span><br><span class="line">        p = read();</span><br><span class="line">        ms(diff, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 差分</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p; ++i)&#123;</span><br><span class="line">            x1 = read(), y = read(), x2 = read(), y2 = read();</span><br><span class="line">            diff[_(x1, y)] += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x2 + <span class="number">1</span> &lt;= n)</span><br><span class="line">                diff[_(x2 + <span class="number">1</span>, y)] -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (y2 + <span class="number">1</span> &lt;= m)</span><br><span class="line">                diff[_(x1, y2 + <span class="number">1</span>)] -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (x2 + <span class="number">1</span> &lt;= n &amp;&amp; y2 + <span class="number">1</span> &lt;= m)</span><br><span class="line">                diff[_(x2 + <span class="number">1</span>, y2 + <span class="number">1</span>)] += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 通过差分还原矩阵</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>)&#123;</span><br><span class="line">                    diff[_(i, j)] += diff[_(i, j - <span class="number">1</span>)];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">1</span>)&#123;</span><br><span class="line">                    diff[_(i, j)] += diff[_(i - <span class="number">1</span>, j)];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    diff[_(i, j)] += diff[_(i - <span class="number">1</span>, j)] + diff[_(i, j - <span class="number">1</span>)] - diff[_(i - <span class="number">1</span>, j - <span class="number">1</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 把被多次覆盖的变为1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) &#123;</span><br><span class="line">                <span class="keyword">if</span> (diff[_(i, j)] &gt;= <span class="number">1</span>) diff[_(i, j)] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 求前缀和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">1</span>)&#123;</span><br><span class="line">                    diff[_(i, j)] += diff[_(i, j - <span class="number">1</span>)];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (j == <span class="number">1</span>)&#123;</span><br><span class="line">                    diff[_(i, j)] += diff[_(i - <span class="number">1</span>, j)];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    diff[_(i, j)] += diff[_(i - <span class="number">1</span>, j)] + diff[_(i, j - <span class="number">1</span>)] - diff[_(i - <span class="number">1</span>, j - <span class="number">1</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        q = read();</span><br><span class="line">        <span class="keyword">int</span> sum;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q; ++i)&#123;</span><br><span class="line">            <span class="comment">// 每一次询问求前缀和， 与矩形面积进行比较</span></span><br><span class="line">            x1 = read(), y = read(), x2 = read(), y2 = read();</span><br><span class="line">            sum = diff[_(x2, y2)];</span><br><span class="line">            <span class="keyword">if</span> (y &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                sum -= diff[_(x2, y - <span class="number">1</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (x1 &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                sum -= diff[_(x1 - <span class="number">1</span>, y2)];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (y &gt; <span class="number">1</span> &amp;&amp; x1 &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                sum += diff[_(x1 - <span class="number">1</span>, y - <span class="number">1</span>)];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sum == (x2 - x1 + <span class="number">1</span>) * (y2 - y + <span class="number">1</span>)) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-4"><a href="#4-后继-4" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>正是因为这个题我才开始学二维前缀和， 二维差分的。</li></ol><h2 id="K-计蒜客-A1951"><a href="#K-计蒜客-A1951" class="headerlink" title="K 计蒜客 A1951"></a>K 计蒜客 A1951</h2><p>状压Dp， 等着在补， 等着在补， QAQ</p><h2 id="L-HDU-1384"><a href="#L-HDU-1384" class="headerlink" title="L HDU 1384"></a>L HDU 1384</h2><h3 id="1-题目大意-8"><a href="#1-题目大意-8" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给你n个闭区间， 要求最后的集合中要包含这些区间[a, b]的至少c个数， 求最后集合的最小size。</p><h3 id="2-分析-8"><a href="#2-分析-8" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>差分约束。</p><p>推荐两篇博客</p><p><a href="https://blog.csdn.net/dragon60066/article/details/80245797" target="_blank" rel="noopener">差分约束系统学习笔记</a></p><p><a href="https://blog.csdn.net/consciousman/article/details/53812818" target="_blank" rel="noopener">差分约束系统</a></p><p>设f[i]为[0, i]中在最后集合里的数的个数。<br>由题意可知  <code>f[b] - f[a - 1] &gt;= c</code>， 求最小值要跑最长路。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, w, ne;</span><br><span class="line">&#125; ed[<span class="number">4</span> * N];</span><br><span class="line"><span class="keyword">int</span> head[N], dis[N], vis[N], cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ms(head, <span class="number">-1</span>);</span><br><span class="line">    ms(dis, -INF);</span><br><span class="line">    ms(vis, <span class="number">0</span>);</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    ed[cnt] = &#123;u, v, w, head[u]&#125;;</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    dis[u] = <span class="number">0</span>;</span><br><span class="line">    q.push(u);</span><br><span class="line">    <span class="keyword">while</span> (!q.empty()) &#123;</span><br><span class="line">        u = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        vis[u] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne) &#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &lt; dis[u] + ed[i].w) &#123;</span><br><span class="line">                dis[v] = dis[u] + ed[i].w;</span><br><span class="line">                <span class="keyword">if</span> (!vis[v]) &#123;</span><br><span class="line">                    q.push(v);</span><br><span class="line">                    vis[v] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b, c, n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">int</span> mx = <span class="number">0</span>, mi = INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">            a = read(), b = read(), c = read();</span><br><span class="line">            add(a - <span class="number">1</span>, b, c);</span><br><span class="line">            mx = max(mx, b);</span><br><span class="line">            mi = min(mi, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = mi - <span class="number">1</span>; i &lt; mx; ++i) &#123;</span><br><span class="line">            add(i + <span class="number">1</span>, i, <span class="number">-1</span>);</span><br><span class="line">            add(i, i + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        spfa(mi - <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dis[mx]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="M-POJ-3613"><a href="#M-POJ-3613" class="headerlink" title="M POJ 3613"></a>M POJ 3613</h2><h3 id="1-题目大意-9"><a href="#1-题目大意-9" class="headerlink" title="1. 题目大意"></a>1. 题目大意</h3><p>给出一张图， 求k边最短路， 即经过k条边的最短路。</p><h3 id="2-分析-9"><a href="#2-分析-9" class="headerlink" title="2. 分析"></a>2. 分析</h3><p>思考一下：如果一个矩阵，表示走<strong>k</strong>条边后，一张图的点与点的最短路径，(a,b)表示从a到b的最短路径，然后我们把它与自己，按照矩阵乘法的格式“<strong>相乘</strong>”，把其中的乘改为取min，c.a[i][j] = min(c.a[i][j],x.a[i][k]+y.a[k][j]) ， 那么两个矩阵”<strong>相乘</strong>“之后的结果就是 经过k + k条边后的最短路。</p><p>c中的一个点(a,b)，当我们用x矩阵和y矩阵求它时，我们枚举了x矩阵的a行所有数，与y矩阵的b列所有数，并且他们的坐标只能是相对应的，比如x矩阵的(a,2)这个点，相应的y矩阵点就是(2,b)，那么放到图上去理解，即从a点经过2点到b点的距离，类似的点不只有2，把所有点枚举完后，c.a[a][b]就是从a到b的最短距离。（意会一下）</p><p>这样下来，会得到走k+k条边的最短路径，对于其他的矩阵这样操作，得到的是他们两个，经过的边数相加的结果。（一个经过a条边后的矩阵 与 一个经过b条边后的矩阵这样操作后，是经过a+b条边后的矩阵，矩阵中存的是最短路径）。解释一下：向上面的例子一样，(a,2)(2,b)，是即从a点经过2点到b点的距离,因为x矩阵和y矩阵都是走k条边后的最短路径，那么x矩阵中的(a,2)是走k步后的最短路径，(2,b)也是，那么他们相加不就是走k+k条边后的最短路径吗？其他的矩阵一样。</p><p>部分转自 <a href="https://www.cnblogs.com/mjtcn/p/7308870.html" target="_blank" rel="noopener">https://www.cnblogs.com/mjtcn/p/7308870.html</a></p><p>因为就100头牛， 离散化一下。</p><p>那么就转化成矩阵快速幂问题了。</p><h3 id="3-AC代码-8"><a href="#3-AC代码-8" class="headerlink" title="3. AC代码"></a>3. AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ms(a, b) memset((a), (b), sizeof (a))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">std</span>::pair&lt;ll, ll&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;ans)</span> </span>&#123;</span><br><span class="line">    ll x = <span class="number">0</span>, w = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'-'</span>) w = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch)) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">'0'</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    ans = x * w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">matrix</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> m[<span class="number">205</span>][<span class="number">205</span>];</span><br><span class="line">    matrix()&#123;</span><br><span class="line">        ms(m, INF);</span><br><span class="line">    &#125;</span><br><span class="line">    matrix <span class="keyword">operator</span> * (<span class="keyword">const</span> matrix &amp; x) <span class="keyword">const</span>&#123;</span><br><span class="line">        matrix c;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k)&#123;</span><br><span class="line">                    c.m[i][j] = min(c.m[i][j], m[i][k] + x.m[k][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;x;</span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">qpow</span><span class="params">(matrix a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    matrix ans = a;</span><br><span class="line">    b--;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = ans * a;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;ma;</span><br><span class="line"><span class="keyword">int</span> k, t, s, e, a, b, c;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;k, &amp;t, &amp;s, &amp;e);</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;c, &amp;a, &amp;b);</span><br><span class="line">        <span class="keyword">if</span> (ma[a]) a = ma[a]; <span class="keyword">else</span> a = ma[a] = ++cnt;</span><br><span class="line">        <span class="keyword">if</span> (ma[b]) b = ma[b]; <span class="keyword">else</span> b = ma[b] = ++cnt;</span><br><span class="line">        x.m[a][b] = x.m[b][a] = c;</span><br><span class="line">    &#125;</span><br><span class="line">    n = cnt;</span><br><span class="line">    x = qpow(x, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, x.m[ma[s]][ma[e]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-后继-5"><a href="#4-后继-5" class="headerlink" title="4. 后继"></a>4. 后继</h3><ol><li>矩阵快速幂居然还能用重载 * 来写， 太美妙了。</li></ol><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎评论提问， 纠错&lt;/p&gt;
&lt;p&gt;文章篇幅较长， 请参考右侧&lt;strong&gt;文章目录&lt;/strong&gt;食用。&lt;/p&gt;
&lt;p&gt;专题链接： &lt;a href=&quot;https://vjudge.net/contest/352426&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SDNU_ACM_ICPC_2020_Winter_Practice_1st&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="解题报告" scheme="https://solodance.top/categories/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="矩阵快速幂" scheme="https://solodance.top/tags/%E7%9F%A9%E9%98%B5%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="dp" scheme="https://solodance.top/tags/dp/"/>
    
      <category term="stl" scheme="https://solodance.top/tags/stl/"/>
    
      <category term="博弈" scheme="https://solodance.top/tags/%E5%8D%9A%E5%BC%88/"/>
    
      <category term="矩阵" scheme="https://solodance.top/tags/%E7%9F%A9%E9%98%B5/"/>
    
      <category term="差分约束" scheme="https://solodance.top/tags/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/"/>
    
  </entry>
  
  <entry>
    <title>优先队列定义优先级的方法</title>
    <link href="https://solodance.top/2020/01/27/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%AE%9A%E4%B9%89%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://solodance.top/2020/01/27/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%AE%9A%E4%B9%89%E4%BC%98%E5%85%88%E7%BA%A7%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2020-01-27T11:45:04.425Z</published>
    <updated>2020-01-27T11:44:25.049Z</updated>
    
    <content type="html"><![CDATA[<p>默认优先级是从大到小.</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 最大值优先</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp1</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span> <span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &lt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最小值优先</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cmp2</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">operator</span> <span class="params">()</span> <span class="params">(<span class="keyword">int</span> &amp;a, <span class="keyword">int</span> &amp;b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a &gt; b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node1</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node1 &amp;temp) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b &lt; temp.a + temp.b; <span class="comment">// 以a + b 的值 最大值优先</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node2</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node2 &amp; temp) <span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b &gt; temp.a + temp.b; <span class="comment">// 以a + b 的值 最小值优先</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 最大值优先</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt;q1;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; , less&lt;<span class="keyword">int</span>&gt; &gt;q2; <span class="comment">// 注意 less&lt;int&gt;&gt;q2; 中间不加空格的话会报错， 因为是右移&gt;&gt; 运算符</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; , cmp1&gt;q3;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 最小值优先</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, greater&lt;<span class="keyword">int</span>&gt; &gt;q4; <span class="comment">// 注意 greater&lt;int&gt;&gt;q4; 中间不加空格的话会报错， 因为是右移&gt;&gt; 运算符</span></span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;, cmp2&gt; q5;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 结构体自定义优先级, 具体优先级顺序看上面</span></span><br><span class="line">    priority_queue&lt;node1&gt;q6;</span><br><span class="line">    priority_queue&lt;node2&gt;q7;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何理解结构体中overload的小于号呢？ (只能重载小于号)</p><ol><li>可以理解为重载后小于号作用是比较出数组中优先级更小的数据，如果返回的是某个数据值更大的一方则值越大优先级越小，相反则值越小优先级越大。</li><li>优先队列是输出优先级最高的数据的队列。</li><li>可以简单的记为与sort中的cmp函数效果相反。</li></ol><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;默认优先级是从大到小.&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://solodance.top/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Acm" scheme="https://solodance.top/tags/Acm/"/>
    
      <category term="优先队列" scheme="https://solodance.top/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
      <category term="数据结构" scheme="https://solodance.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Jetbrains实用技巧汇总</title>
    <link href="https://solodance.top/2020/01/27/Jetbrains%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
    <id>https://solodance.top/2020/01/27/Jetbrains%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</id>
    <published>2020-01-27T11:44:53.009Z</published>
    <updated>2020-02-11T03:09:35.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jetbrains-Tools-关闭-vim模式"><a href="#Jetbrains-Tools-关闭-vim模式" class="headerlink" title="Jetbrains Tools 关闭 vim模式"></a>Jetbrains Tools 关闭 vim模式</h2><pre><code>菜单栏 :tools-&gt;vim emulator</code></pre><a id="more"></a><h2 id="Jetbrains-Tools-在启动时取消-打开最近关闭的项目"><a href="#Jetbrains-Tools-在启动时取消-打开最近关闭的项目" class="headerlink" title="Jetbrains Tools 在启动时取消 打开最近关闭的项目"></a>Jetbrains Tools 在启动时取消 打开最近关闭的项目</h2><p><code>Settings-&gt;System Settings</code>取消勾选 <code>Reopen last project on startup</code></p><h2 id="Clion使用技巧"><a href="#Clion使用技巧" class="headerlink" title="Clion使用技巧"></a>Clion使用技巧</h2><p>原文地址： <a href="https://blog.csdn.net/langyu0826/article/details/52281142" target="_blank" rel="noopener">https://blog.csdn.net/langyu0826/article/details/52281142</a></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">快捷键配置</span></span><br><span class="line"></span><br><span class="line"><span class="meta">File-&gt;Setting-&gt;Keymap-&gt;Keymaps</span> <span class="string">选择Visual Studio风格</span></span><br><span class="line"></span><br><span class="line"><span class="attr">代码提示的匹配模式</span></span><br><span class="line"></span><br><span class="line"><span class="meta">File-&gt;Setting-&gt;Editor-&gt;Code</span> <span class="string">Completion Case sensitive completion选择First letter</span></span><br><span class="line"></span><br><span class="line"><span class="attr">智能提示</span></span><br><span class="line"></span><br><span class="line"><span class="meta">写代码的过程成，如果出现问题，例如漏写了一个参数，会智能提示，此时点击左侧的小灯泡或者按</span> <span class="string">Alt + Enter，IDE会给出建议的解决方案</span></span><br><span class="line"></span><br><span class="line"><span class="attr">代码生成</span></span><br><span class="line"></span><br><span class="line"><span class="meta">File-&gt;Setting—&gt;Live</span> <span class="string">Templates 默认有for, iter, itit，可以根据自己喜好添加</span></span><br><span class="line"></span><br><span class="line"><span class="attr">自定义快捷键</span></span><br><span class="line"></span><br><span class="line"><span class="attr">以下操作在“Setting-&gt;Keymap”中进行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">-&gt;Editor</span> <span class="string">Actions</span></span><br><span class="line"><span class="attr">Move</span> <span class="string">Caret to Next Word Ctrl+向右箭头 删除该快捷键</span></span><br><span class="line"><span class="attr">Move</span> <span class="string">Caret to Previous Word Ctrl+向左箭头 删除该快捷键</span></span><br><span class="line"></span><br><span class="line"><span class="meta">-&gt;Main</span> <span class="string">menu-&gt;Navigate</span></span><br><span class="line"><span class="attr">Back</span> <span class="string">Ctrl+向左箭头 修改成该快捷键</span></span><br><span class="line"><span class="attr">Forward</span> <span class="string">Ctrl+向右箭头 修改成该快捷键</span></span><br><span class="line"></span><br><span class="line"><span class="attr">解决快捷键与Ubuntu系统的冲突</span></span><br><span class="line"></span><br><span class="line"><span class="attr">以下操作在”系统设置-&gt;键盘-&gt;快捷键”中进行</span></span><br><span class="line"></span><br><span class="line"><span class="attr">-&gt;窗口</span></span><br><span class="line"><span class="meta">移动窗口</span> <span class="string">Alt+F7 删除该快捷键</span></span><br><span class="line"></span><br><span class="line"><span class="attr">-&gt;系统</span></span><br><span class="line"><span class="meta">锁定屏幕</span> <span class="string">super+L 修改成该快捷键</span></span><br><span class="line"></span><br><span class="line"><span class="attr">快捷键</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ 向左箭头 回退</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ 向右箭头 前进</span></span><br><span class="line"><span class="attr">ALT</span> <span class="string">+ 1 显隐工程栏</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ / 添加或删除注释</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Alt + L 格式化代码</span></span><br><span class="line"><span class="attr">Alt</span> <span class="string">+ F7 Find Usages</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ R 替换</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ B 在定义和申明之间跳转</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Shift + Backspace 回到最后编辑的地方</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ N 查找类</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ O 选取需要重写的方法</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ F12 快速查看类成员</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Q 快速查看文档</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ P 提示参数信息</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ H 查看继承树</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ E 查看最近浏览的文件</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Alt + B 查看接口、抽象类的实现类</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ F 搜索当前文件 注:按Esc，搜索框就会消失</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Shift + F 搜索整个工程或指定目录 注:连续按两次Esc，搜索框就会消失</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Shift + N 找文件</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ F7 找到某个类、变量、函数等在文中被使用到的的地方</span></span><br><span class="line"><span class="attr">Shift</span> <span class="string">+ Shift 全局搜索</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Alt + 7 查看类、对象、变量使用的地方</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Alt + -/+ 展开折叠当前函数、类</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Shift + -/+ 展开折叠所有函数、类</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Shift</span> <span class="string">+ F6 重新命名变量</span></span><br><span class="line"><span class="attr">Alt</span> <span class="string">+ insert 添加自动代码生成信息（插入set*()/get*()/构造器、equals、hashcode等）</span></span><br><span class="line"><span class="attr">Ctrl</span> <span class="string">+ Shift + 空格 提示信息（new后直接键入构造器、构造器内提供构造信息）</span></span><br></pre></td></tr></table></figure><h2 id="Clion输出中文乱码"><a href="#Clion输出中文乱码" class="headerlink" title="Clion输出中文乱码"></a>Clion输出中文乱码</h2><p>更改设置：<br><code>File -&gt; Settings -&gt; Default Settings -&gt; Editor -&gt; File Encodings:</code><br>Global Encoding: UTF-8<br>Project Encoding : UTF-8<br>Default encoding for properties files: UTF-8 </p><p>看图：<br><img src="http://imglf3.nosdn0.126.net/img/T0t4Z3Z5a254aFIvYUZDY3pYc29ad21ic1BmTXovNE4rUWFqNDk4STg3TzhHREJXZkF3QVVnPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="clion1"></p><p>别着急，还有一步：<br>这里选GBK 然后convert</p><p><img src="http://imglf6.nosdn0.126.net/img/T0t4Z3Z5a254aFIvYUZDY3pYc29aMjNCcnF3U215VUJUVFFWNXd6Uy9nYjFPTkhJam4yTCtnPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="clion2"></p><p><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFIvYUZDY3pYc29aNXlVMUdIY1RIcE4zUlRjOG8wQW1KTjlSUERBaDRlbVZnPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="clion3"></p><p>完事！</p><p>这里有个弊端就是每新建一个文件就要更改成GBK</p><p>这里有个大佬的博客有一个一劳永逸的办法，但是有失就有得， 自己取舍吧， 反正我觉得倒是无所谓。<br>大佬博客： <a href="https://blog.csdn.net/weixin_43851212/article/details/90485420" target="_blank" rel="noopener">链接</a></p><h2 id="为Clion配置mingw32和mingw64"><a href="#为Clion配置mingw32和mingw64" class="headerlink" title="为Clion配置mingw32和mingw64"></a>为Clion配置mingw32和mingw64</h2><h3 id="1-安装MinGW32-或者-MinGW64"><a href="#1-安装MinGW32-或者-MinGW64" class="headerlink" title="1. 安装MinGW32 或者 MinGW64"></a>1. 安装MinGW32 或者 MinGW64</h3><p>我不教怎么用官方的软件安装（我也不会， 直接交给你们一个技巧<br>MinGW32 和 MinGW64 选择其一安装即可</p><ol><li>安装 MinGW32 ： 安装codeblocks， <a href="http://www.codeblocks.org/downloads/26" target="_blank" rel="noopener">官方下载链接</a>， 在其安装目录里就有MinGW32</li><li>安装MinGW64: ： 同样， 安装devc++， <a href="https://sourceforge.net/projects/orwelldevcpp/" target="_blank" rel="noopener">下载链接</a> ， 在其安装目录里就有MinGW64</li></ol><h3 id="2-配置CLion-C-C-运行环境"><a href="#2-配置CLion-C-C-运行环境" class="headerlink" title="2. 配置CLion C/C++ 运行环境"></a>2. 配置CLion C/C++ 运行环境</h3><p>按照下图配置即可（若看不清就右击图片， 在新窗口打开， 或者复制图片地址在新窗口打开）<br><img src="http://imglf5.nosdn0.126.net/img/T0t4Z3Z5a254aFNDeUN6R2VydkJTRlRoWk96WkN3Q1g2cTlGOTV5SkNWcEk4YXNUUVI3ZTZ3PT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0" alt="1"></p><h3 id="3-新建项目配置文件"><a href="#3-新建项目配置文件" class="headerlink" title="3. 新建项目配置文件"></a>3. 新建项目配置文件</h3><p>在你项目的根目录下， 新建 <code>CMakeLists.txt</code>， 然后在其填入下列代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)</span><br><span class="line">project(project1) </span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 11)</span><br><span class="line"></span><br><span class="line">add_executable(project1 main.cpp)</span><br></pre></td></tr></table></figure><p>解释一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.10)   这个不用管</span><br><span class="line">project(project1)  括号里的是你的项目名称, 也就是你项目根文件夹的名称</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 11)  不用管</span><br><span class="line"></span><br><span class="line">add_executable(project1 main.cpp)  这句话的意思是 project1 项目下的 main.cpp 可以编译运行了</span><br><span class="line"></span><br><span class="line">add_executable(template template.cpp)  </span><br><span class="line">若是想运行多个cpp文件， 那就要这样配置， 第一个template 是另一个项目名称， 随便起（但不能和上面出现过的项目名相同）， template.cpp 是你想运行的另一个cpp文件</span><br><span class="line"></span><br><span class="line">你也可以添加很多个</span><br><span class="line">add_executable(template1 template1.cpp)  </span><br><span class="line">add_executable(template2 template2.cpp)  </span><br><span class="line">add_executable(template3 template3.cpp)</span><br></pre></td></tr></table></figure><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Jetbrains-Tools-关闭-vim模式&quot;&gt;&lt;a href=&quot;#Jetbrains-Tools-关闭-vim模式&quot; class=&quot;headerlink&quot; title=&quot;Jetbrains Tools 关闭 vim模式&quot;&gt;&lt;/a&gt;Jetbrains Tools 关闭 vim模式&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;菜单栏 :tools-&amp;gt;vim emulator&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="https://solodance.top/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="实用技巧" scheme="https://solodance.top/tags/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Jetbrains" scheme="https://solodance.top/tags/Jetbrains/"/>
    
  </entry>
  
  <entry>
    <title>关于处理博客旧文章的说明</title>
    <link href="https://solodance.top/2020/01/24/%E5%85%B3%E4%BA%8E%E5%A4%84%E7%90%86%E5%8D%9A%E5%AE%A2%E6%97%A7%E6%96%87%E7%AB%A0%E7%9A%84%E8%AF%B4%E6%98%8E/"/>
    <id>https://solodance.top/2020/01/24/%E5%85%B3%E4%BA%8E%E5%A4%84%E7%90%86%E5%8D%9A%E5%AE%A2%E6%97%A7%E6%96%87%E7%AB%A0%E7%9A%84%E8%AF%B4%E6%98%8E/</id>
    <published>2020-01-24T11:27:46.134Z</published>
    <updated>2020-01-26T03:02:18.047Z</updated>
    
    <content type="html"><![CDATA[<p>由于博客重做， 以前博客的文章显示时间都变成一样的了， 以后这个博客也不会怎么像这样大改了， 毕竟是怀念。</p><a id="more"></a><h3 id="先说以前文章的诟病"><a href="#先说以前文章的诟病" class="headerlink" title="先说以前文章的诟病"></a>先说以前文章的诟病</h3><p>markdown语法不标准</p><p>tags 乱写</p><p>分类也乱写</p><p>题解格式不理想，看起来乱七八糟的</p><h3 id="处理计划"><a href="#处理计划" class="headerlink" title="处理计划"></a>处理计划</h3><p>等着按时间把一些没用的博客， 看着不顺眼的博客， 都给整理一下， 去其糟粕， 取其精华。</p><p><strong>新年加油。</strong></p><pre><code>恰似你一低头的温柔，较弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  --mingfuyan    千万不要图快——如果没有足够的时间用来实践， 那么学得快， 忘得也快。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于博客重做， 以前博客的文章显示时间都变成一样的了， 以后这个博客也不会怎么像这样大改了， 毕竟是怀念。&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="https://solodance.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://solodance.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客国庆集训派对 H-Highway (dijk求树的直径（当然还有更优的）)</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20H-Highway%20(dijk%E6%B1%82%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%EF%BC%88%E5%BD%93%E7%84%B6%E8%BF%98%E6%9C%89%E6%9B%B4%E4%BC%98%E7%9A%84%EF%BC%89)/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20H-Highway%20(dijk%E6%B1%82%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%EF%BC%88%E5%BD%93%E7%84%B6%E8%BF%98%E6%9C%89%E6%9B%B4%E4%BC%98%E7%9A%84%EF%BC%89)/</id>
    <published>2020-01-23T13:42:35.154Z</published>
    <updated>2019-10-06T06:02:07.175Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="https://ac.nowcoder.com/acm/contest/1109/H" target="_blank" rel="noopener">题目链接</a><br>n个点从1-n, 有(n - 1)条边连接。<br>现在要重新修（n - 1）条路， 修i 到 j 所用的代价为i到j的最短路，<br>问最多的代价是多少</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>就是求树的直径， 然后跑两边最短路求其他点到直径两端点的最短路， 最后把最大值加起来就可。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="keyword">int</span>(<span class="number">1e9</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="keyword">int</span>(<span class="number">1e5</span>) + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u, v, ne;</span><br><span class="line">    ll w;</span><br><span class="line">&#125;ed[<span class="number">2</span> * N];</span><br><span class="line"><span class="keyword">int</span> n, cnt, head[N];</span><br><span class="line">ll dis1[N], dis2[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="keyword">sizeof</span> head);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, ll w)</span></span>&#123;</span><br><span class="line">    ed[cnt].u = u, ed[cnt].v = v, ed[cnt].w = w, ed[cnt].ne = head[u];</span><br><span class="line">    head[u] = cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dijk</span><span class="params">(ll dis[], <span class="keyword">int</span> st)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dis[i] = ll(<span class="number">1e15</span>);</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line">    priority_queue&lt;P, <span class="built_in">vector</span>&lt;P&gt;, greater&lt;P&gt; &gt;q;</span><br><span class="line">    dis[st] = <span class="number">0</span>;</span><br><span class="line">    q.emplace(<span class="number">0</span>, st);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> u = q.top().second;</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span> (vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[u]; ~i; i = ed[i].ne)&#123;</span><br><span class="line">            <span class="keyword">int</span> v = ed[i].v;</span><br><span class="line">            <span class="keyword">if</span> (dis[v] &gt; dis[u] + ed[i].w)&#123;</span><br><span class="line">                dis[v] = dis[u] + ed[i].w;</span><br><span class="line">                q.emplace(dis[v], v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans = <span class="number">0</span>, ansj;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)&#123;</span><br><span class="line">        <span class="keyword">if</span> (dis[i] != ll(<span class="number">1e15</span>) &amp;&amp; dis[i] &gt; ans)&#123;</span><br><span class="line">            ans = dis[i], ansj = i;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ansj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    ll c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">            add(a, b, c);</span><br><span class="line">            add(b, a, c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> s1 = dijk(dis1, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> s2 = dijk(dis1, s1);</span><br><span class="line">        dijk(dis1, s1);</span><br><span class="line">        dijk(dis2, s2);</span><br><span class="line">        ll ans = dis1[s2];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i == s1 || i == s2)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            ans += max(dis1[i], dis2[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">、</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/1109/H&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="2019牛客国庆集训派对" scheme="https://solodance.top/categories/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="树的直径" scheme="https://solodance.top/tags/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>2019牛客国庆集训派对 E-Partial Sum （绝对值的特殊性）</title>
    <link href="https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20E-Partial%20Sum%20%EF%BC%88%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7%EF%BC%89/"/>
    <id>https://solodance.top/2020/01/23/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9%20E-Partial%20Sum%20%EF%BC%88%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7%EF%BC%89/</id>
    <published>2020-01-23T13:42:35.139Z</published>
    <updated>2019-10-06T06:03:13.829Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p><a href="https://ac.nowcoder.com/acm/contest/1109/E" target="_blank" rel="noopener">题目链接</a><br>给定长为n的数组， 找到m组(L, R)， 使得<code>|sum（L,R）| - C</code>的和最大， 其中C为常数（输入中给出）， 每个(L, R)只出现一次。</p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>求区间前缀和， 因为绝对值的特性， <code>|sumi - sumj = sumj - sumi|</code> 所以前后减的顺序没关系， 他也没<br>要求具体是那m组， 所以sort后 最大减最小就可。</p><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, <span class="keyword">int</span>&gt; P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> ll llINF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="keyword">int</span>(<span class="number">1e9</span>) + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="keyword">int</span>(<span class="number">1e5</span>) + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> n, m, c, x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m &gt;&gt; c)&#123;</span><br><span class="line">        sum[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; x;</span><br><span class="line">            sum[i] = sum[i - <span class="number">1</span>] + x;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(sum, sum + n + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = n;</span><br><span class="line">        ll ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">            <span class="keyword">int</span> temp = sum[r] - sum[l] - c;</span><br><span class="line">            <span class="keyword">if</span> (temp &lt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            l++, r--;</span><br><span class="line">            ans += ll(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恰似你一低头的温柔，娇弱水莲花不胜寒风的娇羞， 我的心为你悸动不休。  <span class="comment">--mingfuyan</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;题目大意&quot;&gt;&lt;a href=&quot;#题目大意&quot; class=&quot;headerlink&quot; title=&quot;题目大意&quot;&gt;&lt;/a&gt;题目大意&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/1109/E&quot; target=&quot;_
      
    
    </summary>
    
    
      <category term="2019牛客国庆集训派对" scheme="https://solodance.top/categories/2019%E7%89%9B%E5%AE%A2%E5%9B%BD%E5%BA%86%E9%9B%86%E8%AE%AD%E6%B4%BE%E5%AF%B9/"/>
    
    
      <category term="acm" scheme="https://solodance.top/tags/acm/"/>
    
      <category term="绝对值的特殊性" scheme="https://solodance.top/tags/%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7/"/>
    
      <category term="思维" scheme="https://solodance.top/tags/%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
</feed>
